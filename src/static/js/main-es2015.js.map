{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/connections/awss3/awss3.component.ts","./src/app/connections/awss3/awss3.component.html","./src/app/connections/connectionlist/connectionlist.component.ts","./src/app/connections/connectionlist/connectionlist.component.html","./src/app/connections/newconnection/newconnection.component.ts","./src/app/connections/newconnection/newconnection.component.html","./src/app/connections/salesforce/salesforce.component.ts","./src/app/connections/salesforce/salesforce.component.html","./src/app/connections/searchconnections/searchconnections.component.ts","./src/app/connections/searchconnections/searchconnections.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/data/dimensiondata.service.ts","./src/app/dimensions/dimensions.component.ts","./src/app/explorer/explorer.component.ts","./src/app/explorer/explorer.component.html","./src/app/explorer/s3explorer/s3explorer.component.ts","./src/app/explorer/s3explorer/s3explorer.component.html","./src/app/general/sidsnackbar/sidsnackbar.component.ts","./src/app/general/sidsnackbar/sidsnackbar.component.html","./src/app/joblogs/joblogdetails/joblogdetails.component.ts","./src/app/joblogs/joblogdetails/joblogdetails.component.html","./src/app/joblogs/joblogs.component.ts","./src/app/joblogs/joblogs.component.html","./src/app/jobs/editjob/destselector/destselector.component.ts","./src/app/jobs/editjob/destselector/destselector.component.html","./src/app/jobs/editjob/editjob.component.ts","./src/app/jobs/editjob/editjob.component.html","./src/app/jobs/editjob/mapselector/mapselector.component.ts","./src/app/jobs/editjob/mapselector/mapselector.component.html","./src/app/jobs/editjob/sourceselector/sourceselector.component.ts","./src/app/jobs/editjob/sourceselector/sourceselector.component.html","./src/app/jobs/jobdetails/jobdetails.component.ts","./src/app/jobs/jobdetails/jobdetails.component.html","./src/app/jobs/jobs.component.ts","./src/app/jobs/jobs.component.html","./src/app/jobs/jobslist/jobslist.component.ts","./src/app/jobs/jobslist/jobslist.component.html","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/models/jobs.ts","./src/app/models/schedule.ts","./src/app/pipes/keys.ts","./src/app/query/query.component.ts","./src/app/query/query.component.html","./src/app/query/salesforcequery/salesforcequery.component.ts","./src/app/query/salesforcequery/salesforcequery.component.html","./src/app/schedules/editschedule/editschedule.component.ts","./src/app/schedules/editschedule/editschedule.component.html","./src/app/schedules/schedulelist/schedulelist.component.ts","./src/app/schedules/schedulelist/schedulelist.component.html","./src/app/schedules/schedulelog/schedulelog.component.ts","./src/app/schedules/schedulelog/schedulelog.component.html","./src/app/schedules/schedulerecord/schedulerecord.component.ts","./src/app/schedules/schedulerecord/schedulerecord.component.html","./src/app/schedules/schedules.component.ts","./src/app/schedules/schedules.component.html","./src/app/services/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/connections.service.ts","./src/app/services/dimensions.service.ts","./src/app/services/document.service.ts","./src/app/services/explorer.service.ts","./src/app/services/joblogs.service.ts","./src/app/services/jobs.service.ts","./src/app/services/password.service.ts","./src/app/services/salesforce.service.ts","./src/app/services/schedules.service.ts","./src/app/services/userprofiledata.service.ts","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/environments/hosttype.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    message = 'Verifying the connection...';\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _iconRegistry: MatIconRegistry,\n        private _domSanitizer: DomSanitizer\n\n    ) {\n\n        // this._iconRegistry.addSvgIcon('pdm_logo', this._domSanitizer.bypassSecurityTrustResourceUrl('/static/img/pdm_logo.svg'));\n\n    }\n\n}\n","<layout>\n</layout>","import { hostType } from '../environments/hosttype';\nexport let HOST_API: string;\nexport let HOST_ROOT: string;\n\nif (hostType === 'prod') {\n    HOST_API = 'https://sid.mitas.medibank.local/api/';\n    HOST_ROOT = 'https://sid.mitas.medibank.local/';\n}\nelse if (hostType === 'uat'){\n    HOST_API = 'https://sid.mitasdev.medibank.local/api/';\n    HOST_ROOT = 'https://sid.mitasdev.medibank.local/';\n}\nelse {\n    HOST_API = 'http://localhost:8080/api/';\n    HOST_ROOT = 'http://localhost:8080/';\n}\n","import { NgModule, Type } from '@angular/core';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\r\nimport { appRoutes, appRoutingProviders } from './app.routes';\r\n\r\nimport { AuthInterceptor } from './services/auth.interceptor';\r\n\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthService, AuthGuard } from './services/auth.service';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\n\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n\r\nimport { MatDialogModule }  from '@angular/material/dialog';\r\nimport { MatAutocompleteModule }  from '@angular/material/autocomplete';\r\nimport { MatButtonModule }  from '@angular/material/button';\r\nimport { MAT_DATE_LOCALE }  from '@angular/material/core';\r\nimport { MAT_DATE_FORMATS }  from '@angular/material/core';\r\nimport { DateAdapter }  from '@angular/material/core';\r\nimport { SnotifyModule, SnotifyService, ToastDefaults } from 'ng-snotify';\r\n\r\nimport { MomentDateModule, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { KeysPipe } from './pipes/keys';\r\n// import { ProviderService } from './services/provider.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\n\r\n//import { UserProfileService } from './services/userprofile.service';\r\nimport { UserProfileDataService } from './services/userprofiledata.service';\r\nimport { SearchConnectionsComponent } from './connections/searchconnections/searchconnections.component';\r\nimport { JobsComponent } from './jobs/jobs.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { NewconnectionComponent } from './connections/newconnection/newconnection.component';\r\nimport { SalesforceComponent } from './connections/salesforce/salesforce.component';\r\nimport { Awss3Component } from './connections/awss3/awss3.component';\r\nimport { JoblogsComponent } from './joblogs/joblogs.component';\r\nimport { SchedulesComponent } from './schedules/schedules.component';\r\nimport { SchedulelistComponent } from './schedules/schedulelist/schedulelist.component';\r\nimport { SchedulerecordComponent } from './schedules/schedulerecord/schedulerecord.component';\r\n\r\nimport { DimensionDataService } from './data/dimensiondata.service';\r\nimport { DimensionsComponent } from './dimensions/dimensions.component';\r\nimport { JobslistComponent } from './jobs/jobslist/jobslist.component';\r\nimport { DimensionsService } from './services/dimensions.service';\r\nimport { JobsService } from './services/jobs.service';\r\nimport { ConnectionlistComponent } from './connections/connectionlist/connectionlist.component';\r\nimport { ExplorerComponent } from './explorer/explorer.component';\r\nimport { S3explorerComponent } from './explorer/s3explorer/s3explorer.component';\r\nimport { SourceselectorComponent } from './jobs/editjob/sourceselector/sourceselector.component';\r\nimport { DocumentService } from './services/document.service';\r\nimport { DestselectorComponent } from './jobs/editjob/destselector/destselector.component';\r\nimport { SidSnackbarComponent } from './general/sidsnackbar/sidsnackbar.component';\r\nimport { JobdetailsComponent } from './jobs/jobdetails/jobdetails.component';\r\nimport { EditjobComponent } from './jobs/editjob/editjob.component';\r\nimport { PasswordService } from './services/password.service';\r\nimport { JoblogdetailsComponent } from './joblogs/joblogdetails/joblogdetails.component';\r\nimport { SchedulelogComponent } from './schedules/schedulelog/schedulelog.component';\r\nimport { SalesforceService } from './services/salesforce.service';\nimport { MapselectorComponent } from './jobs/editjob/mapselector/mapselector.component';\nimport { EditscheduleComponent } from './schedules/editschedule/editschedule.component';\nimport { QueryComponent } from './query/query.component';\nimport { SalesforcequeryComponent } from './query/salesforcequery/salesforcequery.component';\r\n\r\n\r\nexport const MY_FORMATS = {\r\n    parse: {\r\n      dateInput: 'DD/MM/YYYY',\r\n    },\r\n    display: {\r\n      dateInput: 'DD/MM/YYYY',\r\n      monthYearLabel: 'MM YYYY',\r\n      dateA11yLabel: 'DD/MM/YYYY',\r\n      monthYearA11yLabel: 'MM YYYY',\r\n    },\r\n  };\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LayoutComponent,\r\n        DashboardComponent,\r\n        KeysPipe,\r\n        LoginComponent,\r\n        LogoutComponent,\r\n        SearchConnectionsComponent,\r\n        JobsComponent,\r\n        SettingsComponent,\r\n        NewconnectionComponent,\r\n        SalesforceComponent,\r\n        Awss3Component,\r\n        JoblogsComponent,\r\n        SchedulesComponent,\r\n        SchedulelistComponent,\r\n        SchedulerecordComponent,\r\n        DimensionsComponent,\r\n        JobslistComponent,\r\n        ConnectionlistComponent,\r\n        ExplorerComponent,\r\n        S3explorerComponent,\r\n        SourceselectorComponent,\r\n        DestselectorComponent,\r\n        SidSnackbarComponent,\r\n        JobdetailsComponent,\r\n        EditjobComponent,\r\n        JoblogdetailsComponent,\r\n        SchedulelogComponent,\r\n        MapselectorComponent,\r\n        EditscheduleComponent,\r\n        QueryComponent,\r\n        SalesforcequeryComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        SharedModule,\r\n        HttpClientModule,\r\n        HttpClientXsrfModule.withOptions({\r\n            cookieName: 'csrftoken',\r\n            headerName: 'X-CSRFToken',\r\n        }),\r\n        appRoutes,\r\n        MatButtonToggleModule,\r\n        MatButtonModule,\r\n        FormsModule,\r\n        // new adds\r\n        MatDialogModule,\r\n        MatAutocompleteModule,\r\n        CommonModule,\r\n        SnotifyModule,\r\n    ],\r\n    providers: [\r\n      UserAuthService,\r\n      AuthGuard,\r\n      {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: AuthInterceptor,\r\n        multi: true\r\n      },\r\n//      UserProfileService,\r\n      UserProfileDataService,\r\n      DimensionDataService,\r\n      DimensionsService,\r\n      JobsService,\r\n      DocumentService,\r\n      {provide: MAT_DATE_LOCALE, useValue: 'en-au'},\r\n      {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n      {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\r\n      {provide: 'SnotifyToastConfig', useValue: ToastDefaults},\r\n      SnotifyService,\r\n      SidSnackbarComponent,\r\n      PasswordService,\r\n      SalesforceService\r\n    ],\r\n    entryComponents: [],\r\n    exports: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './services/auth.service';\r\n\r\n// import { LayoutComponent } from './layout/layout.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { SearchConnectionsComponent } from './connections/searchconnections/searchconnections.component';\r\nimport { JobsComponent } from './jobs/jobs.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { NewconnectionComponent } from './connections/newconnection/newconnection.component';\r\nimport { JoblogsComponent } from './joblogs/joblogs.component';\r\nimport { SchedulesComponent } from './schedules/schedules.component';\r\nimport { ExplorerComponent } from './explorer/explorer.component';\r\nimport { JobdetailsComponent } from './jobs/jobdetails/jobdetails.component';\r\nimport { EditjobComponent } from './jobs/editjob/editjob.component';\r\nimport { JoblogdetailsComponent } from './joblogs/joblogdetails/joblogdetails.component';\r\nimport { SchedulerecordComponent } from './schedules/schedulerecord/schedulerecord.component';\r\nimport { EditscheduleComponent } from './schedules/editschedule/editschedule.component';\r\nimport { QueryComponent } from './query/query.component';\r\n\r\nexport const routes: Routes = [\r\n    { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n    { path: 'login', component: LoginComponent},\r\n    { path: 'logout', component: LogoutComponent},\r\n    { path: 'connections', component: SearchConnectionsComponent, canActivate: [AuthGuard]},\r\n    { path: 'jobs', component: JobsComponent, canActivate: [AuthGuard]},\r\n    { path: 'jobdetails/:id', component: JobdetailsComponent, canActivate: [AuthGuard]},\r\n    { path: 'editjob/:id/:type', component: EditjobComponent, canActivate: [AuthGuard]},\r\n\r\n    { path: 'settings', component: SettingsComponent, canActivate: [AuthGuard]},\r\n    { path: 'newconnection', component: NewconnectionComponent, canActivate: [AuthGuard]},\r\n    { path: 'joblogs', component: JoblogsComponent, canActivate: [AuthGuard]},\r\n    { path: 'schedule', component: SchedulesComponent, canActivate: [AuthGuard]},\r\n    { path: 'explorer', component: ExplorerComponent, canActivate: [AuthGuard]},\r\n    { path: 'joblogdetails/:id', component: JoblogdetailsComponent, canActivate: [AuthGuard]},\r\n    { path: 'scheduledetails/:id', component: SchedulerecordComponent, canActivate: [AuthGuard]},\r\n    { path: 'editschedule/:id/:type', component: EditscheduleComponent, canActivate: [AuthGuard]},\r\n    { path: 'query', component: QueryComponent, canActivate: [AuthGuard]},\r\n\r\n];\r\n\r\nexport const appRoutingProviders: any[] = [\r\n\r\n];\r\n\r\nexport const appRoutes: any = RouterModule.forRoot(routes, { useHash: true });\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms'; // new add\nimport { FormControl } from '@angular/forms';\n\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { ConnectionsService } from '../../services/connections.service';\nimport { IS3Connector } from '../../models/awss3';\nimport { IConnectors, IConnectorDetails } from '../../models/connection';\nimport { IDimSystemTypes } from '../../models/dimensions';\nimport { DimensionDataService } from '../../data/dimensiondata.service';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n@Component({\n  selector: 'awss3-connection',\n  templateUrl: './awss3.component.html',\n  styleUrls: ['./awss3.component.css']\n})\nexport class Awss3Component implements OnInit {\n\n  @Input()\n  connector: IConnectorDetails;\n\n  @Output('close')\n  closeflag: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  queryType = 'new';\n  s3connector: IS3Connector;\n  connectionForm: FormGroup; // new form fields\n  errorFlag: boolean = false;\n  dataloaded = false;\n  showForm = true;\n  dimSystemTypes: Array<IDimSystemTypes>;\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private fb: FormBuilder,\n    private connectionService: ConnectionsService,\n    private dimensionDataService: DimensionDataService,\n    private sidSnackbarComponent: SidSnackbarComponent\n  ) {\n\n    // this.showForm = true;\n    this.getDimensions();\n    this.createConnectorForm();\n    this.patchForm();\n  }\n\n  ngOnInit(): void {\n    // console.log(this.connector);\n    if (this.connector) {\n      this.patchForm()\n    }\n\n  }\n\n  createConnectorForm() {\n    this.connectionForm = this.fb.group({\n      query_type: [{ value: 'new', disabled: false }, [Validators.required]],\n      conn_id: [{ value: -1, disabled: false }],\n      name: [{ value: '', disabled: false }, [Validators.required]],\n      conn_type: [{ value: 'AWS_S3', disabled: false }, [Validators.required]],\n      conn_system_type: [{ value: '', disabled: false }, [Validators.required]],\n      aws_access_key_id: [{ value: '', disabled: false }, [Validators.required]],\n      aws_secret_access_key: [{ value: '', disabled: false }, [Validators.required]],\n      bucket_name: [{ value: '', disabled: false }, [Validators.required]],\n      aws_region: [{ value: '', disabled: false }, [Validators.required]],\n\n    })\n  }\n  patchForm() {\n    // patch data from this.connector\n    if (this.connector != null) {\n      this.connectionForm.patchValue({\n        conn_id: this.connector.conn_id,\n        name: this.connector.name,\n        conn_type: 'AWS_S3',\n        conn_system_type: this.connector.conn_system_type,\n        aws_access_key_id: this.connector.s3auth.aws_access_key_id,\n        aws_secret_access_key: this.connector.s3auth.aws_secret_access_key,\n        bucket_name: this.connector.s3auth.bucket_name,\n        aws_region: this.connector.s3auth.aws_region\n      })\n      if (this.connector.query_type){\n        this.connectionForm.patchValue({\n          query_type: this.connector.query_type\n        })\n      }\n    }\n    this.showForm = true;\n  }\n  getDimensions(){\n    this._loadingService.register('loadingsiddimconn');\n    this.dimensionDataService.dimensionRecord.subscribe(\n      result => {\n        this._loadingService.resolve('loadingsiddimconn')\n        this.dimSystemTypes = result.records.dimsystemtypes;\n        this.dataloaded = true;\n\n      }\n    )\n\n  }\n  onSubmit(){\n    if(this.connectionForm.invalid){\n      this.sidSnackbarComponent.showMessage('Invalid Form: Please fill the highlighted fields');\n      return\n    }\n\n    this._loadingService.register('loadingsiddimconn');\n\n    this.connectionService.updateConnection(\n      this.connectionForm\n    ).subscribe(\n      result => {\n        this._loadingService.resolve('loadingsiddimconn')\n          this.sidSnackbarComponent.showMessage(result.message);\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsiddimconn');\n        this.sidSnackbarComponent.systemError();\n      })\n\n  }\n\n  onCancel(){\n    this.showForm = false;\n    this.closeflag.emit(true);\n  }\n\n   toggleSensitiveField(fieldName) {\n    var field = (<HTMLInputElement>document.getElementById(fieldName));\n    if (field.type === \"password\") {\n      field.type = \"text\";\n    } else {\n      field.type = \"password\";\n    }\n  }\n\n\n}\n","<div *tdLoading=\"'loadingsiddimconn'; mode:'indeterminate';\ntype:'linear'; strategy:'overlay'; color:'primary'\">\n\n<div *ngIf=\"dataloaded && showForm\" class=\"sidcontainer\">\n\n    <mat-card>\n        <mat-card-title>S3 connection</mat-card-title>\n        <div mat-subheader>Connection details</div>\n\n        <!-- <div *ngIf=\"hasError\" class=\"top-margin-10px\">\n            <td-message label=\"Error!\" sublabel=\"{{errorMessages}}\" color=\"warn\" icon=\"error\">\n            </td-message>\n        </div> -->\n\n        <form [formGroup]=\"connectionForm\">\n            <div layout=\"row\">\n                <mat-form-field flex>\n                    <input matInput placeholder=\"Connector Name\" formControlName=\"name\" />\n                </mat-form-field>\n\n                <mat-form-field flex>\n                    <mat-select placeholder=\"System Type\" formControlName=\"conn_system_type\">\n                        <mat-option *ngFor=\"let type of dimSystemTypes\" [value]=\"type.system_type\">\n                            {{ type.description }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n            </div>\n            <div layout=\"row\">\n                <mat-form-field flex>\n                    <mat-icon color=\"primary\"  (click)=\"toggleSensitiveField('access_key')\" matSuffix>\n                        visibility</mat-icon>\n                    <input matInput placeholder=\"Access Key\" type=\"password\" minlength=\"4\"\n                        id=\"access_key\"\n                        formControlName=\"aws_access_key_id\" />\n                </mat-form-field>\n                <mat-form-field flex>\n                    <mat-icon color=\"primary\"  (click)=\"toggleSensitiveField('secret_key')\" matSuffix>\n                        visibility</mat-icon>\n                    <input matInput placeholder=\"Secret Key\" type=\"password\" minlength=\"4\"\n                        id=\"secret_key\"\n                        formControlName=\"aws_secret_access_key\" />\n                </mat-form-field>\n            </div>\n            <div layout=\"row\">\n                <mat-form-field flex>\n                    <input matInput placeholder=\"Bucket Name\" minlength=\"4\"\n                        formControlName=\"bucket_name\" />\n                </mat-form-field>\n                <mat-form-field flex>\n                    <input matInput placeholder=\"AWS Region\" minlength=\"4\"\n                        formControlName=\"aws_region\" />\n                </mat-form-field>\n\n            </div>\n\n            <mat-divider></mat-divider>\n            <div layout=\"row\" class=\"pad-sm\" class=\"top-margin-10px\">\n                <button mat-fab color=\"primary\" (click)=\"onSubmit()\">\n                    <mat-icon>done</mat-icon>\n                </button>\n                &nbsp;\n                <button mat-fab color=\"warn\" (click)=\"onCancel()\">\n                    <mat-icon>clear</mat-icon>\n                </button>\n\n            </div>\n\n\n        </form>\n\n    </mat-card>\n\n</div>\n\n\n</div>","import { Component, EventEmitter, OnInit, Input, Output, ChangeDetectorRef } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { ConnectionsService } from '../../services/connections.service';\nimport { IConnectionRecords, IConnectors, IConnectorDetails, ISFAuth, IS3Auth } from '../../models/connection';\nimport { IDimConnectors } from '../../models/dimensions';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'connectionlist',\n  templateUrl: './connectionlist.component.html',\n  styleUrls: ['./connectionlist.component.css']\n})\nexport class ConnectionlistComponent implements OnInit {\n\n  connectionRecords: IConnectionRecords;\n  datarecords: Array<IConnectors>;\n  rowSelected = false;\n  selectedConnRecord: IConnectorDetails = {\n    conn_id: -1, conn_system_type: '',\n    conn_type: '', name: '',\n    conn_logo: '', create_date: '', modified_date: '',\n    query_type: 'update',\n\n    sfauth: {\n      auth_username: '', auth_password: '',\n      auth_host: '', oauth_object_id: '', security_token: ''\n    },\n    s3auth: {\n      aws_access_key_id: '',\n      aws_secret_access_key: '', bucket_name: '', aws_region: ''\n    }\n  }\n\n  @Input()\n  filter: string = 'all';\n\n  @Input()\n  gridcomp: boolean = true;\n\n  @Input()\n  shownew: boolean = true;\n\n  @Output('connection')\n  connection: EventEmitter<IConnectorDetails> = new EventEmitter<IConnectorDetails>();\n\n  dataloaded = false;\n  errorMessage: string;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _loadingService: TdLoadingService,\n    private router: Router,\n    private connectionsService: ConnectionsService,\n    private sidSnackbarComponent: SidSnackbarComponent\n  ) {\n    this.getConnections();\n\n  }\n\n  ngOnInit(): void {\n    this.getConnections();\n\n  }\n\n  getConnections() {\n    this._loadingService.register('loadingsid');\n\n    this.connectionsService.getConnections().subscribe(\n      result => {\n        this.connectionRecords = result;\n        // we have to filter the records\n        this.filterRecords();\n        this._loadingService.resolve('loadingsid')\n\n        this.dataloaded = true;\n        this._changeDetectorRef.detectChanges();\n\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsid');\n        this.sidSnackbarComponent.systemError();\n\n      })\n\n  }\n\n  filterRecords() {\n    // angular does not detect changes in the array\n    // so best to load this temporary\n    let newdatarecords = this.connectionRecords.records.connectors;\n    if (this.filter == 'input') {\n      newdatarecords = this.connectionRecords.records.connectors.filter(\n        (obj => obj.conn_type === 'AWS_S3' || obj.conn_type === 'File' || obj.conn_type == 'Salesforce')\n      );\n    }\n    else if (this.filter == 'output') {\n      newdatarecords = this.connectionRecords.records.connectors.filter(\n        (obj => obj.conn_type === 'AWS_S3' || obj.conn_type === 'File' || obj.conn_type == 'Salesforce')\n        // (obj => obj.conn_type == 'Salesforce')\n      );\n    }\n    else if(this.filter == 'AWS_S3'){\n      newdatarecords = this.connectionRecords.records.connectors.filter(\n        (obj => obj.conn_type === 'AWS_S3')\n      );\n    }\n    else if(this.filter == 'Salesforce'){\n      newdatarecords = this.connectionRecords.records.connectors.filter(\n        (obj => obj.conn_type === 'Salesforce')\n      );\n    }\n\n    // this.datarecords = newdatarecords;\n    this.datarecords = Object.assign([], newdatarecords);\n\n\n  }\n\n  editConn(conn: IConnectors) {\n    this.populateComp(conn);\n    this.connection.emit(this.selectedConnRecord)\n  }\n\n\n  populateComp(conn: IConnectors) {\n    // populate sf details\n\n    this.selectedConnRecord.conn_id = conn.id;\n    this.selectedConnRecord.conn_system_type = conn.conn_system_type;\n    this.selectedConnRecord.conn_type = conn.conn_type;\n    this.selectedConnRecord.name = conn.name;\n    this.selectedConnRecord.conn_logo = conn.conn_logo;\n    this.selectedConnRecord.query_type = 'update';\n    // now we find corresponding auth details\n\n    let auth_rec;\n    auth_rec = this.searchAuth(conn.id, conn.name, conn.conn_type);\n\n    if (!auth_rec) {\n      // error\n      if(conn.conn_type != 'File'){\n        this.sidSnackbarComponent.showMessage('Error: Auth record not found');\n\n      }\n      return\n    }\n    if (conn.conn_type == 'Salesforce') {\n      this.selectedConnRecord.sfauth.auth_host = auth_rec.auth_host;\n      this.selectedConnRecord.sfauth.auth_password = auth_rec.auth_password;\n      this.selectedConnRecord.sfauth.auth_username = auth_rec.auth_username;\n      this.selectedConnRecord.sfauth.security_token = auth_rec.security_token;\n\n    }\n    else if (conn.conn_type == 'AWS_S3') {\n      this.selectedConnRecord.s3auth.aws_access_key_id = auth_rec.aws_access_key_id;\n      this.selectedConnRecord.s3auth.aws_secret_access_key = auth_rec.aws_secret_access_key;\n      this.selectedConnRecord.s3auth.bucket_name = auth_rec.bucket_name;\n      this.selectedConnRecord.s3auth.aws_region = auth_rec.aws_region;\n    }\n\n  }\n\n  searchAuth(conn_id, conn_name, conn_type) {\n    // find appropriate Auth details for connector\n    let searchDataset = [];\n    if (this.connectionRecords.status == 'ok') {\n\n      if (conn_type == 'Salesforce') {\n        searchDataset = this.connectionRecords.records.sfauth;\n      }\n      else if (conn_type == 'AWS_S3') {\n        searchDataset = this.connectionRecords.records.s3auth;\n      }\n\n    }\n    if (!searchDataset || searchDataset.length < 1) {\n      return null\n    }\n    let objIndex = searchDataset.findIndex(\n      (obj => obj.id === conn_id && obj.name == conn_name));\n    if (objIndex > -1) {\n      return searchDataset[objIndex]\n    }\n    return null\n  }\n\n\n  newConn() {\n    this.router.navigate(['newconnection']);\n  }\n\n  filterConnector(displayName: string = '') {\n\n    this.datarecords = this.connectionRecords.records.connectors.filter(\n      (obj) => {\n        return obj.name.toLowerCase().indexOf(displayName.toLocaleLowerCase()) > -1;\n      });\n\n\n  }\n\n}\n","<div class=\"rcontainer\">\n    <div *tdLoading=\"'loadingsid'; mode:'indeterminate';\n  type:'linear'; strategy:'overlay'; color:'primary'\">\n      <div *ngIf=\"dataloaded\">\n        <div *ngIf=\"gridcomp\">\n          <mat-grid-list cols=\"3\" rowHeight=\"3:1\" gutterSize=\"20px\">\n            <mat-grid-tile *ngIf=\"shownew\">\n              <mat-list>\n                <mat-list-item style=\"cursor: pointer\" (click)=\"newConn()\">\n                  <mat-icon color=\"primary\" matListIcon>add</mat-icon>\n                  <div mat-line>New Connection</div>\n                </mat-list-item>\n              </mat-list>\n\n            </mat-grid-tile>\n            <mat-grid-tile *ngFor=\"let con of datarecords\" style=\"cursor: pointer\">\n              <mat-list>\n                <mat-list-item (click)=\"editConn(con)\">\n                  <img matListAvatar [src]=\"con.conn_logo\" />\n                  <div mat-line>{{con.name}}</div>\n                  <div mat-line>System Type: {{con.conn_system_type}}</div>\n                  <div mat-line>Creation Date: {{con.create_date}}</div>\n\n                </mat-list-item>\n              </mat-list>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </div>\n        <div *ngIf=\"!gridcomp\">\n\n              <mat-list [style.width.px]=\"340\">\n                <mat-list-item>\n                  <td-search-box backIcon=\"arrow_back\"\n                  placeholder=\"Filter Connector\"\n                  [showUnderline]=\"false\"\n                  [alwaysVisible]=\"true\"\n                  (searchDebounce)=\"filterConnector($event)\"\n                  flex>\n                  </td-search-box>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <td-virtual-scroll-container #virtualScroll\n                [style.height.px]=\"300\"\n                [data]=\"datarecords\">\n                  <ng-template let-row=\"row\" let-last=\"last\" tdVirtualScrollRow>\n                    <mat-list-item style=\"cursor: pointer\" (click)=\"editConn(row)\">\n                      <img matListAvatar [src]=\"row.conn_logo\" />\n                      <div mat-line>{{row.name}}</div>\n                      <div mat-line>System Type: {{row.conn_system_type}}</div>\n\n                    </mat-list-item>\n                    <mat-divider *ngIf=\"!last\" [inset]=\"true\"></mat-divider>\n                  </ng-template>\n                </td-virtual-scroll-container>\n              </mat-list>\n\n\n        </div>\n\n\n      </div>\n\n    </div>\n\n  </div>","import { Component, OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms'; // new add\nimport { FormControl } from '@angular/forms';\n\nimport { ITdDataTableColumn } from '@covalent/core/data-table';\n\n\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { ConnectionsService } from '../../services/connections.service';\nimport { IDimRecords, IDimConnectors } from '../../models/dimensions';\nimport { ISFConnector } from '../../models/salesforce';\nimport { IS3Connector } from '../../models/awss3';\nimport { DimensionDataService } from '../../data/dimensiondata.service';\n\nimport { SalesforceComponent } from '../salesforce/salesforce.component';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'app-newconnection',\n  templateUrl: './newconnection.component.html',\n  styleUrls: ['./newconnection.component.css']\n})\nexport class NewconnectionComponent implements OnInit {\n  // dimconnectionRecords: IDimRecords;\n  dimConnections: Array<IDimConnectors>;\n  dataloaded = false;\n  allowForm = false;\n  errorMessage: string;\n  selectedConn: IDimConnectors;\n  sfInputRecord: ISFConnector;\n  s3InputRecord: IS3Connector;\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private router: Router,\n    private connectionsService: ConnectionsService,\n    private dimensionDataService: DimensionDataService,\n    private sidSnackbarComponent: SidSnackbarComponent\n\n  ) {\n\n    this.getConnections();\n  }\n\n  ngOnInit(): void {\n  }\n\n  getConnections() {\n    this._loadingService.register('loadingsidconn');\n\n    this.dimensionDataService.dimensionRecord.subscribe(\n      result => {\n        this._loadingService.resolve('loadingsidconn');\n        if (result.records) {\n          this.dimConnections = result.records.dimconnectors;\n          this.dataloaded = true;\n\n        }\n\n      }\n    )\n\n\n  }\n\n  connSelected(conn: IDimConnectors) {\n    this.selectedConn = conn;\n\n    if (conn.conn_name == 'Salesforce' || conn.conn_name == 'AWS_S3') {\n      this.allowForm = true;\n      // this.errorMessage = 'Connector is work in progress and not allowed at this stage';\n    }\n    else {\n      this.allowForm = false;\n      this.sidSnackbarComponent.showMessage('Connector is disabled');\n\n    }\n  }\n\n  searchConn() {\n    this.router.navigate(['connections']);\n  }\n\n}\n","<div *tdLoading=\"'loadingsidconn'; mode:'indeterminate';\ntype:'linear'; strategy:'overlay'; color:'primary'\">\n    <div *ngIf=\"dataloaded\">\n        <div layout=\"row\">\n            <button mat-button color=\"primary\" (click)=\"searchConn()\">Back to connection</button>\n        </div>\n\n        <div layout=\"row\">\n\n            <div layout=\"column\" style=\"padding-left: 20px;\">\n                <mat-card>\n                    <span layout=\"row\">\n                        <mat-card-title>Setup a new connection</mat-card-title>\n                    </span>\n\n                    <span layout=\"row\">\n\n                        <mat-list>\n                            <div mat-subheader>Please Select Connector</div>\n                            <mat-list-item *ngFor=\"let item of dimConnections\" style=\"cursor: pointer\"\n                                (click)=\"connSelected(item)\">\n                                <img matListAvatar [src]=\"item.conn_logo_path\" />\n                                <!-- <div mat-line /> -->\n                                <div mat-line>{{item.conn_name}}</div>\n                                <div mat-line> {{item.description}} </div>\n                            </mat-list-item>\n                        </mat-list>\n                        <!-- <span *ngIf=\"allowForm\" layout=\"column\">\n\n                <div mat-subheader>Please fill the connection details</div>\n\n        </span> -->\n                    </span>\n                </mat-card>\n            </div>\n            <div layout=\"column\" style=\"padding-left: 20px;\" flex>\n\n                <div *ngIf=\"allowForm\">\n                    <div *ngIf=\"selectedConn.conn_name == 'Salesforce' \">\n                        <salesforce-connection [connector]=\"sfInputRecord\">\n                      </salesforce-connection>\n\n                      </div>\n                    <div *ngIf=\"selectedConn.conn_name == 'AWS_S3' \">\n                        <awss3-connection [connector]=\"s3InputRecord\">\n                        </awss3-connection>\n                      </div>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms'; // new add\nimport { FormControl } from '@angular/forms';\n\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { ConnectionsService } from '../../services/connections.service';\nimport { ISFConnector } from '../../models/salesforce';\nimport { IConnectorDetails } from '../../models/connection';\nimport { IDimSystemTypes } from '../../models/dimensions';\nimport { DimensionDataService } from '../../data/dimensiondata.service';\nimport { JobsService } from '../../services/jobs.service';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'salesforce-connection',\n  templateUrl: './salesforce.component.html',\n  styleUrls: ['./salesforce.component.css']\n})\nexport class SalesforceComponent implements OnInit {\n\n  @Input()\n  connector: IConnectorDetails;\n\n  @Output('close')\n  closeflag: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  queryType = 'new';\n  sfconnector: ISFConnector;\n  connectionForm: FormGroup; // new form fields\n  dataloaded = false;\n  hasError = false;\n  showForm = true;\n  dimSystemTypes: Array<IDimSystemTypes>;\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private fb: FormBuilder,\n    private connectionService: ConnectionsService,\n    private dimensionDataService: DimensionDataService,\n    private jobsService: JobsService,\n    private sidSnackbarComponent: SidSnackbarComponent\n\n  ) {\n    // this.showForm = true;\n    this.getDimensions();\n    this.createConnectorForm();\n    this.patchForm();\n  }\n\n  ngOnInit(): void {\n    // console.log(this.connector);\n    if (this.connector) {\n      this.patchForm()\n    }\n\n  }\n\n  createConnectorForm() {\n    this.connectionForm = this.fb.group({\n      query_type: [{ value: 'new', disabled: false }, [Validators.required]],\n      conn_id: [{ value: -1, disabled: false }],\n      name: [{ value: '', disabled: false }, [Validators.required]],\n      conn_type: [{ value: 'Salesforce', disabled: false }, [Validators.required]],\n      conn_system_type: [{ value: '', disabled: false }, [Validators.required]],\n      auth_username: [{ value: '', disabled: false }, [Validators.required]],\n      auth_password: [{ value: '', disabled: false }, [Validators.required]],\n      security_token: [{ value: '', disabled: false }, [Validators.required]],\n      auth_host: [{ value: '', disabled: false }],\n      oauth_key: [{ value: '', disabled: false }],\n\n    })\n  }\n  patchForm() {\n    // patch data from this.connector\n    if (this.connector != null) {\n      this.connectionForm.patchValue({\n        conn_id: this.connector.conn_id,\n        name: this.connector.name,\n        conn_type: 'Salesforce',\n        conn_system_type: this.connector.conn_system_type,\n        auth_username: this.connector.sfauth.auth_username,\n        auth_host: this.connector.sfauth.auth_host,\n        auth_password: this.connector.sfauth.auth_password,\n        security_token: this.connector.sfauth.security_token\n      })\n      if (this.connector.query_type){\n        this.connectionForm.patchValue({\n          query_type: this.connector.query_type\n        })\n      }\n    }\n    this.showForm = true;\n    // console.log(this.connectionForm);\n    // console.log(this.connector);\n\n  }\n  getDimensions(){\n    this._loadingService.register('loadingsiddimconn');\n\n    this.dimensionDataService.dimensionRecord.subscribe(\n      result => {\n        this._loadingService.resolve('loadingsiddimconn')\n        this.dimSystemTypes = result.records.dimsystemtypes;\n        this.dataloaded = true;\n\n      }\n    )\n  }\n  onSubmit(){\n    let msg = 'Record Saved';\n    if(this.connectionForm.invalid){\n      this.sidSnackbarComponent.showMessage('Invalid Form: Please fill the highlighted fields');\n      return\n    }\n\n    this._loadingService.register('loadingsiddimconn');\n\n    this.connectionService.updateConnection(\n      this.connectionForm\n    ).subscribe(\n      result => {\n        this._loadingService.resolve('loadingsiddimconn')\n        this.sidSnackbarComponent.showMessage(result.message);\n\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsiddimconn');\n        this.sidSnackbarComponent.systemError();\n\n      })\n\n  }\n\n  onCancel(){\n    this.showForm = false;\n    this.closeflag.emit(true);\n  }\n\n   toggleSensitiveField(fieldName) {\n    var field = (<HTMLInputElement>document.getElementById(fieldName));\n    if (field.type === \"password\") {\n      field.type = \"text\";\n    } else {\n      field.type = \"password\";\n    }\n  }\n\n  refreshModels() {\n    if (!this.connector){\n      return;\n    }\n    this._loadingService.register('loadingsiddimconn');\n\n    this.jobsService\n      .getConnModels(\n        String(this.connector.conn_id),\n        null\n      )\n      .subscribe(\n        (result) => {\n          this._loadingService.resolve('loadingsiddimconn');\n          this.sidSnackbarComponent.showMessage('Metadata refreshed');\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsiddimconn');\n          this.sidSnackbarComponent.systemError();\n\n        }\n      );\n  }\n\n\n}\n","<div *tdLoading=\"'loadingsiddimconn'; mode:'indeterminate';\ntype:'linear'; strategy:'overlay'; color:'primary'\">\n\n    <div *ngIf=\"dataloaded && showForm\" class=\"sidcontainer\">\n\n        <mat-card>\n            <mat-card-title>Salesforce connection</mat-card-title>\n            <div mat-subheader>Connection details\n                <span class=\"fill-remaining-space\"></span>\n                <button class=\"rightsection\"\n                title=\"Refresh Objects from Salesforce\"\n                  mat-mini-fab\n                  color=\"primary\"\n                  (click)=\"refreshModels()\"\n                >\n                  <mat-icon>refresh</mat-icon>\n                </button>\n\n            </div>\n\n            <form [formGroup]=\"connectionForm\">\n                <div layout=\"row\">\n                    <mat-form-field flex>\n                        <input matInput placeholder=\"Connector Name\" formControlName=\"name\" />\n                    </mat-form-field>\n\n                    <mat-form-field flex>\n                        <mat-select placeholder=\"System Type\" formControlName=\"conn_system_type\">\n                            <mat-option *ngFor=\"let type of dimSystemTypes\" [value]=\"type.system_type\">\n                                {{ type.description }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n                <div layout=\"row\">\n                    <mat-form-field flex>\n                        <input matInput placeholder=\"User Name (email)\" formControlName=\"auth_username\" type=\"email\"/>\n\n                    </mat-form-field>\n                    <mat-form-field flex>\n                        <mat-icon color=\"primary\"  (click)=\"toggleSensitiveField('password')\" matSuffix>\n                            visibility</mat-icon>\n                        <input matInput placeholder=\"Password\" type=\"password\" minlength=\"4\"\n                            id=\"password\"\n                            formControlName=\"auth_password\" />\n                    </mat-form-field>\n                </div>\n                <div layout=\"row\">\n                    <mat-form-field flex>\n                        <mat-icon color=\"primary\"  (click)=\"toggleSensitiveField('security_token')\" matSuffix>\n                            visibility</mat-icon>\n                        <input matInput placeholder=\"Security Token\" type=\"password\" minlength=\"4\"\n                            id=\"security_token\"\n                            formControlName=\"security_token\" />\n                    </mat-form-field>\n                </div>\n\n                <div layout=\"row\">\n                    <mat-form-field flex>\n                        <input matInput placeholder=\"Host url\" formControlName=\"auth_host\" />\n                    </mat-form-field>\n                </div>\n                <mat-divider></mat-divider>\n                <div layout=\"row\" class=\"pad-sm\" class=\"top-margin-10px\">\n                    <button mat-fab color=\"primary\" (click)=\"onSubmit()\">\n                        <mat-icon>done</mat-icon>\n                    </button>\n                    &nbsp;\n                    <button mat-fab color=\"warn\" (click)=\"onCancel()\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n\n                </div>\n\n\n            </form>\n\n        </mat-card>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { ConnectionsService } from '../../services/connections.service';\nimport { IConnectionRecords, IConnectors, IConnectorDetails } from '../../models/connection';\nimport { IDimConnectors } from '../../models/dimensions';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'app-searchconnections',\n  templateUrl: './searchconnections.component.html',\n  styleUrls: ['./searchconnections.component.css']\n})\nexport class SearchConnectionsComponent implements OnInit {\n\n  rowSelected = false;\n  selectedConnRecord: IConnectorDetails;\n  shownew: boolean = true;\n\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private sidSnackbarComponent: SidSnackbarComponent\n    ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  selectedConnection(event) {\n    this.editConn(event);\n  }\n\n  editConn(conn: IConnectorDetails) {\n    this.selectedConnRecord = conn;\n    this.rowSelected = true;\n  }\n\n  backConn() {\n    this.rowSelected = false;\n  }\n\n  closeRecord(event){\n    this.rowSelected = false;\n  }\n\n\n}\n","<div class=\"rcontainer\">\n  <div *ngIf=\"!rowSelected\">\n    <connectionlist\n    [shownew]=\"shownew\"\n    [filter]=\"'all'\" (connection)=\"selectedConnection($event)\">\n    </connectionlist>\n  </div>\n\n  <div *ngIf=\"rowSelected\">\n    <div *ngIf=\"selectedConnRecord.conn_type == 'Salesforce'\">\n      <salesforce-connection\n        [connector]=\"selectedConnRecord\"\n        (close)=\"closeRecord($event)\"\n      >\n      </salesforce-connection>\n    </div>\n    <div *ngIf=\"selectedConnRecord.conn_type == 'AWS_S3'\">\n      <awss3-connection\n        [connector]=\"selectedConnRecord\"\n        (close)=\"closeRecord($event)\"\n      >\n      </awss3-connection>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IUserProfile } from '../models/userprofile';\n\n@Component({\n  selector: 'dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  userProfileStatus = false;\n  userProfileRecord: IUserProfile;\n  userLoggedStatus = false;\n\n  constructor(\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div layout=\"row\">\n    <button mat-button color=\"primary\" disabled>\n        Schedules >\n      </button>\n</div>\n<br>\n    <app-schedule></app-schedule>\n    <br>\n    <div layout=\"row\">\n        <button mat-button color=\"primary\" disabled>\n            Jobs >\n          </button>\n    </div>\n    <br>\n    <app-jobs></app-jobs>\n","import { Injectable } from '@angular/core';\nimport { IDimRecords } from '../models/dimensions';\n\nimport { BehaviorSubject } from 'rxjs';\n\n// @Injectable()\n@Injectable({\n    providedIn: 'root'\n  })\nexport class DimensionDataService {\n    tempDimension: IDimRecords = { status: '', num_of_records: 0, message: [], records: null };\n\n    dimensionRecord: BehaviorSubject<IDimRecords> = new BehaviorSubject<IDimRecords>(this.tempDimension);\n    constructor() { }\n\n}","import { Component, OnInit, Output } from '@angular/core';\nimport { TdMediaService } from '@covalent/core/media';\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { DimensionsService } from '../services/dimensions.service';\nimport { DimensionDataService } from '../data/dimensiondata.service';\nimport { IDimRecords } from '../models/dimensions'\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'dimensions',\n  templateUrl: './dimensions.component.html',\n  styleUrls: ['./dimensions.component.css']\n})\nexport class DimensionsComponent implements OnInit {\n  recordsFound = false;\n\n@Output()\ndimensionRecords: IDimRecords;\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private dimensionsService: DimensionsService,\n    private dimensionDataService: DimensionDataService,\n    private sidSnackbarComponent: SidSnackbarComponent\n    ) {\n  }\n\n  ngOnInit(): void {\n    this.fetchDimensions();\n    this.getDimensions();\n\n  }\n\n  getDimensions() {\n    this.dimensionDataService.dimensionRecord.subscribe(\n      result => {\n        if (result.status === 'ok') {\n            this.dimensionRecords = result;\n            this.recordsFound = true\n          }\n      },\n      err => {\n        console.log(err);\n        this.sidSnackbarComponent.systemError();\n      }\n    );\n  }\n\n  fetchDimensions(){\n    this._loadingService.register('loadingdimsid');\n\n    this.dimensionsService.getdimConnections().subscribe(\n      result => {\n        this.dimensionRecords = result;\n        this.dimensionDataService.dimensionRecord.next(\n            this.dimensionRecords\n        )\n\n        this._loadingService.resolve('loadingdimsid')\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingdimsid');\n        this.sidSnackbarComponent.systemError();\n\n      })\n\n}\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IConnectorDetails } from '../models/connection';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'app-explorer',\n  templateUrl: './explorer.component.html',\n  styleUrls: ['./explorer.component.css']\n})\nexport class ExplorerComponent implements OnInit {\n\n  rowSelected = false;\n  selectedConnRecord: IConnectorDetails;\n  shownew: boolean = false;\n\n  constructor(\n    private sidSnackbarComponent: SidSnackbarComponent\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectedConnection(event) {\n\n    this.selectedConnRecord = event;\n    if (this.selectedConnRecord.conn_type != 'AWS_S3'){\n      this.sidSnackbarComponent.showMessage('Connector not Supported for explorer');\n\n    }\n    else{\n      this.rowSelected = true;\n    }\n  }\n\n  backConn() {\n    this.rowSelected = false;\n  }\n\n\n\n}\n","<div class=\"sidcontainer\">\n    <div\n    *tdLoading=\"\n      'loadingsidexp';\n      mode: 'indeterminate';\n      type: 'linear';\n      strategy: 'overlay';\n      color: 'primary'\n    \"\n  >\n\n    <div *ngIf=\"!rowSelected\">\n        <connectionlist [shownew]=\"shownew\" [filter]=\"'AWS_S3'\" (connection)=\"selectedConnection($event)\">\n        </connectionlist>\n    </div>\n\n    <div *ngIf=\"rowSelected\">\n        <button mat-button color=\"primary\" (click)=\"backConn()\">\n             Connectors  >\n        </button>\n\n        <s3explorer [conn_id]=\"selectedConnRecord.conn_id\">\n        </s3explorer>\n\n    </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, ChangeDetectorRef } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { IExplorerRecords, IExplorer } from '../../models/explorer'\nimport { ExplorerService } from '../../services/explorer.service';\nimport {saveAs as importedSaveAs} from 'file-saver';\n\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 's3explorer',\n  templateUrl: './s3explorer.component.html',\n  styleUrls: ['./s3explorer.component.css']\n})\nexport class S3explorerComponent implements OnInit {\n  treeControl = new NestedTreeControl<IExplorer>(node => node.children);\n  dataSource = new MatTreeNestedDataSource<IExplorer>();\n  breadcrums = [];\n  fileclicked = false;\n  selectedFile = '';\n  selectedPath = '';\n\n  @Input()\n  conn_id: number;\n\n  @Input()\n  showdownload: boolean = true;\n\n  @Output('file')\n  select: EventEmitter<string> = new EventEmitter<string>();\n\n  dataloaded = false;\n  hasChild = (_: number, node: IExplorer) => !!node.children && node.children.length > 0;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _loadingService: TdLoadingService,\n    private router: Router,\n    private explorerService: ExplorerService,\n    private sidSnackbarComponent: SidSnackbarComponent\n\n  ) {\n    this.getTree();\n\n  }\n\n  ngOnInit(): void {\n    this.getTree();\n  }\n\n  getTree() {\n    if (!this.conn_id) {\n      return;\n    }\n    this._loadingService.register('loadingsids3');\n\n    this.explorerService.getTreebyId(this.conn_id).subscribe(\n      result => {\n        this._loadingService.resolve('loadingsids3');\n        this.dataSource.data = this._processData(result.records.tree);\n        this.dataloaded = true;\n        this._changeDetectorRef.detectChanges();\n\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsids3');\n        this.sidSnackbarComponent.systemError();\n\n      });\n  }\n  newJob() {\n    this.select.emit('');\n  }\n\n  private _processData(data, parent = null) {\n    data.forEach(item => {\n      if (parent !== null) {\n        item.parent = { name: parent.folder };\n      } else {\n        item.parent = null;\n      }\n      if (item.children) {\n        this._processData(item.children, item);\n      }\n    });\n    return data;\n  }\n\n  onLeafNodeClick(node: any): void {\n    this.selectedFile = node.name;\n    this.selectedPath = node.parent.name;\n    this.fileclicked = true;\n  }\n  onParentNodeClick(node: IExplorer): void {\n    this.breadcrums = node.folder.slice(0, -1).split('/');\n    this.selectedFile = '';\n    this.fileclicked = false;\n  }\n  downloadFile(){\n    this._loadingService.register('loadingsids3');\n\n    const filename = this.selectedPath.concat(this.selectedFile);\n    this.explorerService.downloadS3file(this.conn_id, filename).subscribe(\n      blob => {\n        try{\n          importedSaveAs(blob, this.selectedFile);\n        }\n        catch(e){\n          this.sidSnackbarComponent.showMessage('Download Error');\n\n        }\n        finally{\n          this._loadingService.resolve('loadingsids3');\n        }\n\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsids3');\n        this.sidSnackbarComponent.showMessage('Download Error');\n\n      });\n  }\n  selectFile(){\n    const filename = this.selectedPath.concat(this.selectedFile);\n    this.select.emit(filename);\n\n  }\n\n}\n","<div *tdLoading=\"'loadingsids3'; mode:'indeterminate';\ntype:'linear'; strategy:'overlay'; color:'primary'\">\n    <div *ngIf=\"!dataloaded\">\n        Loading...\n    </div>\n\n    <div *ngIf=\"dataloaded\">\n        <mat-card>\n\n            <span *ngFor=\"let crum of breadcrums\">{{crum}}&nbsp;&nbsp;>&nbsp;&nbsp;\n            </span>\n            <span>{{selectedFile}}</span>\n\n            <span *ngIf=\"showdownload && fileclicked\">\n                <button mat-mini-fab color=\"primary\" (click)=\"downloadFile()\">\n                    <mat-icon>save</mat-icon>\n                </button>\n            </span>\n            <span *ngIf=\"!showdownload && fileclicked\">\n                <button mat-mini-fab color=\"primary\" (click)=\"selectFile()\">\n                    <mat-icon>done</mat-icon>\n                </button>\n            </span>\n\n        </mat-card>\n\n        <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\">\n\n            <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle (click)=\"onLeafNodeClick(node)\">\n                <li class=\"mat-tree-node\">\n                    <button mat-icon-button disabled></button>\n                    {{node.name}}\n                </li>\n            </mat-tree-node>\n\n            <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\n                <li>\n                    <div class=\"mat-tree-node\">\n                        <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.name\"\n                            (click)=\"onParentNodeClick(node)\">\n                            <mat-icon class=\"mat-icon-rtl-mirror\" color=\"primary\">\n                                <!-- {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}} -->\n                                {{treeControl.isExpanded(node) ? 'folder' : 'folder_open'}}\n\n                            </mat-icon>\n                        </button>\n                        {{node.name}}\n                    </div>\n                    <ul [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\">\n                        <ng-container matTreeNodeOutlet></ng-container>\n                    </ul>\n                </li>\n            </mat-nested-tree-node>\n\n        </mat-tree>\n\n    </div>\n</div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport {SnotifyService, SnotifyPosition} from 'ng-snotify';\n\n@Component({\n  selector: 'app-sidsnackbar',\n  templateUrl: './sidsnackbar.component.html',\n  styleUrls: ['./sidsnackbar.component.css']\n})\nexport class SidSnackbarComponent implements OnInit {\n\n  timeOut = 1500;\n  msgConfig = new MatSnackBarConfig();\n  snotifyConfig = {\n    timeout: 2000,\n    showProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    position: SnotifyPosition.rightTop,\n    bodyMaxLength: 1000,\n\n  };\n\n  snotifyErrorConfig = {\n    timeout: 0,\n    showProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    position: SnotifyPosition.rightTop,\n    bodyMaxLength: 1000,\n\n  };\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    public _matSnackBar: MatSnackBar,\n    private snotifyService: SnotifyService\n    ) {\n      this.msgConfig.panelClass = [\"sid-snackbar\"];\n      this.msgConfig.duration = 6000;\n      this.msgConfig.verticalPosition = 'top';\n      this.msgConfig.horizontalPosition = 'right';\n    }\n\n  ngOnInit(): void {\n  }\n\n  showSnackMessage(message) {\n\n    if ( message instanceof Array) {\n      message.forEach( (msg, index) => {\n        setTimeout(() => {\n            this._matSnackBar.open(msg, 'Dismiss', this.msgConfig);\n        }, index * (this.timeOut+500));\n    });\n\n    } else {\n      this._matSnackBar.open(message, 'Dismiss', this.msgConfig);\n    }\n  }\n\n  showMessage(message, success = false) {\n\n    if ( message instanceof Array) {\n      message.forEach( (msg) => {\n        if(success){\n          this.snotifyService.success(msg, this.snotifyConfig);\n        }\n        else {\n          this.snotifyService.error(msg, this.snotifyErrorConfig);\n        }\n      });\n\n    } else {\n      if(success){\n        this.snotifyService.success(message, this.snotifyConfig);\n      }\n      else{\n        this.snotifyService.error(message, this.snotifyErrorConfig);\n      }\n\n    }\n    this._changeDetectorRef.detectChanges();\n  }\n  systemError() {\n    this.snotifyService.error('System Error: please check console', this.snotifyErrorConfig);\n    this._changeDetectorRef.detectChanges();\n  }\n\n  parseResult(result){\n    if(result.status == 'ok'){\n      this.showMessage(result.message, true);\n    }\n    else{\n      this.showMessage(result.message);\n    }\n  }\n\n}\n","<p>snackbar works!</p>\n","import { Component, OnInit } from '@angular/core';\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { JoblogsService } from '../../services/joblogs.service';\nimport { IJoblogsRecords, Ijoblogs, IJoblogRec } from '../../models/joblogs';\nimport {saveAs as importedSaveAs} from 'file-saver';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n\n@Component({\n  selector: 'app-joblogdetails',\n  templateUrl: './joblogdetails.component.html',\n  styleUrls: ['./joblogdetails.component.css']\n})\nexport class JoblogdetailsComponent implements OnInit {\n  selectedRec: IJoblogRec;\n  dataloaded = false;\n  jobrun_id: number;\n  downloadfile = false;\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private route: ActivatedRoute,\n    private joblogsService: JoblogsService,\n    private sidSnackbarComponent: SidSnackbarComponent\n  ) {\n    this.jobrun_id = this.route.snapshot.params['id'];\n\n    this.getJobLog();\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  getJobLog(){\n    this._loadingService.register('loadingsid');\n\n    this.joblogsService.getLogById(\n      String(this.jobrun_id)\n    ).subscribe(\n      result => {\n        this._loadingService.resolve('loadingsid')\n        if(result.status != 'ok' || result.records.joblogs.length < 1) {\n          this.sidSnackbarComponent.showMessage('Error fetching log details');\n          return\n        }\n        this.selectedRec = result.records.joblogs[0];\n        this.dataloaded = true;\n\n        this.downloadfile = false;\n\n        if (this.selectedRec.total_count && this.selectedRec.total_count > 0) {\n          if ((this.selectedRec.failure_count && this.selectedRec.failure_count > 0) || (\n            this.selectedRec.warning_count && this.selectedRec.warning_count > 0)\n          ) {\n            this.downloadfile = true;\n          }\n        }\n        if (!this.downloadfile) {\n          this.sidSnackbarComponent.showMessage('Log file not available: No failed records', true);\n          //return;\n        }\n\n\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsid');\n        this.sidSnackbarComponent.systemError();\n\n      })\n\n  }\n\n  downLoadLog() {\n    // download the log file\n\n    this._loadingService.register(\"loadingsid\");\n    this.joblogsService.downloadLog(\n      String(this.selectedRec.jobrun_id)).subscribe(\n      blob => {\n        // const date = new Date().toLocaleDateString();\n        this.selectedRec.run_date\n        const fileName = 'sid_log_'.concat(this.selectedRec.job_name).concat(\n          this.selectedRec.run_date).concat('.xlsx');\n        importedSaveAs(blob, fileName);\n        this._loadingService.resolve(\"loadingsid\");\n      },\n      error => {\n        this._loadingService.resolve(\"loadingsid\");\n        this.sidSnackbarComponent.showMessage('Download Error');\n\n      }\n    );\n\n  }\n\n  runfailedRecs() {\n    // download the log file\n\n    this._loadingService.register(\"loadingsid\");\n    this.joblogsService.runJobByJobRunId(\n      String(this.selectedRec.job_id),\n      String(this.selectedRec.jobrun_id)).subscribe(\n        result => {\n          if(result.status == 'ok'){\n            this.sidSnackbarComponent.showMessage(result.message, true);\n          }\n          else{\n            this.sidSnackbarComponent.showMessage(result.message);\n          }\n        this._loadingService.resolve(\"loadingsid\");\n      },\n      error => {\n        this._loadingService.resolve(\"loadingsid\");\n        this.sidSnackbarComponent.showMessage('Download Error');\n      }\n    );\n\n  }\n\n\n\n}\n","<div class=\"sidcontainer\">\n\n    <div *tdLoading=\"'loadingsid'; mode:'indeterminate';\n  type:'linear'; strategy:'overlay'; color:'primary'\">\n\n\n        <div *ngIf=\"dataloaded\">\n            <mat-card>\n                <table style=\"width:80%\">\n                    <tr>\n                        <th>Name</th>\n                        <th>Run Date</th>\n                        <th>Status</th>\n                        <th>Start time</th>\n                        <th>End time</th>\n                    </tr>\n                    <tr>\n                        <td>{{selectedRec.job_name}}</td>\n                        <td>{{selectedRec.run_date}}</td>\n                        <td>{{selectedRec.status}}</td>\n                        <td>{{selectedRec.start_date}}</td>\n                        <td>{{selectedRec.end_date}}</td>\n\n                    </tr>\n                </table>\n                <mat-divider></mat-divider>\n                <br>\n                <table style=\"width:80%\">\n                    <tr>\n                        <th>File Name</th>\n                        <th>Status Message</th>\n                    </tr>\n                    <tr>\n                        <td>{{selectedRec.filename}}</td>\n                        <td>{{selectedRec.message}}</td>\n                    </tr>\n                </table>\n                <mat-divider></mat-divider>\n                <br>\n                <table style=\"width:80%\">\n                    <tr>\n                        <th>Record Count</th>\n                        <th>No. of Success</th>\n                        <th>No. of Failure</th>\n                        <th>No. of Warning</th>\n\n                    </tr>\n                    <tr>\n                        <td>{{selectedRec.total_count}}</td>\n                        <td>{{selectedRec.success_count}}</td>\n                        <td>{{selectedRec.failure_count}}</td>\n                        <td>{{selectedRec.warning_count}}</td>\n\n                    </tr>\n                </table>\n                <mat-divider></mat-divider>\n                <br>\n                    <button mat-raised-button color=\"primary\" (click)=\"downLoadLog()\" [disabled]=\"!downloadfile\">\n                        Download Log File\n                    </button>&nbsp;&nbsp;\n                    <button mat-raised-button color=\"primary\" (click)=\"runfailedRecs()\" [disabled]=\"!downloadfile\">\n                        Reprocess failed Records\n                    </button>&nbsp;&nbsp;\n<!--\n                <button mat-raised-button color=\"warn\" (click)=\"cancelLog()\">\n                    Cancel\n                </button> -->\n\n            </mat-card>\n\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms'; // new add\nimport { FormControl } from '@angular/forms';\n\nimport { ITdDataTableColumn } from '@covalent/core/data-table';\nimport { TdDataTableService, TdDataTableSortingOrder, ITdDataTableSortChangeEvent, } from \"@covalent/core/data-table\";\nimport { IPageChangeEvent } from '@covalent/core/paging';\n\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { JoblogsService } from '../services/joblogs.service';\nimport { IJoblogsRecords, Ijoblogs, IJoblogRec } from '../models/joblogs';\nimport * as moment from 'moment';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'app-joblogs',\n  templateUrl: './joblogs.component.html',\n  styleUrls: ['./joblogs.component.css']\n})\nexport class JoblogsComponent implements OnInit {\n\n  jobRecords: IJoblogsRecords;\n  selectedRec: IJoblogRec;\n\n  configWidthColumns: ITdDataTableColumn[] = [\n    { name: 'jobrun_id', label: 'Log id', width: 100 },\n    { name: 'job_name', label: 'Job name', width: 250 },\n    { name: 'run_type', label: 'Type', width: { min: 20, max: 50 } },\n    { name: 'run_date', label: 'Run Date', width: 150 },\n    { name: 'status', label: 'Job Status', width: 150 },\n    { name: 'total_count', label: 'Record Count', width: 100 },\n    { name: 'filename', label: 'filename' },\n\n  ];\n\n  minDate = new Date(2020, 1, 1);\n  maxDate = new FormControl(new Date());\n\n  sDate = (new Date()).setDate((new Date()).getDate() - 30);\n  selectStartDate = new FormControl(new Date(), Validators.required);\n  selectEndDate = new FormControl(new Date(), Validators.required);\n  downloadfile = false;\n\n  filteredData: any[] = [];\n  filteredTotal = 0;\n  rowSelected = false;\n  searchTerm = \"\";\n  fromRow = 1;\n  currentPage = 1;\n  pageSize = 50;\n  sortBy = \"jobrun_id\";\n  selectedRow: any[] = [];\n  sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Descending;\n\n  dataloaded = false;\n  allowForm = false;\n  errorMessage: string;\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private router: Router,\n    private _dataTableService: TdDataTableService,\n    private joblogsService: JoblogsService,\n    private sidSnackbarComponent: SidSnackbarComponent\n  ) {\n\n    let now = new Date();\n    let monthAgo = new Date();\n    monthAgo.setMonth(now.getMonth() - 1);\n    this.selectStartDate = new FormControl(monthAgo, Validators.required);\n    // this.selectStartDate.setValue(this.sDate.toISOString());\n    // console.log(this.selectStartDate);\n    this.getJobs();\n  }\n\n  ngOnInit(): void {\n  }\n\n  getJobs() {\n    this._loadingService.register('loadingsid');\n    let startDate = moment(this.selectStartDate.value);\n    let endDate = moment(this.selectEndDate.value);\n\n    this.joblogsService.getLogs(\n      String(startDate.valueOf()), String(endDate.valueOf())\n    ).subscribe(\n      result => {\n        //  console.log(result);\n        this._loadingService.resolve('loadingsid')\n        this.jobRecords = result;\n        this.filterTable();\n        this.dataloaded = true;\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsid');\n        this.sidSnackbarComponent.systemError();\n\n      })\n  }\n  search(searchTerm: string): void {\n    this.searchTerm = searchTerm;\n    this.filterTable();\n  }\n  page(pagingEvent: IPageChangeEvent): void {\n    this.fromRow = pagingEvent.fromRow;\n    this.currentPage = pagingEvent.page;\n    this.pageSize = pagingEvent.pageSize;\n    this.filterTable();\n  }\n\n  showAlert(event: any): void {\n    const row: any = event.row;\n    // .. do something with event.row\n  }\n\n  filterTable() {\n    let newData = this.jobRecords.records.joblogs;\n    if (Object.keys(newData).length === 0 && newData.constructor === Object) {\n      return;\n    }\n    const excludedColumns: string[] = this.configWidthColumns\n      .filter((column: ITdDataTableColumn) => {\n        return (\n          (column.filter === undefined && column.hidden === true) ||\n          (column.filter !== undefined && column.filter === false)\n        );\n      })\n      .map((column: ITdDataTableColumn) => {\n        return column.name;\n      });\n\n    newData = this._dataTableService.filterData(\n      newData,\n      this.searchTerm,\n      true,\n      excludedColumns\n    );\n\n    newData = this._dataTableService.filterData(\n      newData, this.searchTerm, true, excludedColumns);\n    this.filteredTotal = newData.length;\n    newData = this._dataTableService.sortData(\n      newData, this.sortBy, this.sortOrder);\n    newData = this._dataTableService.pageData(\n      newData, this.fromRow, this.currentPage * this.pageSize);\n    this.filteredData = newData;\n\n  }\n\n  selectRecord(event: any) {\n\n    this.selectedRec = this.jobRecords.records.joblogs.filter(\n      data => {\n        return data.jobrun_id == event.row.jobrun_id;\n      }\n    )[0];\n    this.router.navigate(['/joblogdetails', event.row.jobrun_id]);\n    this.rowSelected = true;\n  }\n\n  onSubmit(): void {\n    let startDate = moment(this.selectStartDate.value);\n    let endDate = moment(this.selectEndDate.value);\n    if (!startDate.isValid() || !endDate.isValid()) {\n      this.sidSnackbarComponent.showMessage('Invalid Date');\n\n    }\n    this.getJobs();\n\n  }\n\n  cancelLog() {\n    this.rowSelected = false;\n  }\n\n}\n","<div class=\"sidcontainer\">\n\n    <div *tdLoading=\"'loadingsid'; mode:'indeterminate';\n  type:'linear'; strategy:'overlay'; color:'primary'\">\n\n\n        <div *ngIf=\"dataloaded && jobRecords\">\n\n\n            <mat-card *ngIf=\"!rowSelected\">\n                <div layout=\"row\">\n                    <mat-form-field color=\"primary\" class=\"date-field\">\n                        <input matInput [min]=\"minDate\" [max]=\"selectEndDate.value\" [formControl]=\"selectStartDate\"\n                            [matDatepicker]=\"picker\" placeholder=\"Start Date\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker disabled=\"false\" color=\"primary\">\n                        </mat-datepicker>\n                    </mat-form-field>\n                    <mat-form-field color=\"primary\" class=\"date-field\">\n                        <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker2\" placeholder=\"End Date\"\n                            [formControl]=\"selectEndDate\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker2 disabled=\"false\" color=\"primary\">\n                        </mat-datepicker>\n                    </mat-form-field>\n                    <div class=\"search-box\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"onSubmit()\">\n                            <mat-icon>done</mat-icon>\n                        </button>\n\n                    </div>\n                </div>\n                <mat-divider>\n\n                </mat-divider>\n\n                <div layout=\"row\" layout-align=\"start center\" class=\"pad-left-sm pad-right-sm\">\n                    <td-search-box #searchBox backIcon=\"arrow_back\" class=\"push-right-sm\" placeholder=\"Search Connector\"\n                        (searchDebounce)=\"search($event)\" [alwaysVisible]=\"true\" flex>\n                    </td-search-box>\n                </div>\n                <mat-divider></mat-divider>\n\n                <td-data-table [sortable]=\"true\" [clickable]=\"true\" [selectable]=\"false\"\n                    (rowClick)=\"selectRecord($event)\" [data]=\"filteredData\" [columns]=\"configWidthColumns\"\n                    [style.height.px]=\"500\" [sortBy]=\"sortBy\">\n                    <!-- <ng-template tdDataTableTemplate=\"conn_logo_path\" let-index=\"index\" let-value=\"value\">\n              <img [src]=\"value\" [alt]=\"index\" />\n            </ng-template> -->\n                </td-data-table>\n                <td-paging-bar #pagingBar [pageSize]=\"pageSize\" [total]=\"filteredTotal\" (change)=\"page($event)\">\n                    <span hide-xs>Rows per page:</span>\n                    <mat-select [style.width.px]=\"50\" [(ngModel)]=\"pageSize\" name=\"pagesize\">\n                        <mat-option *ngFor=\"let size of [50,100,200,500]\" [value]=\"size\">\n                            {{size}}\n                        </mat-option>\n                    </mat-select>\n                    {{pagingBar.range}}\n                    <span hide-xs>of {{pagingBar.total}}</span>\n                </td-paging-bar>\n\n            </mat-card>\n\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, ChangeDetectorRef, OnChanges } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SimpleChanges } from '@angular/core';\n\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { IJob, IJobFields, IJobModels } from '../../../models/jobs';\nimport { IConnectorDetails } from '../../../models/connection';\nimport { DimensionDataService } from '../../../data/dimensiondata.service';\nimport { JobsService } from '../../../services/jobs.service';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\nimport { IDimRef } from '../../../models/dimensions';\n\n@Component({\n  selector: 'destselector',\n  templateUrl: './destselector.component.html',\n  styleUrls: ['./destselector.component.css']\n})\nexport class DestselectorComponent implements OnChanges {\n\n  files: any;\n  dataloaded = false;\n  editFlag = false;\n  disabled: boolean = false;\n  enabled: boolean = true;\n  sfdataloaded: boolean = false;\n  modelSelectedFlag: boolean = false;\n\n  bulkCount: number[] = [];\n  destModels: IJobModels[];\n  destModelFields: IJobFields[];\n\n  // transtype: string = 'insert';\n  // upsertfield: string = '';\n  // bulk_count: number = 1;\n\n  dimRef: IDimRef;\n\n  // filestartwith: string = '';\n  // fileendwith: string = '.csv';\n  // filepath: string = '';\n  // filemask: string = '';\n  // delimiter: string = '|';\n  // lineterminator: string = 'LF';\n  fileExt: string[] = ['.csv', '.json'];\n\n  configForm: FormGroup;\n\n  @Input()\n  job: IJob;\n\n\n  @Output()\n  ostatus: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  errorMessage: string;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _loadingService: TdLoadingService,\n    private jobsService: JobsService,\n    private sidSnackbarComponent: SidSnackbarComponent,\n    private dimensionDataService: DimensionDataService,\n\n  ) {\n    this.sfdataloaded = false;\n    this.getDimensions();\n\n    this.bulkCount.push(1);\n    var bnum = 50;\n    while (bnum <= 2000) {\n      this.bulkCount.push(bnum);\n      bnum += 50;\n    }\n\n  }\n\n  // ngOnInit(): void {\n  //   this.destModelFields = this.job.destfields;\n  //   this.destModels = this.job.models;\n  //   this.dataloaded = true;\n  //   this.editFlag = false;\n  // }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    for (const propName in changes) {\n      if (changes.hasOwnProperty(propName)) {\n        switch (propName) {\n          case 'job': {\n            this.job = changes['job'].currentValue;\n          }\n        }\n      }\n    }\n    this.destModelFields = this.job.destfields;\n    this.destModels = this.job.models;\n\n    this.getDimensions();\n  }\n  getDimensions() {\n    this._loadingService.register('loadingsideditjob');\n    this.dimensionDataService.dimensionRecord.subscribe((result) => {\n      this._loadingService.resolve('loadingsideditjob');\n      if (result.records) {\n        this.dimRef = result.records;\n        this.dataloaded = true;\n        this.editFlag = false;\n\n      }\n    });\n  }\n\n  selectedConnection(connector: IConnectorDetails) {\n    this.sfdataloaded = false;\n    this.modelSelectedFlag = false;\n    this.job.dest_config.conn_id = connector.conn_id;\n    this.job.dest_config.conn_name = connector.name;\n    this.job.dest_config.conn_logo_path = connector.conn_logo;\n    this.job.dest_config.conn_system_type = connector.conn_system_type;\n    this.job.dest_config.conn_type = connector.conn_type;\n\n    if (connector.conn_type == 'Salesforce') {\n      this.fetchSfModels(null);\n    }\n\n  }\n\n  fetchSfModels(model_name) {\n    this._loadingService.register('loadingdestsid');\n\n    this.jobsService\n      .fetchConnModels(\n        String(this.job.dest_config.conn_id),\n        model_name\n      )\n      .subscribe(\n        (result) => {\n\n          this.destModels = result.records.models;\n          this.destModelFields = result.records.fields;\n          this._changeDetectorRef.detectChanges();\n          this.sfdataloaded = true;\n          this._loadingService.resolve('loadingdestsid');\n\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingdestsid');\n          this.sidSnackbarComponent.systemError();\n\n        }\n      );\n\n\n  }\n\n  modelChange(event) {\n    this.fetchSfModels(this.job.dest_config.model);\n    this.modelSelectedFlag = true;\n  }\n\n  validateInput() {\n    let message = [];\n\n    if(this.job.dest_config == null) {\n      message.push('Invalid connector')\n    }\n    else if(this.job.dest_config.conn_id == null\n      || this.job.dest_config.conn_id < 1)\n    {\n      message.push('Invalid connector');\n    }\n    else if (this.job.dest_config.conn_type == 'Salesforce') {\n      if(this.job.dest_config.transaction_type == null ||\n        this.job.dest_config.transaction_type == ''){\n          message.push('Invalid Salesforce transaction type')\n        }\n      else if(this.job.dest_config.transaction_type == 'upsert' &&\n      (this.job.dest_config.key_field == null ||\n        this.job.dest_config.key_field == '')){\n          message.push('Invalid Salesforce upsert key')\n      }\n    }\n    else if (this.job.dest_config.conn_type == 'AWS_S3' ||\n      this.job.dest_config.conn_type == 'File') {\n\n      if (this.job.dest_config.filestartwith == '' || this.job.dest_config.filestartwith == null) {\n        message.push('Filename is invalid')\n      }\n      if (this.job.dest_config.fileendwith == '' || this.job.dest_config.fileendwith == null) {\n        message.push('File extension is invalid')\n      }\n      if (this.job.dest_config.conn_type == 'AWS_S3' &&\n        (this.job.dest_config.filepath == '' || this.job.dest_config.filepath == null)) {\n        message.push('Filepath is invalid')\n      }\n\n    }\n    if (message.length > 0) {\n      this.sidSnackbarComponent.showMessage(message);\n      return false;\n    }\n    return true;\n  }\n\n  accept(ctype: string) {\n\n    if (!this.validateInput()) {\n      return\n    }\n\n    if (ctype == 'Salesforce') {\n      this.job.destfields = this.destModelFields;\n      this.job.models = this.destModels;\n    }\n    else {\n      this.job.destfields = [];\n      this.job.models = [];\n      this.job.dest_config.model = this.job.dest_config.filestartwith;\n\n    }\n    this.editFlag = false;\n\n  }\n  submit() {\n    if (!this.validateInput()) {\n      return\n    }\n//    console.log('complete dest connector')\n\n    this.ostatus.emit(true);\n\n  }\n  cancel(){\n    this.ostatus.emit(false);\n  }\n  toggleEditFlag() {\n    this.editFlag = !this.editFlag;\n  }\n\n\n}\n","<div *tdLoading=\"'loadingdestsid'; mode:'indeterminate';\ntype:'linear'; strategy:'overlay'; color:'primary'\">\n\n<div *ngIf=\"dataloaded\">\n  <div layout=\"row\">\n    <button mat-button color=\"primary\" (click)=\"toggleEditFlag()\">\n      <mat-icon color=\"primary\"> mode</mat-icon>\n      Change Destination Connector\n    </button>\n  </div>\n\n  <div *ngIf=\"!editFlag\" layout=\"row\">\n    <div layout=\"column\">\n      <mat-list>\n        <mat-list-item>\n          <img matListAvatar [src]=\"job.dest_config.conn_logo_path\" />\n          <div mat-line>\n            {{ job.dest_config.conn_name }}\n          </div>\n          <div mat-line>\n            System Type:\n            {{ job.dest_config.conn_system_type }}\n          </div>\n        </mat-list-item>\n      </mat-list>\n    </div>\n    <div layout=\"column\" class=\"rightsection\">\n      <div *ngIf=\"job.dest_config.conn_type == 'Salesforce'\">\n        <div layout=\"row\">\n        <mat-form-field>\n          <input matInput placeholder=\"Destination Model\"\n          [(ngModel)]=\"job.dest_config.model\"\n            [ngModelOptions]=\"{ standalone: true }\" disabled/>\n        </mat-form-field>\n      </div>\n      <div layout=\"row\">\n        <mat-form-field>\n            <mat-select\n            matInput\n            placeholder=\"Type\"\n            [(ngModel)]=\"job.dest_config.transaction_type\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            >\n\n            <mat-option\n              *ngFor=\"let type of dimRef.dimtransactiontype\"\n              [value]=\"type.transaction_type\"\n            >\n              {{ type.transaction_type }}\n            </mat-option>\n          </mat-select>\n\n          </mat-form-field>\n          <mat-form-field *ngIf=\"job.dest_config.transaction_type == 'upsert'\">\n          <mat-select\n            matInput\n            placeholder=\"Upsert Field\"\n            [(ngModel)]=\"job.dest_config.key_field\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            >\n            <mat-option\n              *ngFor=\"let type of destModelFields\"\n              [value]=\"type.field_name\"\n            >\n              {{ type.field_name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select\n            matInput\n            placeholder=\"Bulk Count\"\n            [(ngModel)]=\"job.dest_config.bulk_count\"\n            [ngModelOptions]=\"{ standalone: true }\"\n          >\n\n            <mat-option\n              *ngFor=\"let count of bulkCount\"\n              [value]=\"count\"\n            >\n              {{ count }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n      </div>\n\n      </div>\n      <div *ngIf=\"job.dest_config.conn_type != 'Salesforce'\">\n        <div layout=\"row\">\n          <mat-form-field>\n            <input matInput placeholder=\"FileNameStartsWith\" [(ngModel)]=\"job.dest_config.filestartwith\"\n              [ngModelOptions]=\"{ standalone: true }\" />\n          </mat-form-field>\n          <mat-form-field>\n            <input matInput placeholder=\"FileNameEndsWith\" [(ngModel)]=\"job.dest_config.fileendwith\"\n              [ngModelOptions]=\"{ standalone: true }\" />\n          </mat-form-field>\n          <mat-form-field flex>\n            <input matInput placeholder=\"FilePath\" [(ngModel)]=\"job.dest_config.filepath\"\n              [ngModelOptions]=\"{ standalone: true }\" />\n\n          </mat-form-field>\n        </div>\n        <div layout=\"row\">\n          <mat-form-field>\n            <mat-select matInput placeholder=\"File Mask\" [(ngModel)]=\"job.dest_config.filemask\"\n              [ngModelOptions]=\"{ standalone: true }\">\n              <mat-option *ngFor=\"let type of dimRef.dimfilemask\" [value]=\"type.filemask\">\n                {{ type.filemask }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field>\n            <mat-select matInput placeholder=\"delimiter\" [(ngModel)]=\"job.dest_config.delimiter\"\n              [ngModelOptions]=\"{ standalone: true }\">\n              <mat-option *ngFor=\"let type of dimRef.dimdelimitertype\" [value]=\"type.delimiter_type\">\n                {{ type.delimiter_type }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field>\n            <input matInput placeholder=\"encoding\" [(ngModel)]=\"job.dest_config.encoding\"\n              [ngModelOptions]=\"{ standalone: true }\" />\n          </mat-form-field>\n          <mat-form-field>\n            <mat-select matInput placeholder=\"lineterminator\" [(ngModel)]=\"job.dest_config.lineterminator\"\n              [ngModelOptions]=\"{ standalone: true }\">\n              <mat-option *ngFor=\"let type of dimRef.dimnewlinetype\" [value]=\"type.line_type\">\n                {{ type.description }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n\n  <div *ngIf=\"editFlag\" layout=\"row\">\n    <div layout=\"column\">\n      <connectionlist [shownew]=\"disabled\" [filter]=\"'output'\" [gridcomp]=\"disabled\"\n        (connection)=\"selectedConnection($event)\">\n      </connectionlist>\n    </div>\n    <div layout=\"column\">\n      <div *ngIf=\"job.dest_config.conn_type == 'Salesforce'\">\n        <div *ngIf=\"sfdataloaded\" layout=\"row\">\n\n          <mat-form-field>\n            <mat-select matInput placeholder=\"Model\"\n            [(value)]=\"job.dest_config.model\" (selectionChange)=\"modelChange($event)\">\n              <mat-option *ngFor=\"let model of destModels\" [value]=\"model.name\">\n                {{ model.label }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <div *ngIf=\"modelSelectedFlag\">\n\n            <mat-form-field>\n              <mat-select matInput placeholder=\"Bulk Count\" [(value)]=\"job.dest_config.bulk_count\">\n                <mat-option *ngFor=\"let count of bulkCount\" [value]=\"count\">\n                  {{ count }}\n                </mat-option>\n              </mat-select>\n\n\n            </mat-form-field>\n\n            <mat-form-field>\n              <mat-select matInput placeholder=\"Type\" [(value)]=\"job.dest_config.transaction_type\" (selectionChange)=\"modelChange($event)\">\n                <mat-option *ngFor=\"let type of dimRef.dimtransactiontype\" [value]=\"type.transaction_type\">\n                  {{ type.transaction_type }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"job.dest_config.transaction_type == 'upsert'\">\n              <mat-select matInput placeholder=\"Key\" [(value)]=\"job.dest_config.key_field\">\n                <mat-option *ngFor=\"let field of destModelFields\" [value]=\"field.field_name\">\n                  {{ field.field_name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n\n          </div>\n          <div layout=\"row\">\n            <span>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!modelSelectedFlag\" class=\"text-upper\"\n                (click)=\"accept('Salesforce')\">Accept</button>\n            </span>\n\n          </div>\n\n\n        </div>\n\n      </div>\n\n\n      <div *ngIf=\"job.dest_config.conn_type == 'File' || job.dest_config.conn_type == 'AWS_S3'\">\n\n\n        <div layout=\"row\">\n          <mat-form-field flex>\n            <input matInput placeholder=\"FileNameStartsWith\"\n            [(ngModel)]=\"job.dest_config.filestartwith\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            />\n          </mat-form-field>\n          <mat-form-field flex>\n            <mat-select matInput placeholder=\"File Type\"\n            [(value)]=\"job.dest_config.fileendwith\">\n\n              <mat-option *ngFor=\"let type of fileExt\" [value]=\"type\">\n                {{ type }}\n              </mat-option>\n            </mat-select>\n\n          </mat-form-field>\n        </div>\n        <div *ngIf=\"job.dest_config.conn_type == 'AWS_S3'\">\n          <div layout=\"row\">\n            <mat-form-field flex>\n              <input matInput placeholder=\"FilePath\"\n              [(ngModel)]=\"job.dest_config.filepath\"\n              [ngModelOptions]=\"{ standalone: true }\"\n              />\n            </mat-form-field>\n\n          </div>\n\n        </div>\n        <div layout=\"row\">\n          <mat-icon matSuffix matTooltip=\"If filemask is set then rundate is used to generate filename\">\n            help_outline\n          </mat-icon>\n\n          <mat-form-field>\n\n            <mat-select matInput placeholder=\"File Mask\"\n            [(value)]=\"job.dest_config.filemask\">\n\n              <mat-option *ngFor=\"let type of dimRef.dimfilemask\" [value]=\"type.filemask\">\n                {{ type.filemask }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field>\n            <mat-select matInput placeholder=\"delimiter\"\n            [(value)]=\"job.dest_config.delimiter\">\n              <mat-option *ngFor=\"let type of dimRef.dimdelimitertype\" [value]=\"type.delimiter_type\">\n                {{ type.delimiter_type }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field>\n            <mat-select matInput placeholder=\"lineterminator\"\n            [(value)]=\"job.dest_config.lineterminator\">\n              <mat-option *ngFor=\"let type of dimRef.dimnewlinetype\" [value]=\"type.line_type\">\n                {{ type.description }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n        </div>\n        <div layout=\"row\">\n          <span>\n            <button mat-raised-button color=\"primary\"\n            class=\"text-upper\" (click)=\"accept('AWS_S3')\">Accept</button>\n          </span>\n\n        </div>\n\n\n      </div>\n\n    </div>\n  </div>\n\n  <div layout=\"row\">\n    <button  mat-raised-button color=\"accent\" (click)=\"cancel()\">\n      Previous\n    </button>\n\n    <span class=\"fill-remaining-space\"></span>\n    <button  mat-raised-button color=\"accent\" (click)=\"submit()\">\n      Next\n    </button>\n\n  </div>\n</div>\n\n</div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\n\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { JobsService } from '../../services/jobs.service';\nimport { DimensionDataService } from '../../data/dimensiondata.service';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\nimport { IConnectorDetails } from '../../models/connection';\nimport { IDimRef } from '../../models/dimensions';\n\nimport {\n  IJob,\n  IJobModels,\n  IJobFields,\n  IJobconfig,\n  initJobRecord\n} from '../../models/jobs';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-editjob',\n  templateUrl: './editjob.component.html',\n  styleUrls: ['./editjob.component.css']\n})\nexport class EditjobComponent implements OnInit {\n\n  errorMessages = [];\n  job_id: number;\n  ptype: string;\n  jstep = 1;\n  // seletedJobRecord details\n  selectedJobRecord: IJob = JSON.parse(JSON.stringify(initJobRecord));\n  origJobRecord: IJob;\n\n  showSelectedMapRecord: boolean = false;\n  newJobFlag = false;\n  cloneJobFlag = false;\n  adhocJobFlag = false;\n  dimRef: IDimRef;\n\n\n  // initialize conn record\n  selectedConnRecord: IConnectorDetails = {\n    conn_id: -1,\n    conn_system_type: '',\n    conn_type: '',\n    name: '',\n    conn_logo: '',\n    create_date: '',\n    modified_date: '',\n    query_type: 'update',\n\n    sfauth: {\n      auth_username: '',\n      auth_password: '',\n      auth_host: '',\n      oauth_object_id: '',\n      security_token: '',\n    },\n    s3auth: {\n      aws_access_key_id: '',\n      aws_secret_access_key: '',\n      bucket_name: '',\n      aws_region: '',\n    },\n  };\n\n  dataloadedflag = false;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private router: Router,\n    private route: ActivatedRoute,\n    private _formBuilder: FormBuilder,\n    private _loadingService: TdLoadingService,\n    private jobsService: JobsService,\n    private dimensionDataService: DimensionDataService,\n    private sidSnackbarComponent: SidSnackbarComponent\n\n  ) {\n\n    this.job_id = this.route.snapshot.params['id'];\n    this.ptype = this.route.snapshot.params['type'];\n\n    if (this.ptype && this.ptype == 'c') {\n      this.cloneJobFlag = true\n    }\n    this.selectedJob();\n  }\n\n  ngOnInit(): void {\n//    console.log(this.route.snapshot);\n  }\n\n\n  selectedJob() {\n    this.newJobFlag = false;\n    if (this.job_id < 1) {\n      this.newJobFlag = true;\n    }\n    this.origJobRecord = JSON.parse(JSON.stringify(this.selectedJobRecord));\n\n    this._loadingService.register('loadingsideditjob');\n\n    if (this.newJobFlag) {\n      // new job\n      // this.selectedJobRecord = event;\n      this.dataloadedflag = true;\n      this._loadingService.resolve('loadingsideditjob');\n    } else {\n      // existing job\n      this.jobsService.getJobbyId(String(this.job_id)).subscribe(\n        (result) => {\n          if (this.cloneJobFlag) {\n            result.records.jobs[0].job_id = -1;\n            result.records.jobs[0].job_name = '';\n          }\n          console.log(result);\n          // this.selectedJobRecord = result.records.jobs[0];\n          this.selectedJobRecord = JSON.parse(JSON.stringify(result.records.jobs[0]));\n\n          this.origJobRecord = JSON.parse(JSON.stringify(this.selectedJobRecord));\n          console.log('downloaded...');\n          console.log(this.selectedJobRecord);\n\n          this.dataloadedflag = true;\n          this._loadingService.resolve('loadingsideditjob');\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsideditjob');\n          this.sidSnackbarComponent.systemError();\n        }\n      );\n    }\n\n  }\n\n  sourceDetails(sourceStatus: boolean) {\n    this._loadingService.register('loadingsideditjob');\n\n    if(sourceStatus){\n      this.jstep = 2;\n    }\n    this._loadingService.resolve('loadingsideditjob');\n\n  }\n\n\n  DestinationDetails(destStatus: boolean) {\n    this._loadingService.register('loadingsideditjob');\n\n    // console.log('dest ended');\n    if(destStatus){\n      if (this.selectedJobRecord.dest_config.conn_type != 'Salesforce'){\n        this.selectedJobRecord.destfields = this.selectedJobRecord.sourcefields;\n      }\n      this.jstep = 3;\n    }\n    else{\n      this.jstep = 1;\n    }\n    this._loadingService.resolve('loadingsideditjob');\n\n  }\n  mapDetails(mapStatus: boolean) {\n    if(mapStatus){\n      this.jstep = 4;\n    }\n    else {\n      this.jstep = 2;\n    }\n  }\n  adhocJobToggle(event){\n    if(this.adhocJobFlag){\n      this.selectedJobRecord.run_type = 'A'\n    }\n    else{\n      this.selectedJobRecord.run_type = 'R'\n    }\n  }\n\n  resetJob(){\n    if(this.job_id < 1){\n      // we have to deep copy, simpel assignment wont work\n      // as we have deep interface\n      this.selectedJobRecord = JSON.parse(JSON.stringify(initJobRecord));\n    }\n    else{\n      this.selectedJobRecord = JSON.parse(JSON.stringify(this.origJobRecord));\n    }\n    this.jstep = 1;\n  }\n\n  validateJob(){\n    let errorMessage = [];\n    if(this.selectedJobRecord.job_name == null ||\n      this.selectedJobRecord.job_name == '' ||\n      this.selectedJobRecord.job_name == 'New') {\n      errorMessage.push('Invalid Job name');\n    }\n\n    if(this.selectedJobRecord.run_type == 'A'){\n      if(this.selectedJobRecord.dest_config == null ||\n        this.selectedJobRecord.dest_config.conn_id < 1) {\n        errorMessage.push('Invalid Connector');\n      }\n    }\n\n    if(errorMessage.length > 0){\n      this.sidSnackbarComponent.showMessage(errorMessage);\n      return false;\n    }\n\n    return true;\n  }\n\n  createForm(){\n\n  }\n\n  submitForm(){\n\n    console.log('job..submitted');\n\n    // validate the job\n    if(!this.validateJob()){\n      return;\n    }\n    console.log('submitting job..')\n    this._loadingService.register('loadingsidjob');\n\n    this.jobsService.updateJob(this.selectedJobRecord).subscribe(\n      (result) => {\n        this._loadingService.resolve('loadingsidjob');\n        this.sidSnackbarComponent.parseResult(result);\n\n      },\n      (err) => {\n        console.log(err);\n        this._loadingService.resolve('loadingsidjob');\n        this.sidSnackbarComponent.systemError();\n      }\n    );\n\n  }\n  cancel(){\n    this.jstep = 3;\n  }\n\n}\n","<div class=\"sidcontainer\">\n  <div *tdLoading=\"\n      'loadingsideditjob';\n      mode: 'indeterminate';\n      type: 'linear';\n      strategy: 'overlay';\n      color: 'primary'\n    \">\n    <div *ngIf=\"dataloadedflag\">\n      <div layout=\"row\">\n        <mat-card class=\"card-colored\" flex>\n          <mat-card-header>\n            <button mat-button color=\"primary\" style=\"color: white\" disabled>\n              {{ selectedJobRecord.job_name }}\n            </button>\n            <span class=\"fill-remaining-space\"></span>\n            <button mat-mini-fab color=\"accent\" title=\"Reset Job\" (click)=\"resetJob()\">\n              <mat-icon style=\"color: white\" color=\"warn\">\n                change_circle</mat-icon>\n            </button>\n\n          </mat-card-header>\n        </mat-card>\n      </div>\n      <div *ngIf=\"newJobFlag\" layout=\"row\">\n        <span class=\"fill-remaining-space\"></span>\n        <mat-slide-toggle color=\"accent\"\n        [(ngModel)]=\"adhocJobFlag\" [checked]=\"adhocJobFlag\"\n          (change)=\"adhocJobToggle($event)\">Adhoc job\n        </mat-slide-toggle>\n\n      </div>\n\n      <div class=\"classcomponent\" layout=\"row\">\n        <mat-card flex>\n          <mat-form-field>\n            <input matInput placeholder=\"Job Name\" [(ngModel)]=\"selectedJobRecord.job_name\"\n              [ngModelOptions]=\"{ standalone: true }\" />\n          </mat-form-field>\n\n          <mat-form-field>\n            <input matInput placeholder=\"Email Distribution List\" [(ngModel)]=\"selectedJobRecord.tolist\"\n              [ngModelOptions]=\"{ standalone: true }\" />\n          </mat-form-field>\n\n        </mat-card>\n      </div>\n\n      <div *ngIf=\"adhocJobFlag\" class=\"classcomponent\" layout=\"row\">\n        <destselector [job]=\"selectedJobRecord\" (ostatus)=\"DestinationDetails($event)\">\n        </destselector>\n\n      </div>\n      <div *ngIf=\"!adhocJobFlag\">\n        <div class=\"classcomponent\" [ngClass]=\"{'disabled':jstep != 1}\">\n          <mat-card color flex>\n            <sourceselector [job]=\"selectedJobRecord\" (ostatus)=\"sourceDetails($event)\">\n            </sourceselector>\n          </mat-card>\n        </div>\n        <div class=\"classcomponent\" [ngClass]=\"{'disabled':jstep != 2}\">\n          <mat-card flex>\n\n            <destselector [job]=\"selectedJobRecord\" (ostatus)=\"DestinationDetails($event)\">\n            </destselector>\n\n          </mat-card>\n\n        </div>\n        <div class=\"classcomponent\" [ngClass]=\"{'disabled':jstep != 3}\">\n          <mat-card flex>\n            <mapselector [job]=\"selectedJobRecord\" (ostatus)=\"mapDetails($event)\">\n            </mapselector>\n          </mat-card>\n\n        </div>\n\n\n      </div>\n      <div class=\"classcomponent\" [ngClass]=\"{'disabled':jstep != 4}\">\n        <mat-card>\n          <button mat-raised-button color=\"accent\" (click)=\"cancel()\">\n            Previous\n          </button>\n          <span class=\"fill-remaining-space\"></span>\n\n          Accept all changes? &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n          <button mat-raised-button color=\"warn\"\n          (click)=\"submitForm()\" [disabled]=\"false\">\n            Submit\n          </button>\n\n        </mat-card>\n      </div>\n\n\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, Input, OnChanges, Output, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { SimpleChanges } from '@angular/core';\n\nimport { ITdDataTableColumn } from '@covalent/core/data-table';\nimport {\n  TdDataTableService,\n  TdDataTableSortingOrder,\n  ITdDataTableSortChangeEvent,\n} from '@covalent/core/data-table';\nimport { IPageChangeEvent } from '@covalent/core/paging';\n\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { IConnectorDetails } from '../../../models/connection';\nimport { DimensionDataService } from '../../../data/dimensiondata.service';\nimport { JobsService } from '../../../services/jobs.service';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\nimport { IDimMapType, IDimFileMask } from '../../../models/dimensions';\n\nimport {\n  IJob,\n  IJobModels,\n  IJobmap,\n  IJobFields,\n  IJobconfig,\n} from '../../../models/jobs';\n\n\n@Component({\n  selector: 'mapselector',\n  templateUrl: './mapselector.component.html',\n  styleUrls: ['./mapselector.component.css']\n})\nexport class MapselectorComponent implements OnChanges {\n\n  // selectedMapRecord: FormGroup;\n  showSelectedMapRecord: boolean = false;\n  selectedMapRecord: FormGroup;\n\n  // Datatable related variables\n  configWidthColumns: ITdDataTableColumn[] = [\n    { name: 'index', label: '#No', width: 50 },\n    { name: 'source_field', label: 'Source Field', width: 250 },\n    { name: 'map_type', label: 'Map Type', width: 80 },\n    { name: 'map_value', label: 'Map Value', width: 100 },\n    { name: 'lookup_model', label: 'Lookup Model', width: 100 },\n    { name: 'lookup_join_field', label: 'Lookup Join Field', width: 150 },\n    { name: 'lookup_return_field', label: 'Return Field', width: 80 },\n    { name: 'dest_model', label: 'Dest Model' },\n    { name: 'dest_field', label: 'Dest Field' },\n  ];\n  filteredData: any[] = [];\n  filteredTotal = 0;\n  searchTerm = '';\n  fromRow = 1;\n  currentPage = 1;\n  pageSize = 50;\n  sortBy = 'index';\n  selectedRow: any[] = [];\n  sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Descending;\n\n  sourceFieldDisable: boolean = true;\n\n  newJobFlag = false;\n  cloneJobFlag = false;\n  changeSrcConnector = false;\n  changeDstConnector = false;\n  showSourceQuery = false;\n\n  dimMapTypes: IDimMapType[];\n  jobModels: IJobModels[];\n  jobDestModelFields: IJobFields[];\n  lookupFields: IJobFields[];\n\n  @Input()\n  job: IJob;\n\n  @Output()\n  ostatus: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _formBuilder: FormBuilder,\n    private _loadingService: TdLoadingService,\n    private _dataTableService: TdDataTableService,\n    private jobsService: JobsService,\n    private dimensionDataService: DimensionDataService,\n    private sidSnackbarComponent: SidSnackbarComponent\n\n  ) {\n    this.getDimensions();\n\n  }\n\n  // ngOnInit(): void {\n  //   this.selectedMapRecord = this.mapForm();\n  //   if(this.job.job_id < 0){\n  //     this.job.map = [];\n  //   }\n  //   this.modelMap();\n\n  // }\n  ngOnChanges(changes: SimpleChanges){\n\n    for (const propName in changes) {\n      if (changes.hasOwnProperty(propName)) {\n        switch (propName) {\n          case 'job': {\n            this.job = changes['job'].currentValue;\n          }\n        }\n      }\n    }\n\n    this.selectedMapRecord = this.mapForm();\n    if(this.job.job_id < 0){\n      this.job.map = [];\n    }\n    // console.log(this.job);\n\n    this.modelMap();\n\n  }\n  getDimensions() {\n    this._loadingService.register('loadingsidmapjob');\n    this.dimensionDataService.dimensionRecord.subscribe((result) => {\n      this._loadingService.resolve('loadingsidmapjob');\n      if (result.records) {\n        this.dimMapTypes = result.records.dimmaptype;\n      }\n    });\n  }\n  mapForm() {\n    return this._formBuilder.group({\n      source_model: [{ value: '', disabled: false }, Validators.required],\n      source_field: [{ value: '', disabled: false }, Validators.required],\n      map_type: [{ value: '', disabled: false }, Validators.required],\n      map_value: [{ value: '' }],\n      lookup_model: [{ value: '' }],\n      lookup_join_field: [{ value: '' }],\n      lookup_return_field: [{ value: '' }],\n      dest_model: [{ value: '', disabled: false }, Validators.required],\n      dest_field: [{ value: '', disabled: false }, Validators.required],\n      index: [{ value: '' }],\n    });\n  }\n\n  sort(sortEvent: ITdDataTableSortChangeEvent): void {\n    this.sortOrder =\n      this.sortOrder === TdDataTableSortingOrder.Ascending\n        ? TdDataTableSortingOrder.Descending\n        : TdDataTableSortingOrder.Ascending;\n    this.sortBy = sortEvent.name;\n    this.filterTable();\n  }\n\n  search(searchTerm: string): void {\n    this.searchTerm = searchTerm;\n    this.filterTable();\n  }\n  page(pagingEvent: IPageChangeEvent): void {\n    this.fromRow = pagingEvent.fromRow;\n    this.currentPage = pagingEvent.page;\n    this.pageSize = pagingEvent.pageSize;\n    this.filterTable();\n  }\n  filterTable() {\n    let newData = this.job.map;\n    if (Object.keys(newData).length === 0 && newData.constructor === Object) {\n      return;\n    }\n    const excludedColumns: string[] = this.configWidthColumns\n      .filter((column: ITdDataTableColumn) => {\n        return (\n          (column.filter === undefined && column.hidden === true) ||\n          (column.filter !== undefined && column.filter === false)\n        );\n      })\n      .map((column: ITdDataTableColumn) => {\n        return column.name;\n      });\n\n    newData = this._dataTableService.filterData(\n      newData,\n      this.searchTerm,\n      true,\n      excludedColumns\n    );\n\n    newData = this._dataTableService.filterData(\n      newData,\n      this.searchTerm,\n      true,\n      excludedColumns\n    );\n    this.filteredTotal = newData.length;\n    newData = this._dataTableService.sortData(\n      newData,\n      this.sortBy,\n      this.sortOrder\n    );\n    newData = this._dataTableService.pageData(\n      newData,\n      this.fromRow,\n      this.currentPage * this.pageSize\n    );\n    this.filteredData = newData;\n  }\n\n  /*\n    Map datatable related function\n  */\n  selectMapRecord(event: any) {\n\n    this.selectedMapRecord.patchValue({\n      source_model: event.row.source_model,\n      source_field: event.row.source_field,\n      map_type: event.row.map_type,\n      map_value: event.row.map_value,\n      lookup_model: event.row.lookup_model,\n      lookup_join_field: event.row.lookup_join_field,\n      lookup_return_field: event.row.lookup_return_field,\n      dest_model: event.row.dest_model,\n      dest_field: event.row.dest_field,\n      index: event.row.index,\n    });\n    if (event.row.lookup_model != null) {\n      this.fetchModels(event.row.lookup_model);\n    }\n\n    this.showSelectedMapRecord = true;\n  }\n\n  updateMap() {\n    if (this.validateUpdateMap()) {\n\n      const idx = this.selectedMapRecord.controls['index'].value;\n\n      if (idx >= 0) {\n\n        this.job.map[idx].source_model = this.selectedMapRecord.controls['source_model'].value;\n        this.job.map[idx].source_field = this.selectedMapRecord.controls['source_field'].value;\n        this.job.map[idx].map_type = this.selectedMapRecord.controls['map_type'].value;\n        this.job.map[idx].map_value = this.selectedMapRecord.controls['map_value'].value;\n        this.job.map[idx].lookup_model = this.selectedMapRecord.controls['lookup_model'].value;\n        this.job.map[idx].lookup_join_field = this.selectedMapRecord.controls['lookup_join_field'].value;\n        this.job.map[idx].lookup_return_field = this.selectedMapRecord.controls['lookup_return_field'].value;\n        this.job.map[idx].dest_model = this.selectedMapRecord.controls['dest_model'].value;\n        this.job.map[idx].dest_field = this.selectedMapRecord.controls['dest_field'].value;\n\n      }\n      else {\n        var newMap: IJobmap =\n        {\n          source_model: this.selectedMapRecord.controls['source_model'].value,\n          source_field: this.selectedMapRecord.controls['source_field'].value,\n          map_type: this.selectedMapRecord.controls['map_type'].value,\n          map_value: this.selectedMapRecord.controls['map_value'].value,\n          lookup_model: this.selectedMapRecord.controls['lookup_model'].value,\n          lookup_join_field: this.selectedMapRecord.controls['lookup_join_field'].value,\n          lookup_return_field: this.selectedMapRecord.controls['lookup_return_field'].value,\n          dest_model: this.selectedMapRecord.controls['dest_model'].value,\n          dest_field: this.selectedMapRecord.controls['dest_field'].value,\n          index: this.job.map.length\n        }\n        this.job.map.push(newMap);\n      }\n\n      this.filterTable();\n      this.showSelectedMapRecord = false;\n      this.sourceFieldDisable = true;\n      this._changeDetectorRef.detectChanges();\n\n    }\n  }\n\n  validateUpdateMap() {\n\n    let returnMessages = [];\n    this._changeDetectorRef.detectChanges();\n\n    // if (this.selectedMapRecord.controls['source_model'].value == '' ||\n    //   this.selectedMapRecord.controls['source_model'].value == null) {\n    //   returnMessages.push('Invalid Source Model');\n    // }\n\n    // if (this.selectedMapRecord.controls['dest_model'].value == '' ||\n    //   this.selectedMapRecord.controls['dest_model'].value == null) {\n    //   returnMessages.push('Invalid Dest Model');\n    // }\n\n    if (this.selectedMapRecord.controls['source_field'].value == '' ||\n      this.selectedMapRecord.controls['source_field'].value == null) {\n      returnMessages.push('Invalid Source Field');\n    }\n\n    if (this.selectedMapRecord.controls['dest_field'].value == '' ||\n      this.selectedMapRecord.controls['dest_field'].value == null) {\n      returnMessages.push('Invalid Dest Field');\n    }\n\n\n    if (this.selectedMapRecord.controls['map_type'].value == null ||\n      this.selectedMapRecord.controls['map_type'].value == 'map_n_hook') {\n      returnMessages.push('Invalid Map Type or not supported');\n    }\n    else {\n\n      if ((this.selectedMapRecord.controls['map_type'].value == 'lookup')\n        && (\n          (this.selectedMapRecord.controls['lookup_model'].value == null)\n          || (this.selectedMapRecord.controls['lookup_model'].value.length == 0)\n          || (this.selectedMapRecord.controls['lookup_join_field'].value == null)\n          || (this.selectedMapRecord.controls['lookup_join_field'].value.length == 0)\n          || (this.selectedMapRecord.controls['lookup_return_field'].value == null)\n          || (this.selectedMapRecord.controls['lookup_return_field'].value.length == 0)\n        )) {\n        returnMessages.push('Lookup details missing');\n      }\n      if ((this.selectedMapRecord.controls['map_type'].value == 'constant')\n        && (\n          (this.selectedMapRecord.controls['map_value'].value == null)\n          || (this.selectedMapRecord.controls['map_value'].value == '')\n        )) {\n        returnMessages.push('Constant details missing');\n      }\n      if (this.selectedMapRecord.controls['map_type'].value == 'map_n_hook') {\n        returnMessages.push('map_n_hook not supported');\n      }\n\n    }\n\n    /* check if we found any error */\n    if (returnMessages.length > 0) {\n      this.sidSnackbarComponent.showMessage(returnMessages);\n\n      return false;\n    }\n    return true;\n  }\n  validateMap() {\n\n    let errorMessages = [];\n    this._changeDetectorRef.detectChanges();\n\n    this.job.map.forEach(function (element, idx) {\n      if (element.map_type == null || element.map_type == '') {\n        errorMessages.push('Invalid Map Type: record # '.concat(idx.toString()));\n      }\n      else {\n        if(element.map_type == 'map' &&\n        (element.dest_field == null || element.dest_field == '')){\n          errorMessages.push('Destination field missing: record # '.concat(idx.toString()));\n        }\n        else if ((element.map_type == 'lookup') && (\n            (element.lookup_model == null)\n            || (element.lookup_model.length == 0)\n            || (element.lookup_join_field == null)\n            || (element.lookup_join_field.length == 0)\n            || (element.lookup_return_field == null)\n            || (element.lookup_return_field.length == 0)\n          )) {\n          errorMessages.push('Lookup details missing: record # '.concat(idx.toString()));\n        }\n        else if ((element.map_type == 'constant')\n          && (\n            (element.map_value == null)\n            || (element.map_value == '')\n          )) {\n          errorMessages.push('Constant details missing: record # '.concat(idx.toString()));\n        }\n\n      }\n\n    });\n\n    /* check if we found any error */\n    if (errorMessages.length > 0) {\n      this.sidSnackbarComponent.showMessage(errorMessages);\n      return false;\n    }\n    return true;\n  }\n\n\n  cancelMap() {\n    this.showSelectedMapRecord = false;\n    this.sourceFieldDisable = true;\n\n  }\n\n  deleteMap() {\n    this.showSelectedMapRecord = false;\n    const idx = this.selectedMapRecord.controls['index'].value;\n    this.job.map.splice(idx, 1);\n    this.job.map.forEach((element, idx) => {\n      element.index = idx;\n    });\n\n    this.filterTable();\n    this.sourceFieldDisable = true;\n\n  }\n  addNewMap() {\n\n    this.setMapRecord();\n\n    this.showSelectedMapRecord = true;\n    this.sourceFieldDisable = false;\n\n  }\n  setMapRecord() {\n    this.selectedMapRecord.patchValue({\n      lookup_join_field: '',\n      lookup_return_field: '',\n      lookup_model: '',\n      source_model: this.job.source_config.filestartwith,\n      dest_model: this.job.map[0].dest_model,\n      map_value: '',\n      index: -1\n    });\n\n\n  }\n  fetchModels(model_name) {\n    this._loadingService.register('loadingsidmapjob');\n\n    this.jobsService\n      .fetchConnModels(\n        String(this.job.dest_config.conn_id),\n        model_name\n      )\n      .subscribe(\n        (result) => {\n          this.lookupFields = result.records.fields;\n          this._loadingService.resolve('loadingsidmapjob');\n\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsidmapjob');\n          this.sidSnackbarComponent.systemError();\n\n        }\n      );\n\n\n  }\n\n  modelChange(model_name) {\n    this.fetchModels(model_name);\n    // remove lookup fields\n    this.selectedMapRecord.patchValue({\n      lookup_join_field: '',\n      lookup_return_field: '',\n    });\n\n  }\n\n  mapChange(map_type){\n    if(this.job.dest_config.conn_type != 'Salesforce'){\n      this.sidSnackbarComponent.showMessage('Lookup is not available for this connector');\n    }\n  }\n\n  mapFields(){\n    this.job.map = [];\n    this.job.sourcefields.forEach((element, idx) => {\n      //match it against the destination field\n      // element.field_name\n\n      let objIndex = this.job.destfields.findIndex(\n        (obj) =>\n          obj.field_name.toLowerCase() === element.field_name.toLowerCase()\n      );\n\n      if (objIndex == -1) {\n        // we should do substring match\n        objIndex = this.job.destfields.findIndex(\n          (obj) =>\n            obj.field_name.toLowerCase().substring(\n              0, element.field_name.length) === element.field_name.toLowerCase()\n        );\n\n      }\n\n      if (objIndex > -1) {\n        // found the record\n        const mapRecord: IJobmap = {\n          source_model: this.job.source_config.filestartwith,\n          source_field: element.field_name,\n          map_type: 'map',\n          map_value: '',\n          lookup_model: '',\n          lookup_join_field: '',\n          lookup_return_field: '',\n          dest_model: this.job.dest_config.model ,\n          dest_field: this.job.destfields[objIndex].field_name,\n          index: idx,\n        };\n        this.job.map.push(mapRecord);\n      } else {\n        const mapRecord: IJobmap = {\n          source_model: this.job.source_config.filestartwith,\n          source_field: element.field_name,\n          map_type: 'map',\n          map_value: '',\n          lookup_model: '',\n          lookup_join_field: '',\n          lookup_return_field: '',\n          dest_model: this.job.dest_config.model,\n          dest_field: '',\n          index: idx,\n        };\n        this.job.map.push(mapRecord);\n      }\n    });\n    // console.log(this.job);\n    this.filterTable();\n\n  }\n  modelMap() {\n    if (this.job.map.length == 0) {\n      this.mapFields();\n    }\n    else {\n      this.job.map.forEach(function (element, i) {\n        element.index = i;\n      });\n      this.filterTable();\n\n    }\n\n  }\n\n  submitForm() {\n    if (this.validateMap()) {\n      this.ostatus.emit(true);\n    }\n  }\n  cancel(){\n    this.ostatus.emit(false);\n  }\n\n\n}\n","<div class=\"sidcontainer\">\n    <div *tdLoading=\"\n        'loadingsidmapjob';\n        mode: 'indeterminate';\n        type: 'linear';\n        strategy: 'overlay';\n        color: 'primary'\n      \">\n        <br />\n        <div *ngIf=\"showSelectedMapRecord\">\n            <div [formGroup]=\"selectedMapRecord\">\n                <div layout=\"row\">\n                    <span class=\"fill-remaining-space\"></span>\n                    <button mat-mini-fab color=\"warn\" class=\"white-icon\" (click)=\"deleteMap()\">\n                        <mat-icon>delete</mat-icon>\n                    </button>\n                </div>\n\n                <div layout=\"row\">\n                    <mat-form-field>\n                        <mat-select matInput placeholder=\"Source Field\" formControlName=\"source_field\"\n                            [disabled]=\"sourceFieldDisable\">\n                            <mat-option *ngFor=\"let elem of job.sourcefields\" [value]=\"elem.field_name\">\n                                {{ elem.field_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <mat-select matInput placeholder=\"Map Type\" formControlName=\"map_type\" (selectionChange)=\"mapChange($event.value)\">\n                            <mat-option *ngFor=\"let type of dimMapTypes\" [value]=\"type.map_type\">\n                                {{ type.map_type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input matInput placeholder=\"Map Value\" formControlName=\"map_value\" />\n                    </mat-form-field>\n                </div>\n                <div layout=\"row\" *ngIf=\"selectedMapRecord.value.map_type == 'lookup' && job.dest_config.conn_type == 'Salesforce'\">\n                    <mat-form-field>\n                        <mat-select matInput placeholder=\"Lookup Model\" (selectionChange)=\"modelChange($event.value)\"\n                            formControlName=\"lookup_model\">\n                            <mat-option *ngFor=\"let type of job.models\" [value]=\"type.name\">\n                                {{ type.name }} ( {{ type.label }} )\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <mat-select matInput placeholder=\"Lookup Join Field\" formControlName=\"lookup_join_field\">\n                            <mat-option *ngFor=\"let type of lookupFields\" [value]=\"type.field_name\">\n                                {{ type.field_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <mat-select matInput placeholder=\"Lookup Return Field\" formControlName=\"lookup_return_field\">\n                            <mat-option *ngFor=\"let type of lookupFields\" [value]=\"type.field_name\">\n                                {{ type.field_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div layout=\"row\">\n                    <mat-form-field>\n                        <input matInput placeholder=\"Destination Model\" formControlName=\"dest_model\" readonly />\n                    </mat-form-field>\n                    <mat-form-field>\n                        <mat-select matInput placeholder=\"Destation Field\" formControlName=\"dest_field\">\n                            <mat-option *ngFor=\"let type of job.destfields\" [value]=\"type.field_name\">\n                                {{ type.field_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div layout=\"row\">\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    <button mat-mini-fab color=\"primary\" class=\"white-icon\" (click)=\"updateMap()\">\n                        <mat-icon>done</mat-icon>\n                    </button>\n                    &nbsp;\n                    <button mat-mini-fab color=\"warn\" class=\"white-icon\" (click)=\"cancelMap()\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"!showSelectedMapRecord\" layout=\"row\">\n            <button mat-mini-fab color=\"primary\"\n            title=\"Auto map fields\"\n            class=\"white-icon\" (click)=\"mapFields()\">\n                <mat-icon>sync_alt</mat-icon>\n            </button>\n\n            <span class=\"fill-remaining-space\"></span>\n            <button mat-mini-fab color=\"primary\" class=\"white-icon\" (click)=\"addNewMap()\">\n                <mat-icon>add</mat-icon>\n            </button>\n        </div>\n\n        <div layout=\"row\" layout-align=\"start center\" class=\"pad-left-sm pad-right-sm\">\n            <td-search-box #searchBox backIcon=\"arrow_back\" class=\"push-right-sm\" placeholder=\"Search\"\n                (searchDebounce)=\"search($event)\" [alwaysVisible]=\"true\" flex>\n            </td-search-box>\n        </div>\n        <mat-divider></mat-divider>\n\n        <td-data-table [sortable]=\"true\" [clickable]=\"true\" [selectable]=\"false\" (rowClick)=\"selectMapRecord($event)\"\n            [data]=\"filteredData\" [columns]=\"configWidthColumns\" [style.height.px]=\"400\" [sortBy]=\"sortBy\"\n            (sortChange)=\"sort($event)\" [sortOrder]=\"sortOrder\">\n        </td-data-table>\n        <td-paging-bar #pagingBar [pageSize]=\"pageSize\" [total]=\"filteredTotal\" (change)=\"page($event)\">\n            <span hide-xs>Rows per page:</span>\n            <mat-select [style.width.px]=\"50\" [(ngModel)]=\"pageSize\" [ngModelOptions]=\"{ standalone: true }\"\n                name=\"pagesize\">\n                <mat-option *ngFor=\"let size of [50, 100, 200, 500]\" [value]=\"size\">\n                    {{ size }}\n                </mat-option>\n            </mat-select>\n            {{ pagingBar.range }}\n            <span hide-xs>of {{ pagingBar.total }}</span>\n        </td-paging-bar>\n\n        <div layout=\"row\">\n            <button  mat-raised-button color=\"accent\" (click)=\"cancel()\">\n                Previous\n              </button>\n\n            <span class=\"fill-remaining-space\"></span>\n            <button mat-raised-button color=\"accent\" (click)=\"submitForm()\" [disabled]=\"false\">\n                Next\n            </button>\n        </div>\n\n\n    </div>\n</div>","import { Component, EventEmitter, Input, OnChanges, Output, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { SimpleChanges } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { IJob, IJobFields, IJobModels , IJobquery } from '../../../models/jobs';\nimport { IConnectorDetails } from '../../../models/connection';\nimport { DimensionDataService } from '../../../data/dimensiondata.service';\nimport { DocumentService } from '../../../services/document.service';\nimport { IDocumentRecord } from '../../../models/documents';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\nimport { JobsService } from '../../../services/jobs.service';\nimport { SalesforceService } from '../../../services/salesforce.service';\nimport { parseQuery, composeQuery, isQueryValid, formatQuery } from 'soql-parser-js';\nimport { from } from 'rxjs';\nimport { IDimRef } from '../../../models/dimensions';\n\n@Component({\n  selector: 'sourceselector',\n  templateUrl: './sourceselector.component.html',\n  styleUrls: ['./sourceselector.component.css']\n})\nexport class SourceselectorComponent implements OnChanges {\n\n  files: any;\n  dataloaded: boolean = false;\n  editFlag: boolean = false;\n  connChangedFlag: boolean = false;\n\n  disabled: boolean = false;\n  enabled: boolean = true;\n  dimRef: IDimRef;\n\n  delimiter: string = '|';\n  newline: string = 'LF';\n  sfdestModels: IJobModels[];\n  sfdestModelFields: IJobFields[];\n  sfdestmodel: string = '';\n  sfquery: IJobquery = {\n    query: '', metadata: null\n  };\n  sfqueryFlag = false;\n  sfparsedquery: any;\n\n  sourceConnector: IConnectorDetails = {\n    conn_id: -1,\n    name: '',\n    conn_type: '',\n    conn_system_type: '',\n    conn_logo: '',\n    create_date: '',\n    modified_date: '',\n    query_type: '',\n    sfauth: null,\n    s3auth: null\n\n  }\n\n  @Input()\n  job: IJob;\n\n  @Output()\n  ostatus: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  sfdataloaded = false;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _loadingService: TdLoadingService,\n    private router: Router,\n    private dimensionDataService: DimensionDataService,\n    private documentService: DocumentService,\n    private jobsService: JobsService,\n    private salesforceService: SalesforceService,\n    private sidSnackbarComponent: SidSnackbarComponent\n    ) {\n      // this.getDimensions();\n  }\n\n  // ngOnInit(): void {\n  //   this.init();\n  //   this.getDimensions();\n  //   // this.dataloaded = true;\n  // }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    for (const propName in changes) {\n      if (changes.hasOwnProperty(propName)) {\n        switch (propName) {\n          case 'job': {\n            this.job = changes['job'].currentValue;\n          }\n        }\n      }\n    }\n\n    this.init();\n    this.getDimensions();\n  }\n\n  init(){\n    this.connChangedFlag = false;\n  }\n  selectedConnection(connector: IConnectorDetails) {\n    this.connChangedFlag = true;\n    this.sfdataloaded = false;\n    // this.sourceConnector = connector;\n    this.job.source_config.conn_id = connector.conn_id;\n    this.job.source_config.conn_name  = connector.name;\n    this.job.source_config.conn_logo_path  = connector.conn_logo;\n    this.job.source_config.conn_system_type  = connector.conn_system_type;\n    this.job.source_config.conn_type = connector.conn_type;\n\n    if(connector.conn_type == 'Salesforce'){\n      this.fetchSfModels(null);\n    }\n\n    // console.log(this.selectedConnRecord.conn_type)\n  }\n\n  getDimensions() {\n    this._loadingService.register('loadingsourcesid');\n    this.dimensionDataService.dimensionRecord.subscribe((result) => {\n      this._loadingService.resolve('loadingsourcesid');\n      if (result.records) {\n        this.dimRef = result.records;\n        this.dataloaded = true;\n      }\n    });\n  }\n\n\n  selectedS3File(filename: string) {\n\n    this._loadingService.register('loadingsourcesid');\n\n    this.documentService.s3Document(\n      this.job.source_config.conn_id.toString(),\n      filename,\n      this.delimiter,\n      this.newline\n      ).subscribe(\n      (result) => {\n        // console.log(result);\n        if (result.status == 'ok'){\n          if(result.records.document.length > 0) {\n            this.job.sourcefields\n\n            this.job.sourcefields = result.records.document;\n            // this.job.source_config = result.records.config;\n            this.job.source_config.filestartwith = result.records.config.filestartwith\n            this.job.source_config.fileendwith = result.records.config.fileendwith\n            this.job.source_config.delimiter = result.records.config.delimiter\n            this.job.source_config.lineterminator = result.records.config.lineterminator\n            this.job.source_config.encoding = result.records.config.encoding\n            this.job.source_config.filepath = result.records.config.filepath\n\n            this.job.sourcefields.forEach(function (element) {\n              element.model_name  = result.records.config.filestartwith;\n            });\n\n          }\n          else {\n            this.sidSnackbarComponent.showMessage('fields not found');\n\n          }\n        }\n        else{\n          console.log('error');\n //         this._matSnackBar.open(result.message, 'Dismiss', this.msgConfig);\n        }\n        this._loadingService.resolve('loadingsourcesid');\n      },\n      (err) => {\n        console.log(err);\n        this._loadingService.resolve('loadingsourcesid');\n        this.sidSnackbarComponent.systemError();\n\n      }\n      );\n\n\n  }\n\n  selectLocalFile(event) {\n\n  }\n  uploadLocalFile() {\n\n    this._loadingService.register('loadingsourcesid');\n\n    this.documentService.postDocument(\n      this.files,\n      this.delimiter,\n      this.newline\n      ).subscribe(\n      (result) => {\n        // console.log(result);\n        if (result.status == 'ok'){\n          if(result.records.document.length > 0) {\n            this.job.sourcefields = result.records.document;\n            this.job.source_config.filestartwith = result.records.config.filestartwith\n            this.job.source_config.fileendwith = result.records.config.fileendwith\n            this.job.source_config.delimiter = result.records.config.delimiter\n            this.job.source_config.lineterminator = result.records.config.lineterminator\n            this.job.source_config.encoding = result.records.config.encoding\n            this.job.source_config.filepath = 'local'\n\n            this.job.sourcefields.forEach(function (element) {\n              element.model_name  = result.records.config.filestartwith;\n            });\n            this.editFlag = false;\n          }\n          else {\n            this.sidSnackbarComponent.showMessage('fields not found');\n          }\n        }\n        else{\n          console.log('error');\n//          this._matSnackBar.open(result.message, 'Dismiss', this.msgConfig);\n        }\n        this._loadingService.resolve('loadingsourcesid');\n      },\n      (err) => {\n        console.log(err);\n        this._loadingService.resolve('loadingsourcesid');\n        this.sidSnackbarComponent.systemError();\n\n      }\n      );\n\n  }\n\n  fetchSfModels(model_name){\n    this._loadingService.register('loadingsourcesid');\n\n    this.jobsService\n      .fetchConnModels (\n        String(this.job.source_config.conn_id),\n        model_name\n      )\n      .subscribe(\n        (result) => {\n\n          // console.log(result);\n          this.sfdestModels = result.records.models;\n          this.sfdestModelFields = result.records.fields;\n          this.sfdataloaded = true;\n          if(this.sfqueryFlag){\n            this.constructQuery();\n            this.sfqueryFlag = false;\n          }\n          this._changeDetectorRef.detectChanges();\n          this._loadingService.resolve('loadingsourcesid');\n\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsourcesid');\n          this.sidSnackbarComponent.systemError();\n\n        }\n      );\n\n\n  }\n\n  genQuery(){\n    // console.log(this.sfdestmodel);\n    this.sfqueryFlag = true;\n    this.fetchSfModels(this.sfdestmodel);\n  }\n\n  constructQuery(){\n\n    if(this.sfdestModelFields.length > 0){\n\n      this.sfquery.query = \"SELECT \";\n      var elemList = []\n      this.sfdestModelFields.forEach(element => {\n        elemList.push(element.field_name);\n      });\n      this.sfquery.query = this.sfquery.query.concat(elemList.join(' ,'));\n      this.sfquery.query = this.sfquery.query.concat(' from ');\n      this.sfquery.query = this.sfquery.query.concat(this.sfdestmodel);\n\n      if(!isQueryValid(this.sfquery.query)){\n        this.sidSnackbarComponent.showMessage('Error generating Query');\n        return;\n      }\n      var composeq = composeQuery(parseQuery(this.sfquery.query));\n      this.sfquery.query = formatQuery(composeq);\n\n    }\n\n\n  }\n  pasteEvent(event: ClipboardEvent){\n    this.sfquery.query = event.clipboardData.getData('Text')\n  }\n\n  acceptQuery(){\n    if(this.sfquery.query.length > 0){\n      if(!isQueryValid(this.sfquery.query)){\n        this.sidSnackbarComponent.showMessage('Invalid Query');\n        return;\n      }\n      this.sfparsedquery = parseQuery(this.sfquery.query);\n      var composeq = composeQuery(this.sfparsedquery,\n      {\n        format: true,\n        formatOptions: {\n          fieldSubqueryParensOnOwnLine: true,\n          newLineAfterKeywords: true,\n          fieldMaxLineLength: 1 }\n      }\n      );\n\n      this.sfquery.query = formatQuery(composeq);\n      this.sfquery.metadata = this.sfparsedquery;\n\n    }\n    this.sidSnackbarComponent.showMessage('Query submitted for parsing, please wait...', true);\n    this._loadingService.register('loadingsourcesid');\n    this.job.source_config.query = this.sfquery;\n\n    this.salesforceService\n      .validateSFQuery (\n        this.job\n      )\n      .subscribe(\n        (result) => {\n          console.log(result);\n          this._loadingService.resolve('loadingsourcesid');\n          if(result.status != 'ok'){\n            this.sidSnackbarComponent.showMessage(result.message);\n            this.job.sourcefields = [];\n            this.job.source_config.model = '';\n            return;\n          }\n          this.sidSnackbarComponent.showMessage('Query Parsed successful, Please press Next', true);\n          this.job.sourcefields = result.records.fields;\n          this.job.source_config.model = 'sfquery';\n          this.editFlag = false;\n\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsourcesid');\n          this.sidSnackbarComponent.systemError();\n\n        }\n      );\n\n\n  }\n  toggleEditFlag(){\n    this.editFlag = !this.editFlag;\n  }\n\n  validate(){\n\n    console.log(this.job);\n\n    let errorMessage = [];\n    if(this.job.source_config == null) {\n      errorMessage.push('Invalid source config');\n    }\n    else if(this.job.source_config.conn_id == null\n      || this.job.source_config.conn_id < 1)\n    {\n      errorMessage.push('Invalid connector');\n    }\n    if(this.job.source_config.conn_type == 'File' ||\n    this.job.source_config.conn_type == 'AWS_S3'){\n      if(this.job.source_config.filestartwith == null ||\n        this.job.source_config.filestartwith == ''){\n          errorMessage.push('Invalid filename');\n        }\n        if(this.job.source_config.conn_type == 'AWS_S3' && (\n          this.job.source_config.filepath == null ||\n          this.job.source_config.filepath == '')){\n            errorMessage.push('Invalid filepath');\n          }\n    }\n    if(this.job.source_config.conn_type == 'Salesforce'){\n      if(this.job.source_config.query.query == '' ||\n      this.job.source_config.model == ''){\n        errorMessage.push('Invalid query');\n      }\n\n    }\n    if(this.job.sourcefields == null || this.job.sourcefields.length < 1) {\n      errorMessage.push('Invalid fields')\n    }\n\n    if(errorMessage.length > 0){\n      this.sidSnackbarComponent.showMessage(errorMessage);\n      return false;\n    }\n    return true;\n\n  }\n\n  submit(){\n    if(this.validate()){\n      this.ostatus.emit(true);\n    }\n\n  }\n}\n","<div *tdLoading=\"\n    'loadingsourcesid';\n    mode: 'indeterminate';\n    type: 'linear';\n    strategy: 'overlay';\n    color: 'primary'\n  \">\n  <div *ngIf=\"dataloaded\">\n\n    <div layout=\"row\">\n      <button mat-button color=\"primary\" (click)=\"toggleEditFlag()\">\n        <mat-icon color=\"primary\"> mode</mat-icon>\n        Change Source Connector\n      </button>\n    </div>\n\n    <div *ngIf=\"!editFlag\" layout=\"row\">\n      <div layout=\"column\">\n        <mat-list>\n          <mat-list-item>\n            <img matListAvatar [src]=\"job.source_config.conn_logo_path\" />\n            <div mat-line>\n              {{ job.source_config.conn_name }}\n            </div>\n            <div mat-line>\n              System Type:\n              {{ job.source_config.conn_system_type }}\n            </div>\n          </mat-list-item>\n        </mat-list>\n      </div>\n      <div layout=\"column\" class=\"rightsection\">\n        <div *ngIf=\"job.source_config.conn_type == 'Salesforce'\">\n          <mat-form-field>\n            <textarea matInput placeholder=\"Query\"\n              [(ngModel)]=\"job.source_config.query.query\"\n              [ngModelOptions]=\"{ standalone: true }\"\n              cdkTextareaAutosize cdkAutosizeMinRows=\"10\"\n              cdkAutosizeMaxRows=\"40\" disabled></textarea>\n          </mat-form-field>\n\n        </div>\n        <div *ngIf=\"job.source_config.conn_type != 'Salesforce'\">\n          <div layout=\"row\">\n            <mat-form-field>\n              <input matInput placeholder=\"FileNameStartsWith\" [(ngModel)]=\"job.source_config.filestartwith\"\n                [ngModelOptions]=\"{ standalone: true }\" />\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"FileNameEndsWith\" [(ngModel)]=\"job.source_config.fileendwith\"\n                [ngModelOptions]=\"{ standalone: true }\" />\n            </mat-form-field>\n            <mat-form-field flex>\n              <input matInput placeholder=\"FilePath\" [(ngModel)]=\"job.source_config.filepath\"\n                [ngModelOptions]=\"{ standalone: true }\" />\n\n            </mat-form-field>\n          </div>\n          <div layout=\"row\">\n            <mat-form-field>\n              <mat-select matInput placeholder=\"File Mask\" [(ngModel)]=\"job.source_config.filemask\"\n                [ngModelOptions]=\"{ standalone: true }\">\n                <mat-option *ngFor=\"let type of dimRef.dimfilemask\" [value]=\"type.filemask\">\n                  {{ type.filemask }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-select matInput placeholder=\"delimiter\" [(ngModel)]=\"job.source_config.delimiter\"\n                [ngModelOptions]=\"{ standalone: true }\">\n                <mat-option *ngFor=\"let type of dimRef.dimdelimitertype\" [value]=\"type.delimiter_type\">\n                  {{ type.delimiter_type }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"encoding\" [(ngModel)]=\"job.source_config.encoding\"\n                [ngModelOptions]=\"{ standalone: true }\" />\n            </mat-form-field>\n            <mat-form-field>\n              <mat-select matInput placeholder=\"lineterminator\" [(ngModel)]=\"job.source_config.lineterminator\"\n                [ngModelOptions]=\"{ standalone: true }\">\n                <mat-option *ngFor=\"let type of dimRef.dimnewlinetype\" [value]=\"type.line_type\">\n                  {{ type.description }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n    <div *ngIf=\"editFlag\" layout=\"row\">\n\n      <div layout=\"row\" flex>\n        <div layout=\"column\">\n          <connectionlist [shownew]=\"disabled\" [filter]=\"'input'\" [gridcomp]=\"disabled\"\n            (connection)=\"selectedConnection($event)\">\n          </connectionlist>\n        </div>\n        <div layout=\"column\">\n          <div *ngIf=\"job.source_config.conn_type == 'AWS_S3' && connChangedFlag\">\n            <div layout=\"row\">\n              <mat-form-field>\n                <mat-select placeholder=\"delimiter\" [(ngModel)]=\"job.source_config.delimiter\"\n                  [ngModelOptions]=\"{ standalone: true }\">\n                  <mat-option *ngFor=\"let type of dimRef.dimdelimitertype\" [value]=\"type.delimiter_type\">\n                    {{ type.delimiter_type }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field>\n                <mat-select placeholder=\"line terminator\" [(ngModel)]=\"job.source_config.lineterminator\"\n                  [ngModelOptions]=\"{ standalone: true }\">\n                  <mat-option *ngFor=\"let type of dimRef.dimnewlinetype\" [value]=\"type.line_type\">\n                    {{ type.line_type }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n\n            <s3explorer [conn_id]=\"job.source_config.conn_id\" [showdownload]=\"disabled\" (file)=\"selectedS3File($event)\">\n            </s3explorer>\n          </div>\n          <div *ngIf=\"job.source_config.conn_type == 'File' && connChangedFlag\">\n            <td-message #message color=\"primary\" label=\"Mandatory data\" sublabel=\"Only plain text files are supported\">\n              <button td-message-actions mat-icon-button (click)=\"message.close()\">\n                <mat-icon>cancel</mat-icon>\n              </button>\n            </td-message>\n            <br /><br />\n            <div layout=\"row\">\n              <mat-form-field>\n                <mat-select placeholder=\"delimiter\" [(ngModel)]=\"job.source_config.delimiter\"\n                  [ngModelOptions]=\"{ standalone: true }\">\n                  <mat-option *ngFor=\"let type of dimRef.dimdelimitertype\" [value]=\"type.delimiter_type\">\n                    {{ type.delimiter_type }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field>\n                <mat-select placeholder=\"line terminator\" [(ngModel)]=\"job.source_config.lineterminator\"\n                  [ngModelOptions]=\"{ standalone: true }\">\n                  <mat-option *ngFor=\"let type of dimRef.dimnewlinetype\" [value]=\"type.line_type\">\n                    {{ type.line_type }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n            <br />\n\n            <td-file-input class=\"push-left-sm push-right-sm\" #fileInput [(ngModel)]=\"files\" [disabled]=\"false\"\n              [ngModelOptions]=\"{ standalone: true }\">\n              <mat-icon color=\"primary\">folder</mat-icon>\n              <span class=\"text-upper\">Browse...</span>\n            </td-file-input>\n            <br />\n\n            <mat-form-field tdFileDrop [disabled]=\"false\" (fileDrop)=\"files = $event\"\n              (click)=\"fileInput.inputElement.click()\" (keyup.enter)=\"fileInput.inputElement.click()\"\n              (keyup.delete)=\"fileInput.clear()\" (keyup.backspace)=\"fileInput.clear()\" flex>\n              <input matInput placeholder=\"select or drop files\"\n                [value]=\"files?.length ? files?.length + ' files' : files?.name\" [disabled]=\"false\" readonly />\n            </mat-form-field>\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <button mat-icon-button *ngIf=\"files\" (click)=\"fileInput.clear()\" (keyup.enter)=\"fileInput.clear()\">\n              <mat-icon>cancel</mat-icon>\n            </button>\n            <span>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!files\" class=\"text-upper\"\n                (click)=\"uploadLocalFile()\">\n                Check\n              </button>\n            </span>\n          </div>\n          <div *ngIf=\"job.source_config.conn_type == 'Salesforce' && connChangedFlag\">\n            <div *ngIf=\"sfdataloaded\">\n              <div layout=\"row\">\n                <mat-form-field>\n                  <mat-select matInput placeholder=\"Model\" [(value)]=\"sfdestmodel\">\n                    <mat-option *ngFor=\"let model of sfdestModels\" [value]=\"model.name\">\n                      {{ model.label }}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span>\n                  <button mat-raised-button color=\"primary\" class=\"text-upper\" (click)=\"genQuery()\">\n                    Generate Query\n                  </button>\n                </span>\n              </div>\n              <div layout=\"row\">\n                <mat-form-field appearance=\"outline\" class=\"textarea-query\">\n                  <textarea matInput [(ngModel)]=\"sfquery.query\" cdkTextareaAutosize cdkAutosizeMinRows=\"10\"\n                    cdkAutosizeMaxRows=\"40\" placeholder=\"Salesforce Query\">\n              </textarea>\n                </mat-form-field>\n              </div>\n\n              <div layout=\"row\">\n                <button mat-raised-button color=\"primary\" class=\"text-upper\" (click)=\"acceptQuery()\">\n                  Check\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n    <td-expansion-panel [expand]=\"false\">\n      <ng-template td-expansion-panel-label> </ng-template>\n      <ng-template td-expansion-panel-sublabel>\n        <span>Source Field Details</span>\n      </ng-template>\n\n      <div class=\"rightsection\"\n      *ngFor=\"let item of job.sourcefields;\n          let i = index\n        \">\n          <div layout=\"row\">\n            <mat-form-field>\n              <input matInput\n              placeholder=\"field\"\n              [value]=\"item.field_name\"\n              [readonly]=\"true\" />\n            </mat-form-field>\n            <mat-form-field>\n              <mat-select matInput\n              placeholder=\"Field Type\"\n              [(ngModel)]=\"item.field_type\"\n              [ngModelOptions]=\"{ standalone: true }\"\n              >\n                <mat-option *ngFor=\"let type of dimRef.dimfieldtype\" [value]=\"type.field_type\">\n                  {{ type.field_type }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n      </div>\n    </td-expansion-panel>\n\n    <br />\n\n    <div layout=\"row\">\n      <span class=\"fill-remaining-space\"></span>\n      <button  mat-raised-button color=\"accent\" (click)=\"submit()\">\n        Next\n      </button>\n\n    </div>\n  </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { JobsService } from '../../services/jobs.service';\nimport { DimensionDataService } from '../../data/dimensiondata.service';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\nimport { IDimRef } from '../../models/dimensions';\n\nimport { IJob, initJobRecord } from '../../models/jobs';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-jobdetails',\n  templateUrl: './jobdetails.component.html',\n  styleUrls: ['./jobdetails.component.css']\n})\nexport class JobdetailsComponent implements OnInit {\n\n  job_id: number;\n  // seletedJobRecord details\n  selectedJobRecord: IJob = initJobRecord;\n\n  files: any;\n  cloneJobFlag = false;\n  jobForm: FormGroup;\n  updateFlag: boolean = true;\n  oneoffFlag: boolean = false;\n\n  currDate = new Date();\n  jobRunDate = new FormControl(new Date(), Validators.required);\n\n  delimiter: string = '|';\n  newline: string = 'LF';\n  dimRef: IDimRef;\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private jobsService: JobsService,\n    private dimensionDataService: DimensionDataService,\n    private sidSnackbarComponent: SidSnackbarComponent,\n    private route: ActivatedRoute,\n    private router: Router\n\n    ) {\n      this.job_id = this.route.snapshot.params['id'];\n      this.getDimensions();\n      this.selectedJob();\n  }\n\n  ngOnInit(): void { }\n\n  getDimensions() {\n    this._loadingService.register('loadingsidjob');\n    this.dimensionDataService.dimensionRecord.subscribe((result) => {\n      this._loadingService.resolve('loadingsidjob');\n      if (result.records) {\n        this.dimRef = result.records;\n      }\n    });\n  }\n\n  selectedJob() {\n    this._loadingService.register('loadingsidjob');\n\n      this.jobsService.getJobbyId(String(this.job_id)).subscribe(\n        (result) => {\n          this.selectedJobRecord = result.records.jobs[0];\n          this._loadingService.resolve('loadingsidjob');\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsidjob');\n          this.sidSnackbarComponent.systemError();\n\n        }\n      );\n  }\n\n\n  /*\n    job run date\n  */\n  runJobByDate() {\n\n    const runDate = moment(this.jobRunDate.value);\n    this._loadingService.register('loadingsidjob');\n\n    this.jobsService.runJobById(\n        String(this.job_id),\n        String(runDate.valueOf())\n      )\n      .subscribe(\n        (result) => {\n          this._loadingService.resolve('loadingsidjob');\n          this.sidSnackbarComponent.showMessage(result.message);\n\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsidjob');\n          this.sidSnackbarComponent.systemError();\n\n        }\n      );\n  }\n\n\n  cloneJob() {\n    this.router.navigate(['/editjob', this.job_id, 'c'])\n\n  }\n  editJob() {\n    this.router.navigate(['/editjob', this.job_id, 'e'])\n\n  }\n  deleteJob() {\n\n  }\n  jobWithLocalFile(){\n\n    this._loadingService.register('loadingsidjob');\n    this.jobsService.runJobbyFile(\n      String(this.job_id),\n      this.files,\n      this.delimiter,\n      this.newline\n      ).subscribe(\n      (result) => {\n          this.sidSnackbarComponent.showMessage(result.message);\n         this._loadingService.resolve('loadingsidjob');\n      },\n      (err) => {\n        console.log(err);\n        this._loadingService.resolve('loadingsidjob');\n        this.sidSnackbarComponent.systemError();\n\n      }\n    );\n\n  }\n\n\n}\n\n","<div class=\"sidcontainer\">\n    <div\n      *tdLoading=\"\n        'loadingsidjob';\n        mode: 'indeterminate';\n        type: 'linear';\n        strategy: 'overlay';\n        color: 'primary'\n      \"\n    >\n      <div *ngIf=\"selectedJobRecord\">\n        <div layout=\"row\">\n            <mat-card class=\"card-colored\" flex>\n                <mat-card-header>\n                    <button mat-button color=\"primary\" style=\"color: white;\" disabled>\n                        {{ selectedJobRecord.job_name }}\n                      </button>\n                      <span class=\"fill-remaining-space\"></span>\n                      <button mat-mini-fab color=\"accent\"\n                      title=\"Edit Job\"\n                      class=\"white-icon\"\n                      (click)=\"editJob()\"\n                      >\n                        <mat-icon>mode</mat-icon>\n                      </button>\n\n                      <button mat-mini-fab color=\"accent\"\n                      title=\"Clone Job\"\n                      class=\"white-icon\"\n                      (click)=\"cloneJob()\">\n                        <mat-icon>content_copy</mat-icon>\n                      </button>\n                      <button mat-mini-fab color=\"warn\"\n                      title=\"Delete Job\"\n                      class=\"white-icon\"\n                      (click)=\"deleteJob()\"\n                      disabled>\n                        <mat-icon>delete_forever</mat-icon>\n                      </button>\n\n                </mat-card-header>\n            </mat-card>\n\n        </div>\n        <br>\n        <div>\n          <div layout=\"row\">\n            <div layout=\"column\">\n              <mat-list>\n                <mat-list-item>\n                  <img\n                    matListAvatar\n                    [src]=\"selectedJobRecord.source_config.conn_logo_path\"\n                  />\n                  <div mat-line>{{ selectedJobRecord.source_config.conn_name }}</div>\n                  <div mat-line>\n                    System Type:\n                    {{ selectedJobRecord.source_config.conn_system_type }}\n                  </div>\n                </mat-list-item>\n              </mat-list>\n            </div>\n            <div layout=\"column\">\n              <img src=\"/static/img/logo/arrow_right.png\" class=\"arrow\" />\n            </div>\n\n            <div layout=\"column\">\n              <mat-list>\n                <mat-list-item>\n                  <img\n                    matListAvatar\n                    [src]=\"selectedJobRecord.dest_config.conn_logo_path\"\n                  />\n                  <div mat-line>{{ selectedJobRecord.dest_config.conn_name }}</div>\n                  <div mat-line>\n                    System Type:\n                    {{ selectedJobRecord.dest_config.conn_system_type }}\n                  </div>\n                </mat-list-item>\n              </mat-list>\n\n            </div>\n          </div>\n\n\n          </div>\n        <br>\n        <div>\n            <mat-card>\n                <mat-card-header>\n                  <mat-card-subtitle>\n                    Job Re-run:\n                    <span class=\"fill-remaining-space\"></span>\n\n                    <mat-slide-toggle\n                      class=\"oneoffrun\"\n                      color=\"primary\"\n                      [(ngModel)]=\"oneoffFlag\"\n                      [checked]=\"oneoffFlag\"\n                      >One off Job Run (from local file)\n                    </mat-slide-toggle>\n                  </mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                  <mat-divider></mat-divider>\n\n                  <div *ngIf=\"oneoffFlag\">\n                  <mat-card>\n                    <mat-card-content>\n                        <!-- <sourceselector (job)=\"sourceDetails($event)\">\n                        </sourceselector> -->\n                        <td-message #message color=\"primary\" label=\"Mandatory data\"\n                        sublabel=\"Only plain text files are supported\">\n                        <button td-message-actions mat-icon-button (click)=\"message.close()\">\n                          <mat-icon>cancel</mat-icon>\n                        </button>\n                      </td-message>\n                      <br><br>\n                      <div layout=\"row\">\n\n                        <mat-form-field>\n                          <mat-select placeholder=\"delimiter\" [(value)]=\"delimiter\">\n                            <mat-option *ngFor=\"let type of dimRef.dimdelimitertype\" [value]=\"type.delimiter_type\">\n                              {{ type.delimiter_type }}\n                            </mat-option>\n                          </mat-select>\n\n                        </mat-form-field>\n                        <mat-form-field>\n                          <mat-select placeholder=\"line terminator\" [(value)]=\"newline\">\n                            <mat-option *ngFor=\"let type of dimRef.dimnewlinetype\" [value]=\"type.line_type\">\n                              {{ type.line_type }}\n                            </mat-option>\n                          </mat-select>\n\n                        </mat-form-field>\n\n                      </div>\n                      <br>\n\n                      <td-file-input class=\"push-left-sm push-right-sm\" #fileInput\n                        [(ngModel)]=\"files\" [disabled]=\"false\"\n                        [ngModelOptions]=\"{standalone: true}\">\n                        <mat-icon color=\"primary\">folder</mat-icon>\n                        <span class=\"text-upper\">Browse...</span>\n                      </td-file-input>\n                      <br>\n\n                      <mat-form-field tdFileDrop [disabled]=\"false\"\n                        (fileDrop)=\"files = $event\"\n                        (click)=\"fileInput.inputElement.click()\" (keyup.enter)=\"fileInput.inputElement.click()\"\n                        (keyup.delete)=\"fileInput.clear()\" (keyup.backspace)=\"fileInput.clear()\" flex>\n                        <input matInput placeholder=\"select or drop files\"\n                          [value]=\"files?.length ? (files?.length + ' files') : files?.name\" [disabled]=\"false\" readonly />\n                      </mat-form-field>\n                      &nbsp;&nbsp;&nbsp;&nbsp;\n                      <button mat-icon-button *ngIf=\"files\" (click)=\"fileInput.clear()\" (keyup.enter)=\"fileInput.clear()\">\n                        <mat-icon>cancel</mat-icon>\n                      </button>\n                      <span>\n                        <button mat-raised-button color=\"primary\" [disabled]=\"!files\" class=\"text-upper\"\n                          (click)=\"jobWithLocalFile()\">Run</button>\n                      </span>\n\n\n                      </mat-card-content>\n                  </mat-card>\n                </div>\n\n                  <br>\n                  <div *ngIf=\"!oneoffFlag\">\n                    <mat-form-field color=\"primary\" class=\"date-field\">\n                      <input\n                        matInput\n                        [max]=\"currDate\"\n                        [formControl]=\"jobRunDate\"\n                        [matDatepicker]=\"picker\"\n                        placeholder=\"Job Run Date\"\n                      />\n                      <mat-datepicker-toggle\n                        matSuffix\n                        [for]=\"picker\"\n                      ></mat-datepicker-toggle>\n                      <mat-datepicker #picker disabled=\"false\" color=\"primary\">\n                      </mat-datepicker>\n                    </mat-form-field>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <button mat-mini-fab color=\"primary\"\n                    title=\"Run Job\"\n                    class=\"white-icon\"\n                    (click)=\"runJobByDate()\">\n                      <mat-icon>schedule_send</mat-icon>\n                    </button>\n\n\n                  </div>\n                </mat-card-content>\n              </mat-card>\n\n        </div>\n\n\n\n\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IJob } from '../models/jobs';\n\n@Component({\n  selector: 'app-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: ['./jobs.component.css'],\n})\nexport class JobsComponent implements OnInit {\n\n  // seletedJobRecord details\n  selectedJobRecord: IJob;\n\n  newJobFlag = false;\n  // joblist flags\n  shownew = false;\n  gridshow = true;\n  dataloadedflag = false;\n\n  constructor(\n    private router: Router\n    ) {\n\n  }\n\n  ngOnInit(): void { }\n\n\n  selectedJob(event: IJob) {\n    if(event.job_id < 1) {\n      this.router.navigate(['/editjob', 0, 'n']);\n\n    }\n    else{\n      this.router.navigate(['/jobdetails', event.job_id]);\n\n    }\n\n  }\n\n\n}\n","<div class=\"sidcontainer\">\n      <jobslist [gridcomp]=\"gridshow\" (job)=\"selectedJob($event)\"> </jobslist>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Router } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { JobsService } from '../../services/jobs.service';\nimport { IJobsRecords, IJob, initJobRecord } from '../../models/jobs';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'jobslist',\n  templateUrl: './jobslist.component.html',\n  styleUrls: ['./jobslist.component.css']\n})\nexport class JobslistComponent implements OnInit {\n\n  jobRecords: IJobsRecords;\n  selectedJobRecord: IJob = initJobRecord;\n\n  dataRecords: Array<IJob>;\n\n  @Input()\n  shownew: boolean = true;\n\n  @Input()\n  gridcomp: boolean = true;\n\n  @Output()\n  job: EventEmitter<IJob> = new EventEmitter<IJob>();\n\n  dataloaded = false;\n  errorMessage: string;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _loadingService: TdLoadingService,\n    private router: Router,\n    private jobsService: JobsService,\n    private sidSnackbarComponent: SidSnackbarComponent\n\n  ) {\n\n    this.getJobs();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  getJobs() {\n    this._loadingService.register('loadingsid');\n\n    this.jobsService.getJobs().subscribe(\n      result => {\n        this._loadingService.resolve('loadingsid')\n        this.jobRecords = result;\n        this.dataRecords = result.records.jobs;\n        this.dataloaded = true;\n        this._changeDetectorRef.detectChanges();\n\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsid');\n        this.sidSnackbarComponent.systemError();\n\n      })\n  }\n\n\n  newJob() {\n    this.job.emit(this.selectedJobRecord);\n  }\n\n  editJob(job: IJob) {\n    this.selectedJobRecord = job;\n    this.job.emit(this.selectedJobRecord);\n  }\n\n  filterJobs(displayName: string = '') {\n\n    this.dataRecords = this.jobRecords.records.jobs.filter(\n      (obj) => {\n        return obj.job_name.toLowerCase().indexOf(displayName.toLocaleLowerCase()) > -1;\n      });\n\n\n  }\n\n\n}\n","\n    <div *tdLoading=\"'loadingsid'; mode:'indeterminate';\n    type:'linear'; strategy:'overlay'; color:'primary'\">\n\n        <div *ngIf=\"dataloaded\">\n          <div *ngIf=\"gridcomp\">\n\n            <mat-grid-list cols=\"3\" rowHeight=\"3:1\" gutterSize=\"20px\">\n              <mat-grid-tile *ngIf=\"shownew\">\n                <mat-list>\n                  <mat-list-item style=\"cursor: pointer\" (click)=\"newJob()\">\n                    <mat-icon color=\"primary\" matListIcon>add</mat-icon>\n                    <div mat-line>New Job</div>\n                  </mat-list-item>\n                </mat-list>\n\n\n              </mat-grid-tile>\n              <mat-grid-tile *ngFor=\"let job of dataRecords\" style=\"cursor: pointer\">\n                <div layout=\"column\" style=\"cursor: pointer\" (click)=\"editJob(job)\">\n                  <div layout=\"row\" class=\"text-color\">\n                    <b>\n                      {{job.job_name}}\n                    </b>\n                  </div>\n                  <div layout=\"row\">\n                    <div layout=\"column\">\n                      <img [src]=\"job.source_config.conn_logo_path\" class=\"avatar\" />\n                    </div>\n                    <div layout=\"column\">\n                      <img src=\"/static/img/logo/arrow_right.png\" class=\"arrow\" />\n                    </div>\n                    <div layout=\"column\">\n                      <img [src]=\"job.dest_config.conn_logo_path\" class=\"avatar\"/>\n                    </div>\n\n                  </div>\n                  <div layout=\"row\" style=\"font-style: oblique; font-size: 12px\">\n                    creation date: {{job.create_date}}\n                  </div>\n                </div>\n\n\n\n              </mat-grid-tile>\n            </mat-grid-list>\n          </div>\n          <div *ngIf=\"!gridcomp\">\n\n              <mat-list [style.width.px]=\"600\">\n                <mat-list-item>\n                  <td-search-box backIcon=\"arrow_back\"\n                  placeholder=\"Filter Jobs\"\n                  [showUnderline]=\"false\"\n                  [alwaysVisible]=\"true\"\n                  (searchDebounce)=\"filterJobs($event)\"\n                  flex>\n                  </td-search-box>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <td-virtual-scroll-container #virtualScroll\n                [style.height.px]=\"400\"\n                [data]=\"dataRecords\">\n                  <ng-template let-row=\"row\" let-last=\"last\" tdVirtualScrollRow>\n                    <mat-list-item style=\"cursor: pointer\" (click)=\"editJob(row)\">\n                      <mat-icon color=\"primary\" matListIcon>cloud_done</mat-icon>\n                      <div mat-line>{{row.job_name}}</div>\n                      <div mat-line>Type: {{row.run_type}}</div>\n                      <div mat-line>Creation Date: {{row.create_date}}</div>\n\n                    </mat-list-item>\n                    <mat-divider *ngIf=\"!last\" [inset]=\"true\"></mat-divider>\n                  </ng-template>\n                </td-virtual-scroll-container>\n              </mat-list>\n\n\n\n          </div>\n        </div>\n\n      </div>\n","import { Component, Inject, HostBinding, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { TdMediaService } from '@covalent/core/media';\r\n\r\nimport { MatDialog }  from '@angular/material/dialog';\r\nimport { MatDialogConfig }  from '@angular/material/dialog';\r\nimport { MatDialogRef }  from '@angular/material/dialog';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { TdLoadingService } from '@covalent/core/loading';\r\nimport { IUserProfile } from '../models/userprofile';\r\nimport { UserAuthService } from '../services/auth.service';\r\nimport { UserProfileDataService } from '../services/userprofiledata.service';\r\nimport { tap, map } from 'rxjs/operators';\r\n\r\nimport { IDimRecords } from '../models/dimensions'\r\nimport { DimensionsService } from '../services/dimensions.service';\r\nimport { DimensionDataService } from '../data/dimensiondata.service';\r\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\r\n\r\nconst defaultDialogConfig = new MatDialogConfig();\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'layout',\r\n    styleUrls: ['./layout.component.scss'],\r\n    templateUrl: './layout.component.html',\r\n})\r\nexport class LayoutComponent implements AfterViewInit {\r\n\r\n\r\n    userProfileStatus = false;\r\n    userProfileRecord: IUserProfile;\r\n    userLoggedStatus = false;\r\n    connFlag = false;\r\n    dimensionRecords: IDimRecords;\r\n\r\n    constructor(private _changeDetectorRef: ChangeDetectorRef,\r\n        public media: TdMediaService,\r\n        public dialog: MatDialog,\r\n        private router: Router,\r\n        private _loadingService: TdLoadingService,\r\n        private userAuthService: UserAuthService,\r\n        private userProfileDataService: UserProfileDataService,\r\n        private dimensionsService: DimensionsService,\r\n        private dimensionDataService: DimensionDataService,\r\n        private sidSnackbarComponent: SidSnackbarComponent\r\n\r\n    ) {\r\n        this.getDimensions()\r\n\r\n        if(this.userAuthService.isLoggedIn()){\r\n\r\n            this.userLoggedStatus = true;\r\n            this.userProfileRecord = this.userAuthService.profile;\r\n\r\n        }\r\n        else{\r\n            this.userAuthService.refreshToken();\r\n        }\r\n        this.userProfileDataService.profileRecord.subscribe(\r\n            response => {\r\n                this.userProfileRecord = response;\r\n                this.userLoggedStatus = response.isLoggedIn;\r\n            }\r\n        )\r\n\r\n        // fetch the dimension records\r\n        // fetch the jobs\r\n\r\n        }\r\n\r\n        ngAfterViewInit(): void {\r\n            // broadcast to all listener observables when loading the page\r\n            setTimeout(() => { // workaround since MatSidenav has issues redrawing at the beggining\r\n            this.media.broadcast();\r\n            this._changeDetectorRef.detectChanges();\r\n        });\r\n\r\n    }\r\n\r\n    getDimensions(){\r\n        this._loadingService.register('loadinglayoutsid');\r\n\r\n        this.dimensionsService.getdimConnections().subscribe(\r\n          result => {\r\n            this.dimensionRecords = result;\r\n            this.dimensionDataService.dimensionRecord.next(\r\n                this.dimensionRecords\r\n            )\r\n\r\n            this._loadingService.resolve('loadinglayoutsid')\r\n          },\r\n          err => {\r\n            console.log(err);\r\n            this._loadingService.resolve('loadinglayoutsid');\r\n            this.sidSnackbarComponent.systemError();\r\n\r\n          })\r\n\r\n    }\r\n\r\n    getJobs() {\r\n\r\n    }\r\n\r\n\r\n}\r\n","\r\n  <td-layout [mode]=\"'side'\" [opened]=\"true\" [sidenavWidth]=\"'257px'\">\r\n    <div *tdLoading=\"'loadinglayoutsid'; mode:'indeterminate';\r\n    type:'linear'; strategy:'overlay'; color:'primary'\">\r\n  </div>\r\n\r\n  <div td-sidenav-content>\r\n    <div *ngIf=\"userLoggedStatus\">\r\n\r\n    <td-navigation-drawer class=\"font-colour\"\r\n    flex\r\n    color=\"primary\"\r\n    avatar=\"{{userProfileRecord.photo}}\"\r\n    name=\"{{userProfileRecord.first_name}} {{userProfileRecord.last_name}}\"\r\n    email=\"{{userProfileRecord.email_id}}\"\r\n  >\r\n    </td-navigation-drawer>\r\n   </div>\r\n\r\n    <mat-nav-list>\r\n\r\n      <!-- <mat-list-item>\r\n        <span>\r\n          <img matListAvatar [src]=\"userProfileRecord.photo\">\r\n        </span>\r\n      </mat-list-item> -->\r\n\r\n      <div *ngIf=\"!userLoggedStatus\">\r\n\r\n        <p matLine>\r\n          &nbsp;&nbsp;&nbsp;Please login\r\n        </p>\r\n      </div>\r\n      <!-- <div *ngIf=\"userLoggedStatus\">\r\n\r\n        <p matLine>\r\n          &nbsp;&nbsp;G'day&nbsp;&nbsp;{{this.userProfileRecord.first_name}}\r\n        </p>\r\n      </div> -->\r\n\r\n\r\n    </mat-nav-list>\r\n    <div *ngIf=\"userLoggedStatus\">\r\n\r\n        <mat-nav-list>\r\n          <a mat-list-item class=\"active\" [routerLink]=\"[ '/connections']\" [routerLinkActive]=\"['is-active']\">\r\n            <mat-icon matListIcon color=\"primary\">share</mat-icon>connectors\r\n          </a>\r\n        </mat-nav-list>\r\n\r\n      <mat-nav-list>\r\n        <a mat-list-item class=\"active\" [routerLink]=\"[ '/jobs']\" [routerLinkActive]=\"['is-active']\">\r\n          <mat-icon matListIcon color=\"primary\">cloud_done</mat-icon>Jobs\r\n        </a>\r\n      </mat-nav-list>\r\n\r\n      <mat-nav-list>\r\n        <a mat-list-item class=\"active\" [routerLink]=\"[ '/joblogs']\" [routerLinkActive]=\"['is-active']\">\r\n          <mat-icon matListIcon color=\"primary\">text_snippet</mat-icon>Logs\r\n        </a>\r\n      </mat-nav-list>\r\n\r\n      <mat-nav-list>\r\n        <a mat-list-item class=\"active\" [routerLink]=\"[ '/schedule']\" [routerLinkActive]=\"['is-active']\">\r\n          <mat-icon matListIcon color=\"primary\">share</mat-icon>Schedule\r\n        </a>\r\n      </mat-nav-list>\r\n\r\n      <mat-nav-list>\r\n        <a mat-list-item class=\"active\" [routerLink]=\"[ '/explorer']\" [routerLinkActive]=\"['is-active']\">\r\n          <mat-icon matListIcon color=\"primary\">snippet_folder</mat-icon>Explorer\r\n        </a>\r\n      </mat-nav-list>\r\n\r\n      <mat-nav-list>\r\n        <a mat-list-item class=\"active\" [routerLink]=\"[ '/query']\" [routerLinkActive]=\"['is-active']\">\r\n          <mat-icon matListIcon color=\"primary\">query_stats</mat-icon>Query\r\n        </a>\r\n      </mat-nav-list>\r\n\r\n      <mat-nav-list>\r\n        <a mat-list-item class=\"active\" [routerLink]=\"[ '/settings']\" [routerLinkActive]=\"['is-active']\">\r\n          <mat-icon matListIcon color=\"primary\">settings</mat-icon>Settings\r\n        </a>\r\n      </mat-nav-list>\r\n\r\n      <mat-nav-list>\r\n        <a mat-list-item class=\"active\" [routerLink]=\"[ '/logout']\">\r\n          <mat-icon matListIcon color=\"primary\">exit_to_app</mat-icon>Logout\r\n        </a>\r\n      </mat-nav-list>\r\n\r\n    </div>\r\n    <div *ngIf=\"!userLoggedStatus\">\r\n\r\n      <mat-nav-list>\r\n        <a mat-list-item class=\"active\" [routerLink]=\"[ '/login']\">\r\n          <mat-icon matListIcon color=\"primary\">login</mat-icon>Login\r\n        </a>\r\n      </mat-nav-list>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n  <mat-sidenav-container fullscreen>\r\n\r\n    <ng-snotify></ng-snotify>\r\n    <div tdMediaToggle=\"gt-xs\" [mediaClasses]=\"[ 'push-md']\" class=\"layout-container\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n\r\n  </mat-sidenav-container>\r\n\r\n\r\n</td-layout>\r\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms'; // new add\nimport { FormControl } from '@angular/forms';\n\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { IUserInput } from '../models/userprofile';\nimport { UserAuthService } from '../services/auth.service';\nimport { map } from 'rxjs/operators';\n//import { runInThisContext } from 'vm';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n    selector: 'app-login',\n    styleUrls: ['./login.component.scss'],\n    templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n    authSuccess = false;\n    errorMessage = false;\n    username = '';\n    message = 'Please login';\n    userRecord: IUserInput = { username: '', password: '' };\n\n    constructor(private userAuthService: UserAuthService,\n        private _loadingService: TdLoadingService,\n        private router: Router,\n        private sidSnackbarComponent: SidSnackbarComponent\n\n    ) {\n        //this.fetchUserProfile();\n    }\n\n    ngOnInit() {\n\n    }\n    onSubmit() {\n        // console.log(this.userRecord);\n\n       this._loadingService.register('loadingauth');\n\n        this.userAuthService.login(this.userRecord).subscribe(\n            result => {\n               // console.log(result);\n\n                this._loadingService.resolve('loadingauth')\n\n                if(this.userAuthService.isLoggedIn){\n                    this.authSuccess=true;\n                    this.router.navigate(['dashboard']);\n                }\n                else {\n                    this.sidSnackbarComponent.showMessage('Invalid Username / Password');\n                }\n\n            },\n            err => {\n                this._loadingService.resolve('loadingauth');\n                this.sidSnackbarComponent.showMessage('Invalid Username / Password');\n            })\n\n    }\n\n}\n","<div *tdLoading=\"'loadingauth'; mode:'indeterminate';\n        type:'linear'; strategy:'overlay'; color:'primary'\">\n\n    <div *ngIf=\"!authSuccess\" >\n\n        <mat-card class=\"sid-card basic-container\">\n            <form>\n\n            <mat-card-title color=\"primary\" layout=\"row\" layout-align=\"start center\"><span class=\"md-title\">Login</span>\n            </mat-card-title>\n            <mat-card-subtitle>Sign In with Your Credentials</mat-card-subtitle>\n            <!-- <mat-divider></mat-divider> -->\n            <mat-card-content class=\"push-bottom-none\">\n\n                <div layout=\"row\" cellspacing=\"1\">\n                    <mat-form-field flex>\n                        <mat-icon matPrefix color=\"primary\">account_circle\n                        </mat-icon>\n                        <input matInput\n                            placeholder=\"User id\"\n                            [(ngModel)]=\"userRecord.username\"\n                            name = \"username\"\n                            required\n                            />\n                    </mat-form-field>\n\n                </div>\n                <div layout=\"row\">\n                    <mat-form-field flex>\n                        <mat-icon matPrefix color=\"primary\">vpn_key\n                        </mat-icon>\n                        <input matInput required\n                            type=\"password\"\n                            [(ngModel)]=\"userRecord.password\" id=\"password\"\n                            name=\"password\"\n                            minlength=\"5\"\n                            />\n                    </mat-form-field>\n                </div>\n\n                </mat-card-content>\n                <mat-divider></mat-divider>\n                <mat-card-actions>\n                    <div layout=\"row\" class=\"pad-sm\">\n                        <button mat-raised-button flex color=\"primary\"\n                         class=\"text-upper\"\n                        (click)=\"onSubmit()\">Login\n                        </button>\n                    </div>\n                </mat-card-actions>\n            </form>\n\n        </mat-card>\n\n    </div>\n    <ng-template *ngIf=\"authSuccess\">\n        <label>You are logged in</label>\n    </ng-template>\n\n\n</div>\n","import { Component} from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Router, ActivatedRoute  } from '@angular/router';\n\nimport { UserAuthService } from '../services/auth.service';\nimport { IUserProfile } from '../models/userprofile';\n\n@Component({\n  selector: 'logout',\n  styleUrls: ['./logout.component.scss'],\n  templateUrl: './logout.component.html',\n})\nexport class LogoutComponent {\n\n\tuserProfileRecord: IUserProfile;\n\tdata = ''; // for future use\n\tmessage = 'You are logged off';\n\n\tconstructor(private userAuthService: UserAuthService,\n\t\t\t\t) {\n\t\t\t\tuserAuthService.logout();\n\t}\n}\n","<div>\n    {{message}}\n \n</div>\n","export interface IJobModels {\n    name: string;\n    label: string;\n}\n\nexport interface IJobFields {\n    model_name: string;\n    field_name: string;\n    field_type: string;\n    field_length: string;\n    field_format: string;\n    label: string;\n    primary_key: string;\n}\n\nexport interface IJobmap {\n    source_model: string;\n    source_field: string;\n    map_type: string;\n    map_value: string;\n    lookup_model: string;\n    lookup_join_field: string;\n    lookup_return_field: string;\n    dest_model: string;\n    dest_field: string;\n    index: number;\n}\n\nexport interface IJobquery{\n    query: string,\n    metadata: any\n}\nexport interface IJobconfig {\n    job_id: number;\n    rec_type: string;\n    conn_id: number;\n    conn_type: string;\n    conn_name: string;\n    conn_system_type: string;\n    conn_logo_path: string;\n    filepath: string;\n    filestartwith: string;\n    fileendwith: string;\n    filemask: string;\n    delimiter: string;\n    encoding: string;\n    lineterminator: string;\n    archivepath: string;\n    key_field: string;\n    bulk_count: number;\n    query: IJobquery;\n    transaction_type: string;\n    model: string;\n}\n\nexport interface IJob {\n    job_id: number;\n    job_name: string;\n    run_type: string;\n    parallel_count: number;\n    create_date: string;\n    modified_date: string;\n    tolist: string;\n    source_config: IJobconfig;\n    dest_config: IJobconfig;\n    map: Array<IJobmap>;\n    sourcefields: Array<IJobFields>;\n    destfields: Array<IJobFields>;\n    models: Array<IJobModels>;\n\n}\nexport interface IJobs {\n    jobs: Array<IJob>;\n}\n\n\nexport interface IJobsRecords {\n    status: string;\n    message: Array<string>;\n    num_of_records: number;\n    records: IJobs;\n}\n\n\n\nexport interface IJobModelRecord {\n    models: Array<IJobModels>;\n    fields: Array<IJobFields>;\n}\n\nexport interface IJobModelRecords {\n    status: string;\n    message: Array<string>;\n    num_of_records: number;\n    records: IJobModelRecord;\n}\n\nexport var  initJobRecord: IJob = {\n    job_id: -1, job_name: 'New', run_type: 'R',\n    parallel_count: 1, create_date: null, modified_date: null,\n    tolist: '',\n    source_config: {\n      job_id: -1,\n      rec_type: 'S',\n      conn_id: -1,\n      conn_type: '',\n      conn_name: '',\n      conn_system_type: '',\n      conn_logo_path: '/static/img/logo/dbgeneral.jpg',\n      filepath: '',\n      filestartwith: '',\n      fileendwith: '',\n      filemask: '',\n      delimiter: '|',\n      encoding: '',\n      lineterminator: 'LF',\n      archivepath: '',\n      key_field: '',\n      bulk_count: 1,\n      transaction_type: '',\n      model: '',\n      query: {\n        query: '', metadata: ''\n      }\n    }, dest_config: {\n      job_id: -1,\n      rec_type: 'D',\n      conn_id: -1,\n      conn_type: '',\n      conn_name: '',\n      conn_system_type: '',\n      conn_logo_path: '/static/img/logo/dbgeneral.jpg',\n      filepath: '',\n      filestartwith: '',\n      fileendwith: '',\n      filemask: '',\n      delimiter: '|',\n      encoding: '',\n      lineterminator: 'LF',\n      archivepath: '',\n      key_field: '',\n      bulk_count: 1,\n      transaction_type: '',\n      model: '',\n      query: {\n        query: '', metadata: ''\n      }\n\n    }, map: [],\n    sourcefields: [], destfields: [],\n    models: []\n  };\n","import { IJob } from './jobs';\nexport interface ISchedule {\n    id: number;\n    schedule_type: string;\n    schedule_name: string;\n    frequency: string;\n    day_of_week: string;\n    day_of_month: string;\n    hours:string;\n    minutes: string;\n    create_date: string;\n    modified_date: string;\n\n}\nexport interface IScheduleConfig {\n    id: number;\n    job_sequence: number;\n    job_id: number;\n    job_name: string;\n    run_type: string;\n}\n\nexport interface IScheduleDistribution {\n    id: number;\n    email_flag: string;\n    tolist: string;\n    cclist: string;\n    bcclist: string;\n}\n\n\nexport interface ISchedules {\n    schedules: Array<ISchedule>;\n    scheduleconfig: Array<IScheduleConfig>;\n}\n\nexport interface IScheduleRecords {\n    status: string;\n    message: string;\n    num_of_records: number;\n    records: ISchedules;\n}\n\nexport interface IScheduleSelect {\n    schedules: ISchedule;\n    scheduleconfig: Array<IScheduleConfig>;\n    distribution: IScheduleDistribution;\n}\n\nexport interface IScheduleRecordById {\n    status: string;\n    message: string;\n    num_of_records: number;\n    records: IScheduleSelect;\n}\n\n\nexport interface IScheduleJobrun {\n    job_id:        number;\n    run_date:      string;\n    message:       string;\n    status:        string;\n    success_count: number | null;\n    failure_count: number | null;\n    warning_count: number | null;\n    total_count:   number | null;\n    jobrun_id:     number;\n    job_name:      string;\n    start_date:    string;\n    end_date:      string;\n}\n\nexport interface ISchedulelog {\n    schedule_id:    number;\n    run_date:       string;\n    message:        string;\n    status:         string;\n    schedulelog_id: number;\n    start_date:     string;\n    end_date:       string;\n    jobrun:         Array<IScheduleJobrun>;\n}\n\n\n// export interface IScheduleLogRecord {\n//     schedulelogs: ISchedulelog;\n// }\n\nexport interface IScheduleLogRecords {\n    status:         string;\n    message:        Array<string>;\n    num_of_records: number;\n    records:        Array<ISchedulelog>;\n}\n\n\nexport var  initScheduleRecord: IScheduleSelect = {\n    schedules: {\n            id: -1,\n            schedule_type: 'R',\n            schedule_name: '',\n            frequency: 'Daily',\n            create_date: '',\n            modified_date: '',\n            day_of_week: '',\n            day_of_month: '',\n            hours: '',\n            minutes: ''\n    },\n    scheduleconfig: [],\n    distribution: {\n        id: -1,\n        email_flag: '',\n        tolist: '',\n        cclist: '',\n        bcclist: ''\n    }\n};","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'keys'})\nexport class KeysPipe implements PipeTransform\n{\n    transform(value:any, args:string[]): any {\n        let keys:any[] = [];\n        for (let key in value) {\n            keys.push({key: key, value: value[key]});\n        }\n        return keys;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { IConnectorDetails } from '../models/connection';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\nimport { ISFParsedQuery } from '../models/salesforce';\n\n@Component({\n  selector: 'app-query',\n  templateUrl: './query.component.html',\n  styleUrls: ['./query.component.css']\n})\nexport class QueryComponent implements OnInit {\n\n  rowSelected = false;\n  selectedConnRecord: IConnectorDetails;\n  shownew: boolean = false;\n  sfjob: ISFParsedQuery = {\n    fields: [],\n    models: [],\n    model_name: '',\n    query: {\n      query: '', metadata: ''\n    },\n    connector: null,\n    filter: '',\n    download: ''\n  }\n\n\n  constructor(\n    private sidSnackbarComponent: SidSnackbarComponent\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectedConnection(event) {\n\n    this.selectedConnRecord = event;\n    if (this.selectedConnRecord.conn_type != 'Salesforce'){\n      this.sidSnackbarComponent.showMessage('Connector not Supported for query');\n    }\n    else{\n      this.sfjob.connector = this.selectedConnRecord;\n      this.rowSelected = true;\n    }\n  }\n\n  SfQuery(event) {\n    console.log('Inside...sfQuery');\n    console.log(event);\n  }\n\n  backConn() {\n    this.rowSelected = false;\n  }\n\n\n\n}\n","<div class=\"sidcontainer\">\n    <div *tdLoading=\"\n      'loadingsidquery';\n      mode: 'indeterminate';\n      type: 'linear';\n      strategy: 'overlay';\n      color: 'primary'\n    \">\n\n        <div *ngIf=\"!rowSelected\">\n            <connectionlist [shownew]=\"shownew\" [ filter]=\"'Salesforce'\" (connection)=\"selectedConnection($event)\">\n            </connectionlist>\n        </div>\n\n        <div *ngIf=\"rowSelected\">\n            <button mat-button color=\"primary\" (click)=\"backConn()\">\n                Connectors >\n            </button>\n            <salesforcequery [job]=\"sfjob\" (status)=\"SfQuery($event)\">\n\n            </salesforcequery>\n\n\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnChanges, Output, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { SimpleChanges } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { IConnectorDetails } from '../../models/connection';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\nimport { SalesforceService } from '../../services/salesforce.service';\nimport { JobsService } from '../../services/jobs.service';\n\nimport { parseQuery, composeQuery, isQueryValid, formatQuery } from 'soql-parser-js';\nimport { from } from 'rxjs';\nimport { IJob, IJobFields, IJobModels , IJobquery } from '../../models/jobs';\nimport { ISFParsedQuery } from '../../models/salesforce';\n\n@Component({\n  selector: 'salesforcequery',\n  templateUrl: './salesforcequery.component.html',\n  styleUrls: ['./salesforcequery.component.css']\n})\nexport class SalesforcequeryComponent implements OnChanges {\n  dataloaded: boolean = false;\n\n  @Input()\n  job: ISFParsedQuery;\n\n  @Output()\n  status: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _loadingService: TdLoadingService,\n    private router: Router,\n    private salesforceService: SalesforceService,\n    private jobsService: JobsService,\n    private sidSnackbarComponent: SidSnackbarComponent\n    ) {\n      // this.getDimensions();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    for (const propName in changes) {\n      if (changes.hasOwnProperty(propName)) {\n        switch (propName) {\n          case 'job': {\n            this.job = changes['job'].currentValue;\n          }\n        }\n      }\n    }\n  }\n\n  selectedConnection(connector: IConnectorDetails) {\n    this.dataloaded = false;\n    this.fetchSfModels('');\n    // console.log(this.selectedConnRecord.conn_type)\n  }\n\n\n\n  fetchSfModels(model_name){\n    this._loadingService.register('loadingsidsfquery');\n\n    this.jobsService\n      .fetchConnModels (\n        String(this.job.connector.conn_id),\n        model_name\n      )\n      .subscribe(\n        (result) => {\n\n          // console.log(result);\n          this.job.models = result.records.models;\n          this.job.fields = result.records.fields;\n          this.constructQuery();\n          this.dataloaded = true;\n          this._changeDetectorRef.detectChanges();\n          this._loadingService.resolve('loadingsidsfquery');\n\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsidsfquery');\n          this.sidSnackbarComponent.systemError();\n\n        }\n      );\n\n\n  }\n\n  genQuery(){\n    // console.log(this.sfmodel);\n    // this.queryFlag = true;\n    this.fetchSfModels(this.job.model_name);\n  }\n\n  constructQuery(){\n\n    if(this.job.fields.length > 0){\n\n      this.job.query.query = \"SELECT \";\n      var elemList = []\n      this.job.fields.forEach(element => {\n        elemList.push(element.field_name);\n      });\n      this.job.query.query = this.job.query.query.concat(elemList.join(' ,'));\n      this.job.query.query = this.job.query.query.concat(' from ');\n      this.job.query.query = this.job.query.query.concat(this.job.model_name);\n\n      if(!isQueryValid(this.job.query.query)){\n        this.sidSnackbarComponent.showMessage('Error generating Query');\n        return;\n      }\n      var composeq = composeQuery(parseQuery(this.job.query.query));\n      this.job.query.query = formatQuery(composeq);\n    }\n  }\n\n  pasteEvent(event: ClipboardEvent){\n    this.job.query.query = event.clipboardData.getData('Text')\n  }\n\n  acceptQuery(){\n    if(this.job.query.query.length > 0){\n      if(!isQueryValid(this.job.query.query)){\n        this.sidSnackbarComponent.showMessage('Invalid Query');\n        return;\n      }\n      let sfparsedquery = parseQuery(this.job.query.query);\n      var composeq = composeQuery(sfparsedquery,\n      {\n        format: true,\n        formatOptions: {\n          fieldSubqueryParensOnOwnLine: true,\n          newLineAfterKeywords: true,\n          fieldMaxLineLength: 1 }\n      }\n      );\n\n      this.job.query.query = formatQuery(composeq);\n      this.job.query.metadata = sfparsedquery;\n\n    }\n    this.sidSnackbarComponent.showMessage('Query submitted for parsing, please wait...', true);\n    this._loadingService.register('loadingsourcesid');\n\n    this.salesforceService\n      .validateSFQuery (\n        this.job\n      )\n      .subscribe(\n        (result) => {\n          console.log(result);\n          this._loadingService.resolve('loadingsourcesid');\n          if(result.status != 'ok'){\n            this.sidSnackbarComponent.showMessage(result.message);\n            // this.job.fields = [];\n            // this.job.model_name = '';\n            return;\n          }\n          this.sidSnackbarComponent.showMessage('Query Parsed successful, Please press Next', true);\n          this.job.fields = result.records.fields;\n          this.job.model_name = 'sfquery';\n\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsourcesid');\n          this.sidSnackbarComponent.systemError();\n\n        }\n      );\n\n\n  }\n\n\n  submit(){\n    // if(this.validate()){\n    //   this.ostatus.emit(true);\n    // }\n\n  }\n\n}\n","<div class=\"sidcontainer\">\n    <div\n    *tdLoading=\"\n      'loadingsidsfquery';\n      mode: 'indeterminate';\n      type: 'linear';\n      strategy: 'overlay';\n      color: 'primary'\n    \"\n  >\n\n<div *ngIf=\"dataloaded\">\n    <div layout=\"row\">\n      <mat-form-field>\n        <mat-select matInput placeholder=\"Model\" [(value)]=\"job.model_name\">\n          <mat-option *ngFor=\"let model of job.models\" [value]=\"model.name\">\n            {{ model.label }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <span>\n        <button mat-raised-button color=\"primary\" class=\"text-upper\" (click)=\"genQuery()\">\n          Generate Query\n        </button>\n      </span>\n    </div>\n    <div layout=\"row\">\n      <mat-form-field appearance=\"outline\" class=\"textarea-query\">\n        <textarea matInput [(ngModel)]=\"job.query.query\" cdkTextareaAutosize cdkAutosizeMinRows=\"10\"\n          cdkAutosizeMaxRows=\"40\" placeholder=\"Salesforce Query\">\n    </textarea>\n      </mat-form-field>\n    </div>\n\n    <div layout=\"row\">\n      <button mat-raised-button color=\"primary\" class=\"text-upper\" (click)=\"acceptQuery()\">\n        Check\n      </button>\n    </div>\n  </div>\n\n\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { SimpleChanges } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { SchedulesService } from '../../services/schedules.service';\nimport { IScheduleSelect, initScheduleRecord, IScheduleConfig } from '../../models/schedule';\nimport { JobsService } from '../../services/jobs.service';\n\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\nimport { IJob } from 'src/app/models/jobs';\n\nexport interface IScheduleJob {\n  job_id: number;\n  job_name: string;\n  run_type: string;\n}\nexport interface IdayOfMonth {\n  day: string;\n  value: string;\n}\n\ntype jobScheduleType = Record<number, Array<IScheduleJob>>;\n\n@Component({\n  selector: 'editschedule',\n  templateUrl: './editschedule.component.html',\n  styleUrls: ['./editschedule.component.css'],\n})\nexport class EditscheduleComponent implements OnInit {\n  // schedule: IScheduleSelect;\n  schedule: IScheduleSelect = JSON.parse(JSON.stringify(initScheduleRecord));\n  origSchedule: IScheduleSelect;\n\n  currjobSchedule: jobScheduleType = {};\n  schdataloaded: boolean = false;\n  jobsdataloaded: boolean = false;\n\n  schedule_id: number;\n  ctype: string;\n  cloneSchFlag: boolean = false;\n  newScheduleFlag: boolean = false;\n\n  jobRecords: Array<IJob> = [];\n\n  // filteredObjects: IJob[];\n  dailydays = {\n    monday: false,\n    tuesday: false,\n    wednesday: false,\n    thursday: false,\n    friday: false,\n    saturday: false,\n    sunday: false,\n  };\n  dayofmonth: IdayOfMonth[] = [\n    { day: '1', value: '1st day' },\n    { day: '2', value: '2nd day' },\n    { day: '3', value: '3rd day' },\n    { day: '4', value: '4th day' },\n    { day: '5', value: '5th day' },\n    { day: '6', value: '6th day' },\n    { day: '7', value: '7th day' },\n    { day: '8', value: '8th day' },\n    { day: '9', value: '9th day' },\n    { day: '10', value: '10th day' },\n    { day: '11', value: '11th day' },\n    { day: '12', value: '12th day' },\n    { day: '13', value: '13th day' },\n    { day: '14', value: '14th day' },\n    { day: '15', value: '15th day' },\n    { day: '16', value: '16th day' },\n    { day: '17', value: '17th day' },\n    { day: '18', value: '18th day' },\n    { day: '19', value: '19th day' },\n    { day: '20', value: '20th day' },\n    { day: '21', value: '21st day' },\n    { day: '22', value: '22nd day' },\n    { day: '23', value: '23rd day' },\n    { day: '24', value: '24th day' },\n    { day: '25', value: '25th day' },\n    { day: '26', value: '26th day' },\n    { day: '27', value: '27th day' },\n    { day: '28', value: '28th day' },\n    { day: '29', value: '29th day' },\n    { day: '30', value: '30th day' },\n    { day: '31', value: '31st day' },\n    { day: '0', value: 'Last day of month' },\n  ];\n  // dayofmth: number = 1;\n  dimhour: number[] = [];\n  dimmin: number[] = [];\n  // hour = 0;\n  // min = 0;\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private schedulesService: SchedulesService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private jobsService: JobsService,\n    private sidSnackbarComponent: SidSnackbarComponent,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.schedule_id = this.route.snapshot.params['id'];\n    this.ctype = this.route.snapshot.params['type'];\n\n    if (this.ctype && this.ctype == 'c') {\n      this.cloneSchFlag = true;\n    }\n    var i;\n    for (i = 0; i < 24; i++) {\n      this.dimhour.push(i.toString());\n    }\n    for (i = 0; i < 60; i++) {\n      this.dimmin.push(i.toString());\n    }\n\n    this.setSchedule();\n  }\n\n  ngOnInit(): void { }\n  getJobs() {\n    this._loadingService.register('loadingeditschsid');\n\n    this.jobsService.getJobs().subscribe(\n      result => {\n        this._loadingService.resolve('loadingeditschsid');\n        if (result.status != 'ok') {\n          this.sidSnackbarComponent.showMessage('No jobs founds, please add job first');\n          return;\n        }\n        this.jobRecords = result.records.jobs;\n        this.jobsdataloaded = true;\n        // this.filterObjects('');\n\n        this._changeDetectorRef.detectChanges();\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingeditschsid');\n        this.sidSnackbarComponent.systemError();\n\n      })\n  }\n\n  setSchedule() {\n    this.newScheduleFlag = false;\n    this.getJobs();\n    if (this.schedule_id < 1) {\n      this.newScheduleFlag = true;\n      this.origSchedule = JSON.parse(JSON.stringify(this.schedule));\n      this.schdataloaded = true;\n      this.init();\n    } else {\n      this.getSchedule();\n    }\n  }\n  init() {\n    this.currjobSchedule = {};\n    this.schedule.scheduleconfig.forEach((element) => {\n      let sjob: IScheduleJob = {\n        job_id: element.job_id,\n        job_name: element.job_name,\n        run_type: element.run_type,\n      };\n      if (this.currjobSchedule[element.job_sequence] == null) {\n        this.currjobSchedule[element.job_sequence] = [sjob];\n      } else {\n        let jobs = this.currjobSchedule[element.job_sequence];\n        if (!jobs.some((elm) => elm.job_id === sjob.job_id)) {\n          jobs.push(sjob);\n        }\n        this.currjobSchedule[element.job_sequence] = jobs;\n      }\n    });\n    if (this.schedule.schedules.frequency !== null) {\n      if (this.schedule.schedules.frequency.toLowerCase() === 'monthly') {\n        // this.frequency = 'M';\n      } else {\n        // this.frequency = 'D';\n        if (this.schedule.schedules.day_of_week !== null) {\n          var days = this.schedule.schedules.day_of_week.split(',');\n          days.forEach((day) => {\n            switch (day) {\n              case '0':\n                this.dailydays['sunday'] = true;\n                break;\n              case '1':\n                this.dailydays['monday'] = true;\n                break;\n              case '2':\n                this.dailydays['tuesday'] = true;\n                break;\n              case '3':\n                this.dailydays['wednesday'] = true;\n                break;\n              case '4':\n                this.dailydays['thursday'] = true;\n                break;\n              case '5':\n                this.dailydays['friday'] = true;\n                break;\n              case '6':\n                this.dailydays['saturday'] = true;\n                break;\n            }\n          });\n        }\n      }\n    } else {\n      this.schedule.schedules.frequency = 'Daily';\n    }\n\n  }\n\n  getSchedule() {\n    this._loadingService.register('loadingeditschsid');\n\n    this.schedulesService.getScheduleById(String(this.schedule_id)).subscribe(\n      (result) => {\n        this._loadingService.resolve('loadingeditschsid');\n        if (result.status != 'ok') {\n          this.sidSnackbarComponent.showMessage(result.message);\n          return;\n        }\n        this.schedule = result.records;\n        if (this.cloneSchFlag) {\n          this.schedule.schedules.id = -1;\n          this.schedule.schedules.schedule_name = '';\n          this.schedule_id = -1;\n        }\n        this.origSchedule = JSON.parse(JSON.stringify(this.schedule));\n        this.init();\n        this.schdataloaded = true;\n        this._changeDetectorRef.detectChanges();\n      },\n      (err) => {\n        console.log(err);\n        this._loadingService.resolve('loadingeditschsid');\n        this.sidSnackbarComponent.systemError();\n      }\n    );\n  }\n\n  handleAdd(event, step) {\n    // console.log(this.currjobSchedule);\n  }\n  handleRemove(event, step) {\n    //    delete this.currjobSchedule[step];\n  }\n\n  // filterObjects(value): void {\n  //   console.log('in filteredobject');\n  //   console.log(value);\n  //   this.filteredObjects = this.jobRecords.filter((obj: any) => {\n  //     if (value) {\n  //       return obj.job_name.toLowerCase().indexOf(value.toLowerCase()) > -1;\n  //     } else {\n  //       return false;\n  //     }\n  //   });\n  //   // .filter((filteredObj: any) => {\n  //   //   return this.jobRecords ? this.jobRecords.indexOf(filteredObj) < 0 : true;\n  //   // });\n  // }\n\n  deleteStep(stepNum) {\n    delete this.currjobSchedule[stepNum];\n    let keys = Object.keys(this.currjobSchedule).map((key) => parseInt(key));\n    //this.currjobSchedule\n    let tempJobSchedule: jobScheduleType = {};\n\n    keys.forEach((element) => {\n      if (element > stepNum) {\n        tempJobSchedule[element - 1] = this.currjobSchedule[element];\n      } else {\n        tempJobSchedule[element] = this.currjobSchedule[element];\n      }\n    });\n    this.currjobSchedule = tempJobSchedule;\n  }\n\n  addStep() {\n    let keys = Object.keys(this.currjobSchedule).map((key) => parseInt(key));\n    if (keys !== null && keys.length > 0) {\n      let maxkey = keys[keys.length - 1] + 1;\n      this.currjobSchedule[maxkey] = [];\n    } else {\n      this.currjobSchedule[1] = [];\n    }\n  }\n  buildSchedule() {\n    // add the steps\n    let keys = Object.keys(this.currjobSchedule).map((key) => parseInt(key));\n    this.schedule.scheduleconfig = [];\n    keys.forEach((step) => {\n      this.currjobSchedule[step].forEach(\n        (job) => {\n          let sch: IScheduleConfig = {\n            id: this.schedule_id,\n            job_id: job.job_id,\n            job_sequence: step,\n            job_name: job.job_name,\n            run_type: job.run_type\n          }\n          this.schedule.scheduleconfig.push(sch)\n        }\n      );\n    });\n    // add frequency\n    if (this.schedule.schedules.frequency === 'Daily') {\n      let days = [];\n      let wdays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\n      let i = 0\n      wdays.forEach(\n        day => {\n          if (this.dailydays[day] == true) {\n            days.push(i.toString())\n          }\n          i = i + 1;\n        }\n      )\n      this.schedule.schedules.day_of_week = days.join(',')\n    }\n\n  }\n  validate() {\n\n    // check if schedule details are populated\n    let messages = []\n    if (this.schedule.schedules.schedule_name == '' ||\n      this.schedule.schedules.schedule_name.toLowerCase() == 'new') {\n      messages.push('Invalid Schedule Name');\n    }\n    if (this.schedule.schedules.frequency == '' ||\n      !['Daily', 'Monthly'].includes(this.schedule.schedules.frequency)) {\n      messages.push('Invalid Frequency');\n    }\n    if (this.schedule.schedules.frequency == 'Daily' &&\n    (this.schedule.schedules.day_of_week == null ||\n    this.schedule.schedules.day_of_week.trim() == '')){\n      messages.push('Invalid Daily Frequency');\n    }\n    if (this.schedule.schedules.frequency !== 'Daily' &&\n    (this.schedule.schedules.day_of_month == null ||\n    this.schedule.schedules.day_of_month.trim() == '')){\n      messages.push('Invalid Monthly Frequency');\n    }\n    if (this.schedule.schedules.hours == null ||\n    this.schedule.schedules.hours.trim() == ''){\n      messages.push('Invalid Frequency time');\n    }\n\n      // check if the schedule config (jobs) are populated\n    if(this.schedule.scheduleconfig == null ||\n      this.schedule.scheduleconfig.length == 0){\n        messages.push('Invalid Steps');\n      }\n    else{\n      let keys = Object.keys(this.currjobSchedule).map((key) => parseInt(key));\n      keys.forEach((step) => {\n        if(this.currjobSchedule[step] == null ||\n          this.currjobSchedule[step].length == 0 ){\n          messages.push('Invalid step: '.concat(step.toString()));\n        }\n      });\n\n    }\n    if(messages.length > 0){\n      this.sidSnackbarComponent.showMessage(messages);\n      return false;\n    }\n\n\n    return true;\n  }\n  submit() {\n    this.buildSchedule();\n\n    if (!this.validate()) {\n      console.log('error');\n    }\n    this._loadingService.register('loadingeditschsid');\n    // console.log(this.schedule);\n\n    this.schedulesService.updateSchedule(this.schedule).subscribe(\n      (result) => {\n        if (result.status != 'ok') {\n          this.sidSnackbarComponent.showMessage(result.message);\n          return;\n        }\n        this.schedule = result.records;\n        this.origSchedule = JSON.parse(JSON.stringify(this.schedule));\n\n        this._loadingService.resolve('loadingeditschsid');\n        this.sidSnackbarComponent.parseResult(result);\n      },\n      (err) => {\n        console.log(err);\n        this._loadingService.resolve('loadingeditschsid');\n        this.sidSnackbarComponent.systemError();\n      }\n    );\n\n\n  }\n  resetSchedule() {\n\n    if (this.schedule_id < 1 && this.cloneSchFlag == false) {\n      this.schedule = JSON.parse(JSON.stringify(initScheduleRecord));\n    } else {\n      this.schedule = JSON.parse(JSON.stringify(this.origSchedule));\n    }\n    this.init();\n  }\n  returnSchedule() {\n    if (this.schedule_id > 0) {\n      console.log('go to details');\n      this.router.navigate(['/scheduledetails', this.schedule_id]);\n\n    }\n\n  }\n}\n","<div *tdLoading=\"'loadingeditschsid'; mode:'indeterminate';\ntype:'linear'; strategy:'overlay'; color:'primary'\">\n\n    <div *ngIf=\"schdataloaded && jobsdataloaded\">\n\n        <div layout=\"row\">\n            <mat-card class=\"card-colored\" flex>\n                <mat-card-header>\n                    <button mat-button color=\"primary\" style=\"color: white\"\n                    (click)=\"returnSchedule()\">\n                        {{ schedule.schedules.schedule_name }}\n                    </button>\n                    <span class=\"fill-remaining-space\"></span>\n                    <button mat-mini-fab color=\"accent\" title=\"Reset Job\" (click)=\"resetSchedule()\">\n                        <mat-icon style=\"color: white\" color=\"warn\">\n                            change_circle</mat-icon>\n                    </button>\n\n                </mat-card-header>\n            </mat-card>\n        </div>\n        <br>\n\n        <div layout=\"row\">\n            <mat-card flex>\n                <mat-card-header>\n                    <span class=\"fill-remaining-space\"></span>\n                    <button mat-raised-button color=\"accent\" class=\"white-icon\" (click)=\"addStep()\">\n                        <mat-icon>add</mat-icon> New Step\n                    </button>\n                </mat-card-header>\n                <div layout=\"row\">\n                    <mat-form-field>\n                        <input matInput placeholder=\"Job Name\" [(ngModel)]=\"schedule.schedules.schedule_name\"\n                            [ngModelOptions]=\"{ standalone: true }\" />\n                    </mat-form-field>\n                    <mat-form-field flex>\n                        <input matInput placeholder=\"Email Distribution List\" [(ngModel)]=\"schedule.distribution.tolist\"\n                            [ngModelOptions]=\"{ standalone: true }\" />\n                    </mat-form-field>\n\n                </div>\n\n            </mat-card>\n\n\n\n\n        </div>\n\n        <div *ngFor=\"let rec of currjobSchedule | keyvalue\">\n            <mat-card class=\"classcomponent\" flex>\n                <mat-card-header>\n                    Step: &nbsp; {{rec.key}}\n                    <span class=\"fill-remaining-space\"></span>\n\n                    <button mat-mini-fab title=\"Delete Step\" class=\"white-icon\" (click)=\"deleteStep(rec.key)\">\n                        <mat-icon>delete_forever</mat-icon>\n\n                    </button>\n\n                </mat-card-header>\n\n                <td-chips color=\"primary\" [items]=\"jobRecords\"\n                [(ngModel)]=\"rec.value\" placeholder=\"Add New job\"\n                    (add)=\"handleAdd($event, rec.key)\"\n                    (remove)=\"handleRemove($event, rec.key)\"\n                    requireMatch\n                    >\n\n                    <ng-template td-chip let-chip=\"chip\">\n                        <mat-icon color=\"primary\">cloud_done</mat-icon>\n                        <span class=\"text-truncate\">&nbsp;&nbsp;{{ chip.job_name }}</span>\n                    </ng-template>\n                    <ng-template td-autocomplete-option let-option=\"option\">\n                        <div layout=\"row\" layout-align=\"start center\">\n                            <mat-icon color=\"primary\">cloud_done</mat-icon>\n                            {{ option.job_name }}\n                        </div>\n                    </ng-template>\n\n                </td-chips>\n\n            </mat-card>\n\n        </div>\n\n        <div layout=\"row\">\n            <mat-card class=\"classcomponent\" flex>\n                <mat-card-header>\n                    Schedule Frequency &nbsp;&nbsp;\n                    <mat-radio-group aria-label=\"Schedule Frequency\" [(ngModel)]=\"schedule.schedules.frequency\">\n                        <mat-radio-button value=\"Daily\" checked>Daily</mat-radio-button>\n                        <mat-radio-button value=\"Monthly\">Monthly</mat-radio-button>\n                    </mat-radio-group>\n                    <span class=\"fill-remaining-space\"></span>\n                    <mat-form-field>\n                        <mat-select [(ngModel)]=\"schedule.schedules.hours\" placeholder=\"Hour\">\n                            <mat-option *ngFor=\"let hr of dimhour\" [value]=\"hr\">\n                                {{ hr }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <mat-select [(ngModel)]=\"schedule.schedules.minutes\" placeholder=\"Hour\">\n                            <mat-option *ngFor=\"let hr of dimmin\" [value]=\"hr\">\n                                {{ hr }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </mat-card-header>\n                <div *ngIf=\"schedule.schedules.frequency === 'Daily'\">\n\n                    <div layout=\"row\">\n                        <mat-checkbox class=\"checkbox-margin\" [(ngModel)]=\"dailydays['monday']\">Monday\n                        </mat-checkbox>\n                        <mat-checkbox class=\"checkbox-margin\" [(ngModel)]=\"dailydays['tuesday']\">Tuesday\n                        </mat-checkbox>\n                        <mat-checkbox class=\"checkbox-margin\" [(ngModel)]=\"dailydays['wednesday']\">Wednesday\n                        </mat-checkbox>\n                        <mat-checkbox class=\"checkbox-margin\" [(ngModel)]=\"dailydays['thursday']\">Thursday\n                        </mat-checkbox>\n\n                    </div>\n                    <div layout=\"row\">\n                        <mat-checkbox class=\"checkbox-margin\" [(ngModel)]=\"dailydays['friday']\">Friday &nbsp;&nbsp;\n                        </mat-checkbox>\n                        <mat-checkbox class=\"checkbox-margin\" [(ngModel)]=\"dailydays['saturday']\">Saturday\n                        </mat-checkbox>\n                        <mat-checkbox class=\"checkbox-margin\" [(ngModel)]=\"dailydays['sunday']\">Sunday\n                        </mat-checkbox>\n                        <br>\n\n                    </div>\n                </div>\n                <div *ngIf=\"schedule.schedules.frequency !== 'Daily'\">\n                    <div layout=\"row\">\n                        Run on: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Day of Month</mat-label>\n                            <mat-select [(ngModel)]=\"schedule.schedules.day_of_month\" name=\"Day of Month\">\n                                <mat-option *ngFor=\"let item of dayofmonth\" [value]=\"item.day\">\n                                    {{item.value}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                    </div>\n\n\n                </div>\n\n                <div layout=\"row\">\n                    <span class=\"fill-remaining-space\"></span>\n                    <button mat-raised-button color=\"warn\" (click)=\"submit()\">update</button>\n                </div>\n\n            </mat-card>\n        </div>\n\n        <br /><br />\n\n    </div>\n    <!-- <div *ngIf=\"!jobsdataloaded\">\n        <td-message label=\"Error!\" sublabel=\"No Job Records found\" color=\"warn\" icon=\"error\">\n        </td-message>\n\n    </div> -->\n\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Router } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { SchedulesService } from '../../services/schedules.service';\nimport { IScheduleRecords, ISchedule, IScheduleConfig, IScheduleSelect, initScheduleRecord } from '../../models/schedule';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'schedulelist',\n  templateUrl: './schedulelist.component.html',\n  styleUrls: ['./schedulelist.component.css']\n})\n\nexport class SchedulelistComponent implements OnInit {\n\n  scheduleRecords: IScheduleRecords;\n  datarecords: Array<ISchedule>;\n  rowSelected = false;\n  selectedSchdRecord: IScheduleSelect = JSON.parse(JSON.stringify(initScheduleRecord));\n\n  @Output('select')\n  update: EventEmitter<IScheduleSelect> = new EventEmitter<IScheduleSelect>();\n\n  dataloaded = false;\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private router: Router,\n    private schedulesService: SchedulesService,\n    private sidSnackbarComponent: SidSnackbarComponent\n\n  ) {\n\n    this.getSchedules();\n  }\n\n  ngOnInit(): void {\n  }\n\n  getSchedules() {\n    this._loadingService.register('loadingsidsched');\n\n    this.schedulesService.getSchedules().subscribe(\n      result => {\n        this._loadingService.resolve('loadingsidsched')\n        this.scheduleRecords = result;\n        this.datarecords = this.scheduleRecords.records.schedules;\n        this.dataloaded = true;\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsidsched');\n        this.sidSnackbarComponent.systemError();\n\n      })\n  }\n\n  newSchedule() {\n    //this.sidSnackbarComponent.showMessage('Functionality not available');\n    this.router.navigate(['/editschedule', -1, 'e']);\n  }\n\n  editSchedule(sch: ISchedule) {\n    // this.selectedSchdRecord = sch;\n    this.selectedSchdRecord.schedules = sch;\n    this.selectedSchdRecord.scheduleconfig = this.searchSchedule(sch.id);\n\n    // this.selectedSchConfigs = this.searchSchedule(sch.id)\n\n    // we have to send the selected record to output\n    this.update.emit(this.selectedSchdRecord);\n  }\n  backSchedule() {\n    this.rowSelected = false;\n  }\n  updateSchedule() {\n    // disabled for now\n  }\n\n  groupByKey(array, key) {\n    return array\n      .reduce((hash, obj) => {\n        if (obj[key] === undefined){ return hash; }\n        return Object.assign(hash, { [obj[key]]: (hash[obj[key]] || []).concat(obj) })\n      }, {});\n  }\n\n  searchSchedule(schedule_id) {\n    // find appropriate Auth details for connector\n    let outputRecs: Array<IScheduleConfig>;\n    let searchDataset = [];\n    if (this.scheduleRecords.status === 'ok') {\n      searchDataset = this.scheduleRecords.records.scheduleconfig;\n    }\n    if (!searchDataset || searchDataset.length < 1) {\n      return outputRecs;\n    }\n    outputRecs = searchDataset.filter(\n      (obj => obj.id === schedule_id));\n//    console.log(this.groupByKey(outputRecs, 'job_sequence'));\n    return outputRecs;\n\n  }\n\n\n\n\n}\n","\n    <div *tdLoading=\"'loadingsidsched'; mode:'indeterminate';\n  type:'linear'; strategy:'overlay'; color:'primary'\">\n\n      <div *ngIf=\"dataloaded\">\n        <div *ngIf=\"!rowSelected\">\n          <mat-grid-list cols=\"3\" rowHeight=\"3:1\" gutterSize=\"20px\">\n            <mat-grid-tile>\n              <mat-list>\n                <mat-list-item style=\"cursor: pointer\" (click)=\"newSchedule()\">\n                  <mat-icon color=\"primary\" matListIcon>add</mat-icon>\n                  <div mat-line>New Schedule</div>\n                </mat-list-item>\n              </mat-list>\n\n            </mat-grid-tile>\n            <mat-grid-tile *ngFor=\"let schd of datarecords\" style=\"cursor: pointer\">\n              <mat-list>\n                <mat-list-item (click)=\"editSchedule(schd)\">\n                    <mat-icon color=\"primary\" matListIcon>share</mat-icon>\n                  <div mat-line>{{schd.schedule_name}}</div>\n                  <div mat-line>Frequency: {{schd.frequency}}</div>\n                  <div mat-line>Creation Date: {{schd.create_date}}</div>\n\n                </mat-list-item>\n              </mat-list>\n            </mat-grid-tile>\n          </mat-grid-list>\n\n        </div>\n\n      </div>\n\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-schedulelog',\n  templateUrl: './schedulelog.component.html',\n  styleUrls: ['./schedulelog.component.css']\n})\nexport class SchedulelogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>schedulelog works!</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\n\nimport { ITdDataTableColumn } from '@covalent/core/data-table';\nimport { TdDataTableService, TdDataTableSortingOrder, ITdDataTableSortChangeEvent, } from \"@covalent/core/data-table\";\nimport { IPageChangeEvent } from '@covalent/core/paging';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TdLoadingService } from '@covalent/core/loading';\n\nimport { SchedulesService } from '../../services/schedules.service';\nimport { IScheduleSelect, ISchedule, ISchedulelog, IScheduleJobrun } from '../../models/schedule';\nimport * as moment from 'moment';\n\nimport { JoblogsService } from '../../services/joblogs.service';\nimport { saveAs as importedSaveAs } from 'file-saver';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\n\n@Component({\n  selector: 'schedulerecord',\n  templateUrl: './schedulerecord.component.html',\n  styleUrls: ['./schedulerecord.component.css']\n})\n\nexport class SchedulerecordComponent implements OnInit {\n\n  markasComplete = false;\n  schRunDate = new FormControl(new Date(), Validators.required);\n  schedule_id: number;\n\n  scheduleRecord: IScheduleSelect;\n\n  // @Output('close')\n  // closeflag: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n\n  dataloaded = false;\n  logloaded = false;\n  logSelected = false;\n  scheduleLogRecord: Array<ISchedulelog>;\n  groupedRecords;\n\n  configWidthColumns: ITdDataTableColumn[] = [\n    { name: 'schedulelog_id', label: 'Id', width: 30 },\n    { name: 'run_date', label: 'Run Date', width: 150 },\n    { name: 'status', label: 'Status', width: 100 },\n    { name: 'start_date', label: 'Start Time', width: 200 },\n    { name: 'end_date', label: 'End Time', width: 200 },\n    { name: 'message', label: 'message', width: 390 },\n\n  ];\n\n  filteredData: any[] = [];\n  filteredTotal = 0;\n  selectedRec: ISchedulelog;\n  rowSelected = false;\n  searchTerm = \"\";\n  fromRow = 1;\n  currentPage = 1;\n  pageSize = 50;\n  sortBy = \"schedulelog_id\";\n  selectedRow: any[] = [];\n  sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Descending;\n  minDate = new Date(2020, 1, 1);\n  maxDate = new FormControl(new Date());\n\n  currDate = new Date();\n  sDate = (new Date()).setDate((new Date()).getDate() - 30);\n  selectStartDate = new FormControl(new Date(), Validators.required);\n  selectEndDate = new FormControl(new Date(), Validators.required);\n\n\n  constructor(\n    private _loadingService: TdLoadingService,\n    private schedulesService: SchedulesService,\n    private _dataTableService: TdDataTableService,\n    private joblogsService: JoblogsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private sidSnackbarComponent: SidSnackbarComponent\n\n  ) {\n\n    let now = new Date();\n    let monthAgo = new Date();\n    monthAgo.setMonth(now.getMonth() - 1);\n    this.selectStartDate = new FormControl(monthAgo, Validators.required);\n    this.schedule_id = this.route.snapshot.params['id'];\n    this.getSchedule();\n\n  }\n\n  ngOnInit(): void {\n    // console.log(this.groupedRecords);\n\n  }\n\n  getSchedule() {\n    this._loadingService.register('loadingsidsch');\n\n    this.schedulesService.getScheduleById(\n      String(this.schedule_id)).subscribe(\n      result => {\n        this._loadingService.resolve('loadingsidsch')\n        if(result.status != 'ok'){\n          this.sidSnackbarComponent.showMessage(result.message);\n          return\n        }\n        this.scheduleRecord = result.records;\n        this.getScheduleLog();\n        this.dataloaded = true;\n        this.groupedRecords = this.groupByKey(this.scheduleRecord.scheduleconfig, 'job_sequence');\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsidsch');\n        this.sidSnackbarComponent.systemError();\n\n      })\n  }\n\n\n  editSchedule(sch: ISchedule) {\n\n    // we have to send the selected record to output\n    // this.update.emit(this.selectedSchConfigs)\n  }\n\n  groupByKey(array, key) {\n    return array\n      .reduce((hash, obj) => {\n        if (obj[key] === undefined) return hash;\n        return Object.assign(hash, { [obj[key]]: (hash[obj[key]] || []).concat(obj) })\n      }, {});\n  }\n\n  runschedule() {\n\n    const runDate = moment(this.schRunDate.value);\n    let markComplete = 'N';\n    if (!runDate.isValid()) {\n      this.sidSnackbarComponent.showMessage('Invalid Date');\n      return;\n    }\n    if (this.markasComplete) {\n      markComplete = 'Y'\n    }\n    this._loadingService.register('loadingsidsch');\n\n    this.schedulesService.runSchedule(\n      String(this.scheduleRecord.schedules.id),\n      String(runDate.valueOf()), markComplete\n    ).subscribe(\n      result => {\n        this._loadingService.resolve('loadingsidsch')\n        this.sidSnackbarComponent.showMessage(result.message);\n\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsidsch');\n        this.sidSnackbarComponent.systemError();\n\n      })\n\n  }\n\n  getScheduleLog() {\n    this._loadingService.register('loadingsidsch');\n    let startDate = moment(this.selectStartDate.value);\n    let endDate = moment(this.selectEndDate.value);\n\n    this.schedulesService.getScheduleLog(\n      String(this.scheduleRecord.schedules.id),\n      String(startDate.valueOf()),\n      String(endDate.valueOf())\n    ).subscribe(\n      result => {\n        this._loadingService.resolve('loadingsidsch')\n        if(result.status != 'ok'){\n          this.sidSnackbarComponent.showMessage(result.message);\n          return\n        }\n\n        this.scheduleLogRecord = result.records;\n        this.filterTable();\n        this.logloaded = true;\n\n      },\n      err => {\n        console.log(err);\n        this._loadingService.resolve('loadingsidsch');\n        this.sidSnackbarComponent.systemError();\n\n      })\n\n  }\n\n  search(searchTerm: string): void {\n    this.searchTerm = searchTerm;\n    this.filterTable();\n  }\n  page(pagingEvent: IPageChangeEvent): void {\n    this.fromRow = pagingEvent.fromRow;\n    this.currentPage = pagingEvent.page;\n    this.pageSize = pagingEvent.pageSize;\n    this.filterTable();\n  }\n\n  showAlert(event: any): void {\n    const row: any = event.row;\n    // .. do something with event.row\n  }\n\n  filterTable() {\n    let newData = this.scheduleLogRecord;\n    if (Object.keys(newData).length === 0 && newData.constructor === Object) {\n      return;\n    }\n    const excludedColumns: string[] = this.configWidthColumns\n      .filter((column: ITdDataTableColumn) => {\n        return (\n          (column.filter === undefined && column.hidden === true) ||\n          (column.filter !== undefined && column.filter === false)\n        );\n      })\n      .map((column: ITdDataTableColumn) => {\n        return column.name;\n      });\n\n    newData = this._dataTableService.filterData(\n      newData,\n      this.searchTerm,\n      true,\n      excludedColumns\n    );\n\n    newData = this._dataTableService.filterData(\n      newData, this.searchTerm, true, excludedColumns);\n    this.filteredTotal = newData.length;\n    newData = this._dataTableService.sortData(\n      newData, this.sortBy, this.sortOrder);\n    newData = this._dataTableService.pageData(\n      newData, this.fromRow, this.currentPage * this.pageSize);\n    this.filteredData = newData;\n\n  }\n\n  selectRecord(event: any) {\n\n    this.selectedRec = this.scheduleLogRecord.filter(\n      data => {\n        return data.schedulelog_id == event.row.schedulelog_id;\n      }\n    )[0];\n    this.rowSelected = true;\n\n  }\n\n  redirectLog(jobrun_id){\n    this.router.navigate(['/joblogdetails',jobrun_id])\n  }\n  redirectJob(job_id){\n    this.router.navigate(['/jobdetails',job_id])\n  }\n\n\n  downLoadLog(job: IScheduleJobrun) {\n    // download the log file\n    let downloadfile = false;\n\n    if (job.total_count && job.total_count > 0) {\n      if ((job.failure_count && job.failure_count > 0) || (\n        job.warning_count && job.warning_count > 0)\n      ) {\n        downloadfile = true;\n      }\n    }\n    if (!downloadfile) {\n      this.sidSnackbarComponent.showMessage('Log file not available');\n      return;\n    }\n\n    this._loadingService.register(\"loadingsidsch\");\n    this.joblogsService.downloadLog(\n      String(job.jobrun_id)).subscribe(\n        blob => {\n          // const date = new Date().toLocaleDateString();\n          this.selectedRec.run_date\n          const fileName = 'sid_log_'.concat(job.job_name).concat(\n            job.run_date).concat('.xlsx');\n          importedSaveAs(blob, fileName);\n          this._loadingService.resolve(\"loadingsidsch\");\n        },\n        error => {\n          this.sidSnackbarComponent.showMessage('Download Error');\n          this._loadingService.resolve(\"loadingsidsch\");\n        }\n      );\n  }\n  cancelLog(){\n    this.rowSelected = false;\n  }\n  updateSchedule() {\n    this.router.navigate(['/editschedule', this.schedule_id, 'e']);\n  }\n  cloneSchedule(){\n    this.router.navigate(['/editschedule', this.schedule_id, 'c']);\n  }\n\n  deleteSchedule(){\n\n  }\n\n}\n","<div class=\"sidcontainer\">\n  <div\n    *tdLoading=\"\n      'loadingsidsch';\n      mode: 'indeterminate';\n      type: 'linear';\n      strategy: 'overlay';\n      color: 'primary'\n    \"\n  >\n    <div *ngIf=\"dataloaded\">\n      <div layout=\"row\">\n        <mat-card class=\"card-colored\" flex>\n          <mat-card-header>\n          <button mat-button color=\"primary\" style=\"color: white;\" disabled>\n            {{ scheduleRecord.schedules.schedule_name }}\n          </button>\n          <span class=\"fill-remaining-space\"></span>\n          <button mat-mini-fab color=\"accent\"\n          title=\"Clone Schedule\"\n          class=\"white-icon\"\n          (click)=\"cloneSchedule()\">\n            <mat-icon>content_copy</mat-icon>\n          </button>\n\n          <button mat-mini-fab color=\"accent\"\n        title=\"Edit Schedule\"\n        class=\"white-icon\"\n        (click)=\"updateSchedule()\">\n          <mat-icon>mode</mat-icon>\n        </button>\n        <button mat-mini-fab color=\"warn\"\n        title=\"Delete Job\"\n        class=\"white-icon\"\n        (click)=\"deleteSchedule()\"\n        disabled>\n          <mat-icon>delete_forever</mat-icon>\n        </button>\n\n      </mat-card-header>\n\n        </mat-card>\n      </div>\n      <br/><br/>\n\n        <div layout=\"row\">\n            <mat-card flex>\n              <mat-card-header>\n                <mat-card-subtitle>\n                  <section>\n                    Schedule Re-run:\n                    <mat-checkbox\n                      class=\"checkbox-margin\"\n                      [(ngModel)]=\"markasComplete\"\n                      >Mark as Complete\n                    </mat-checkbox>\n                  </section>\n                </mat-card-subtitle>\n              </mat-card-header>\n              <mat-card-content>\n                <br/>\n                <div layout=\"row\">\n                  <mat-form-field color=\"primary\" class=\"date-field\">\n                    <input\n                      matInput\n                      [max]=\"currDate\"\n                      [formControl]=\"schRunDate\"\n                      [matDatepicker]=\"picker\"\n                      placeholder=\"Schedule Run Date\"\n                    />\n                    <mat-datepicker-toggle\n                      matSuffix\n                      [for]=\"picker\"\n                    ></mat-datepicker-toggle>\n                    <mat-datepicker #picker disabled=\"false\" color=\"primary\">\n                    </mat-datepicker>\n                  </mat-form-field>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button mat-mini-fab color=\"primary\"\n                  title=\"Run Schedule\"\n                  class=\"white-icon\"\n                  (click)=\"runschedule()\">\n                    <mat-icon>schedule_send</mat-icon>\n                  </button>\n\n\n\n                </div>\n              </mat-card-content>\n            </mat-card>\n        </div>\n        <br/>\n        <div layout=\"row\">\n          <div *ngIf=\"logloaded && scheduleLogRecord && !rowSelected\">\n            <mat-card flex>\n              <mat-card-header>\n                <mat-card-subtitle>\n                  <section>Run Logs: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</section>\n                </mat-card-subtitle>\n                <mat-form-field color=\"primary\" class=\"date-field\">\n                  <input\n                    matInput\n                    [min]=\"minDate\"\n                    [max]=\"selectEndDate.value\"\n                    [formControl]=\"selectStartDate\"\n                    [matDatepicker]=\"picker\"\n                    placeholder=\"Start Date\"\n                  />\n                  <mat-datepicker-toggle\n                    matSuffix\n                    [for]=\"picker\"\n                  ></mat-datepicker-toggle>\n                  <mat-datepicker #picker disabled=\"false\" color=\"primary\">\n                  </mat-datepicker>\n                </mat-form-field>\n                <mat-form-field color=\"primary\" class=\"date-field\">\n                  <input\n                    matInput\n                    [min]=\"minDate\"\n                    [max]=\"maxDate\"\n                    [matDatepicker]=\"picker2\"\n                    placeholder=\"End Date\"\n                    [formControl]=\"selectEndDate\"\n                  />\n                  <mat-datepicker-toggle\n                    matSuffix\n                    [for]=\"picker2\"\n                  ></mat-datepicker-toggle>\n                  <mat-datepicker #picker2 disabled=\"false\" color=\"primary\">\n                  </mat-datepicker>\n                </mat-form-field>\n                <div class=\"search-box\">\n                  <button\n                    mat-mini-fab\n                    color=\"primary\"\n                    class=\"white-icon\"\n                    (click)=\"getScheduleLog()\"\n                  >\n                    <mat-icon>done</mat-icon>\n                  </button>\n                </div>\n              </mat-card-header>\n\n              <mat-divider> </mat-divider>\n\n              <!-- <div layout=\"row\" layout-align=\"start center\" class=\"pad-left-sm pad-right-sm\">\n                                  <td-search-box #searchBox backIcon=\"arrow_back\" class=\"push-right-sm\"\n                                      placeholder=\"Search Connector\" (searchDebounce)=\"search($event)\" [alwaysVisible]=\"true\"\n                                      flex>\n                                  </td-search-box>\n                              </div>\n                              <mat-divider></mat-divider> -->\n              <div layout=\"row\" flex>\n                <td-data-table\n                  [sortable]=\"true\"\n                  [clickable]=\"true\"\n                  [selectable]=\"false\"\n                  (rowClick)=\"selectRecord($event)\"\n                  [data]=\"filteredData\"\n                  [columns]=\"configWidthColumns\"\n                  [style.height.px]=\"400\"\n                  [sortBy]=\"sortBy\"\n                >\n                </td-data-table>\n              </div>\n              <div layout=\"row\">\n                <td-paging-bar\n                  #pagingBar\n                  [pageSize]=\"pageSize\"\n                  [total]=\"filteredTotal\"\n                  (change)=\"page($event)\"\n                >\n                  <span hide-xs>Rows per page:</span>\n                  <mat-select\n                    [style.width.px]=\"50\"\n                    [(ngModel)]=\"pageSize\"\n                    name=\"pagesize\"\n                  >\n                    <mat-option\n                      *ngFor=\"let size of [50, 100, 200, 500]\"\n                      [value]=\"size\"\n                    >\n                      {{ size }}\n                    </mat-option>\n                  </mat-select>\n                  {{ pagingBar.range }}\n                  <span hide-xs>of {{ pagingBar.total }}</span>\n                </td-paging-bar>\n              </div>\n            </mat-card>\n          </div>\n\n        </div>\n        <div layout=\"row\">\n\n          <div *ngIf=\"rowSelected\" class=\"jobclass\" style=\"overflow-x: auto\">\n\n            <mat-card flex>\n              <mat-card-subtitle>\n                <button mat-mini-fab color=\"primary\"\n                title=\"Back to Log table\"\n                class=\"white-icon\"\n                (click)=\"cancelLog()\">\n                  <mat-icon>close</mat-icon>\n                </button>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                Run Date: {{this.selectedRec.run_date}}\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                Start: {{this.selectedRec.start_date}}\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                End: {{ this.selectedRec.end_date }}\n\n              </mat-card-subtitle>\n              <mat-card-content>\n                Log Message: {{this.selectedRec.message}}\n                <br>\n              </mat-card-content>\n\n              <table>\n                <tr>\n                  <th>Job Name</th>\n                  <th>Status</th>\n                  <th>Total Count</th>\n                  <th>Success Count</th>\n                  <th>Failure Count</th>\n                  <th>Warning Count</th>\n                  <th>Log</th>\n                </tr>\n\n                <tr *ngFor=\"let job of selectedRec.jobrun\">\n                  <td>\n                    <button mat-raised-button\n                    color=\"primary\"\n                    (click)=\"redirectJob(job.job_id)\"\n                    >\n                      {{ job.job_name }}\n                    </button>\n                  </td>\n                  <td>{{ job.status }}</td>\n                  <td>{{ job.total_count }}</td>\n                  <td>{{ job.success_count }}</td>\n                  <td>{{ job.failure_count }}</td>\n                  <td>{{ job.warning_count }}</td>\n                  <td>\n                    <button\n                      mat-mini-fab\n                      color=\"primary\"\n                      (click)=\"redirectLog(job.jobrun_id)\"\n                      aria-label=\"Download log\"\n                    >\n                      <mat-icon class=\"white-icon\">text_snippet</mat-icon>\n                    </button>\n                  </td>\n                </tr>\n              </table>\n            </mat-card>\n\n          </div>\n        </div>\n\n\n        <div layout=\"row\">\n          <!-- <table style=\"width: 80%\">\n            <tr>\n              <th>Step</th>\n              <th>Job Name</th>\n            </tr>\n\n            <tr *ngFor=\"let record of groupedRecords | keyvalue\">\n              <td>{{ record.key }}</td>\n              <td>\n                <div *ngFor=\"let sch of record.value\">\n                  {{ sch.job_name }} &nbsp;&nbsp;\n                </div>\n              </td>\n            </tr>\n          </table> -->\n\n          <!-- <editschedule [schedule]=\"scheduleRecord\">\n\n          </editschedule> -->\n\n        </div>\n\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IScheduleRecords, IScheduleSelect, IScheduleConfig } from '../models/schedule';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedules.component.html',\n  styleUrls: ['./schedules.component.css']\n})\nexport class SchedulesComponent implements OnInit {\n\n  rowSelected = false;\n  selectedScheduleRecord: IScheduleSelect;\n\n  constructor(\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectedSchedule(event){\n    // this.selectedScheduleRecord = event;\n    this.router.navigate(['/scheduledetails', event.schedules.id])\n  }\n\n  closeRecord(event){\n    this.rowSelected = false;\n  }\n\n\n}\n","<div class=\"sidcontainer\">\n\n  <div *tdLoading=\"'loadingsidschedule'; mode:'indeterminate';\n  type:'linear'; strategy:'overlay'; color:'primary'\">\n\n    <div *ngIf=\"!rowSelected\">\n      <schedulelist (select)=\"selectedSchedule($event)\">\n      </schedulelist>\n    </div>\n    <!-- <div *ngIf=\"rowSelected\">\n      <schedulerecord [scheduleRecord]=\"selectedScheduleRecord\" (close)=\"closeRecord($event)\">\n      </schedulerecord>\n    </div> -->\n\n\n  </div>\n\n</div>","import { Injectable, NgZone } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject, pipe, EMPTY } from 'rxjs';\nimport { finalize } from \"rxjs/operators\";\n\nimport { catchError, switchMap, filter, take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { Tokens, DecodedToken } from '../models/tokens';\n\nimport { UserAuthService } from '../services/auth.service';\nimport { HOST_API } from '../app.config';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  private isRefreshing = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(private userAuthService: UserAuthService,\n    private zone: NgZone,\n    private router: Router) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let token = this.userAuthService.token;\n    if (token) {\n      request = this.addToken(request, token);\n    }\n\n    return next.handle(request).pipe(catchError(error => {\n      if (request.url.endsWith(\"/sid-token/\")) {\n        return throwError(error);\n      }\n      if (error instanceof HttpErrorResponse && error.status === 401) {\n        // if 401 due to expired refresh token, need to relogin\n        if (request.url.endsWith(\"/token/refresh/\")) {\n          this.userAuthService.logout();\n          this.zone.run(() => this.router.navigate(['/login']));\n          return EMPTY;\n        }\n        return this.handle401Error(request, next);\n      }\n      else {\n        return throwError(error);\n      }\n    })\n    ) as Observable<HttpEvent<any>>;\n  }\n\n  private addToken(request: HttpRequest<any>, token: string) {\n    return request.clone({\n      setHeaders: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  }\n\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\n    console.log('handle 401');\n    if (!this.isRefreshing) {\n      console.log('Refreshing...');\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null)\n\n      return this.userAuthService.refreshToken().pipe(\n        switchMap((token) => {\n          console.log('inside switchmap....')\n          this.isRefreshing = false;\n          return next.handle(this.addToken(request, token));\n        })).pipe(finalize(() => {\n          console.log('inside finalize');\n          this.isRefreshing = false;\n      }));\n\n      // return this.userAuthService.refreshToken().subscribe(\n      //   (token) => {\n      //     this.isRefreshing = false;\n      //     this.addToken(request, token)\n      //   }\n      // )\n\n    } else {\n      console.log('not refreshing...so sending it to client')\n\n          // return next.handle(this.addToken(request,\n          //   this.userAuthService.token));\n\n          return this.refreshTokenSubject.pipe(\n            filter(token => token != null),\n            take(1),\n            switchMap(access => {\n              return next.handle(this.addToken(request, access));\n            }));\n\n\n      }\n  }\n}","import { Injectable, NgZone } from '@angular/core';\nimport { HttpClient, HttpInterceptor, HttpHeaders } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { map, tap, shareReplay } from 'rxjs/operators';\n\nimport * as jwt_decode from 'jwt-decode';\n\nimport * as moment from \"moment\";\n\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\n\nimport { IUserInput, IUserProfile } from '../models/userprofile';\nimport { UserProfileDataService } from '../services/userprofiledata.service';\n\nimport { HOST_API } from '../app.config';\nimport { MatRadioChange } from '@angular/material/radio';\n\n\n// import 'rxjs/add/observable/of';\n// import 'rxjs/add/operator/do';\n\n/*******************************************************************************\n  Authorisation service\n*******************************************************************************/\n\n\n@Injectable()\nexport class UserAuthService {\n\n    private loginurl = HOST_API + 'sid-token/';  // URL to web API\n    private refreshurl = HOST_API + 'token/refresh/';  // URL to web API\n    private logoffurl = HOST_API + 'logout/';  // URL to web API\n    private headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n    private userProfile: IUserProfile = { first_name: '', last_name: '', email_id: '', role: null, photo: '', isLoggedIn: false };\n\n    constructor(private http: HttpClient,\n        private router: Router,\n        private zone: NgZone,\n        private userProfileDataService: UserProfileDataService) {\n\n    }\n\n\n    login(data: IUserInput): Observable<any> {\n        return this.http.post<any>(\n            this.loginurl,\n            data,\n            { headers: this.headers })\n            .pipe(map(response => {\n                this.setSession(response, false)\n                return response;\n            }))\n\n\n    }\n\n    setSession(authResult, refreshFlag) {\n        const token = authResult.access;\n        const payload = jwt_decode(token);\n        const expiresAt = moment.unix(payload.exp);\n        localStorage.setItem('token', token);\n        this.setProfile();\n\n        if (!refreshFlag) {\n            localStorage.setItem('refresh', authResult.refresh);\n        }\n        localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n\n    }\n\n    private setProfile() {\n        const payload = jwt_decode(this.token);\n\n        this.userProfile.first_name = payload.first_name;\n        this.userProfile.last_name = payload.last_name;\n        this.userProfile.email_id = payload.email;\n        this.userProfile.photo = payload.photo;\n        this.userProfile.isLoggedIn = true;\n        this.userProfileDataService.profileRecord.next(this.userProfile);\n    }\n\n    get profile() {\n        this.setProfile()\n        return this.userProfile;\n    }\n\n    get token(): string {\n        return localStorage.getItem('token');\n    }\n    get rToken(): string {\n        return localStorage.getItem('refresh');\n    }\n\n\n    logout() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refresh');\n        localStorage.removeItem('expires_at');\n        this.userProfile.first_name = '';\n        this.userProfile.last_name = '';\n        this.userProfile.email_id = '';\n        this.userProfile.isLoggedIn = false;\n        this.userProfileDataService.profileRecord.next(this.userProfile);\n\n    }\n\n    refreshToken(): Observable<any> {\n            return this.http.post<any>(\n                this.refreshurl,\n                { 'refresh': this.rToken },\n                { headers: this.headers }\n            ).pipe(\n                map(response => {\n                    console.log('setting new session');\n                    this.setSession(response, true);\n                    return this.token;\n                })\n            );\n    }\n\n    getExpiration() {\n        const expiration = localStorage.getItem('expires_at');\n        const expiresAt = JSON.parse(expiration);\n\n        return moment(expiresAt);\n    }\n\n    isAccessExpired() {\n        return moment().isBefore(this.getExpiration());\n\n    }\n    isLoggedIn() {\n        //return moment().isBefore(this.getExpiration());\n        if(this.token){\n            return true;\n        }\n        return false;\n    }\n\n    isLoggedOut() {\n        return !this.isLoggedIn();\n    }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private authService: UserAuthService, private router: Router) { }\n\n    canActivate() {\n        if (this.authService.token) {\n            if (this.authService.isLoggedIn()) {\n                //            return this.authService.refreshToken();\n                return this.authService.isLoggedIn();\n            } else {\n                //    this.authService.logout();\n                //    this.router.navigate(['login']);\n                if (this.authService.token) {\n                    this.authService.refreshToken().subscribe(\n                        result => {\n                            if (this.authService.isLoggedOut()) {\n                                this.router.navigate['login'];\n                                return false;\n                            }\n                        }\n                    );\n                    return true;\n                }\n                //return true;\n            }\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { HOST_API } from '../app.config';\nimport { IConnectionRecords } from '../models/connection';\nimport { IDimRecords } from '../models/dimensions';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionsService {\n  private connUrl = HOST_API + 'getconnectors/';  // URL to web API\n  private dimconnUrl = HOST_API + 'getdimconnectors/';  // URL to web API\n  private updateconnUrl = HOST_API + 'updateconnector/';  // URL to web API\n\n  constructor(private http: HttpClient) { }\n\n  getConnections() {\n    //    let params = new HttpParams().set('query', queryString);\n\n    return this.http.get<IConnectionRecords>(\n      this.connUrl,\n      //        { params: params }\n    );\n\n  }\n  getdimConnections() {\n    //    let params = new HttpParams().set('query', queryString);\n\n    return this.http.get<IDimRecords>(\n      this.dimconnUrl,\n      //        { params: params }\n    );\n\n  }\n\n  updateConnection(data: any): Observable<any> {\n    return this.http.post<any>(\n      this.updateconnUrl,\n      data.value\n    );\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { HOST_API } from '../app.config';\nimport { IDimRecords } from '../models/dimensions';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DimensionsService {\n  private dimconnUrl = HOST_API + 'getdimensions/';  // URL to web API\n\n  constructor(private http: HttpClient) { }\n\n  getdimConnections() {\n    //    let params = new HttpParams().set('query', queryString);\n\n    return this.http.get<IDimRecords>(\n      this.dimconnUrl,\n      //        { params: params }\n    );\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { HOST_API } from '../app.config';\nimport { IDocumentRecords } from '../models/documents';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentService {\n  private localFileUrl = HOST_API + 'localdocument/';  // URL to web API\n  private s3FileUrl = HOST_API + 's3document/';  // URL to web API\n\n  constructor(private http: HttpClient) { }\n\n  postDocument(fileToUpload: File, delimiter: string, lineterminator: string): Observable<IDocumentRecords> {\n    const formData: FormData = new FormData();\n    formData.append('document', fileToUpload, fileToUpload.name);\n    formData.append('delimiter', delimiter);\n    formData.append('lineterminator', lineterminator);\n\n    return this.http.post<IDocumentRecords>(\n      this.localFileUrl,\n      formData\n    );\n\n  }\n\n  s3Document(conn_id: string, filename: string, delimiter: string, lineterminator: string): Observable<IDocumentRecords> {\n    const formData: FormData = new FormData();\n    formData.append('conn_id', conn_id);\n    formData.append('document', filename);\n    formData.append('delimiter', delimiter);\n    formData.append('lineterminator', lineterminator);\n\n    return this.http.post<IDocumentRecords>(\n      this.s3FileUrl,\n      formData\n    );\n\n  }\n\n\n\n}\n","import { HOST_API } from '../app.config';\nimport { Observable } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { IExplorerRecords } from '../models/explorer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExplorerService {\n  private getTreebyIdUrl = HOST_API + 'gets3tree/';  // URL to web API\n  private getS3file = HOST_API + 'gets3file/';  // URL to web API\n\n  constructor(private http: HttpClient) { }\n\n  getTreebyId(conn_id: number) {\n    let params = new HttpParams().set('conn_id', String(conn_id));\n\n    return this.http.get<IExplorerRecords>(\n      this.getTreebyIdUrl,\n      { params: params }\n    );\n\n  }\n\n  downloadS3file(conn_id: number, filename: string): Observable<Blob> {\n    let params = new HttpParams().set('conn_id', String(conn_id)).set(\n      'filename', String(filename)\n    );\n    const options = {params, responseType: 'blob' as 'json'};\n\n    return this.http.get<Blob>(\n      this.getS3file,\n      options\n    );\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { HOST_API } from '../app.config';\nimport { IJoblogsRecords } from '../models/joblogs';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JoblogsService {\n  private joblogsUrl = HOST_API + 'getjoblogs/';  // URL to web API\n  private downloadlogUrl = HOST_API + 'downloadlog/';  // URL to web API\n  private jobrunByJobRunIdUrl = HOST_API + 'runjobbyjobrunid/';\n  private joblogByIdUrl = HOST_API + 'getjoblogbyid/';  // URL to web API\n\n  constructor(private http: HttpClient) { }\n\n  getLogs(startDateString: string, endDateString: string) {\n    const params = new HttpParams().set(\n      'startdate', startDateString).set('enddate', endDateString);\n\n    return this.http.get<IJoblogsRecords>(\n      this.joblogsUrl,\n      { params: params }\n    );\n\n  }\n  getLogById(jobrun_id: string) {\n    let params = new HttpParams().set(\n      'jobrun_id', jobrun_id);\n\n    return this.http.get<IJoblogsRecords>(\n      this.joblogByIdUrl,\n             { params: params }\n    );\n\n  }\n\n\n  runJobByJobRunId(job_id: string, jobrun_id: string) {\n    let params = new HttpParams().set(\n      'job_id', job_id).set(\n      'jobrun_id', jobrun_id);\n\n    return this.http.get<IJoblogsRecords>(\n      this.jobrunByJobRunIdUrl,\n             { params: params }\n    );\n\n  }\n\n  downloadLog(jobrun_id: string): Observable<Blob> {\n\n    const params = new HttpParams().set(\n      'jobrun_id', jobrun_id);\n      const options = {params, responseType: 'blob' as 'json'};\n\n    return this.http.get<Blob>(\n      this.downloadlogUrl, options\n    );\n\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { HOST_API } from '../app.config';\nimport { IJobsRecords, IJobModelRecords } from '../models/jobs';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsService {\n  private jobsUrl = HOST_API + 'getjobs/';\n  private jobsByIdUrl = HOST_API + 'getjobbyid/';\n  private jobrunByIdUrl = HOST_API + 'runjobbyid/';\n  private getConnModelsUrl = HOST_API + 'getconnmodels/';\n  private fetchConnModelsUrl = HOST_API + 'fetchconnmodels/';\n  private updateJobUrl = HOST_API + 'updatejob/';\n  private jobrunByFileUrl = HOST_API + 'runjobbyfile/';\n  private jobsListUrl = HOST_API + 'getjobslist/';\n\n  constructor(private http: HttpClient) { }\n\n  getJobs() {\n    //    let params = new HttpParams().set('query', queryString);\n\n    return this.http.get<IJobsRecords>(\n      this.jobsUrl,\n      //        { params: params }\n    );\n\n  }\n\n  getJobbyId(job_id: string) {\n       let params = new HttpParams().set('job_id', job_id);\n\n    return this.http.get<IJobsRecords>(\n      this.jobsByIdUrl,\n             { params: params }\n    );\n\n  }\n\n  runJobById(job_id: string, rundate: string) {\n    let params = new HttpParams().set(\n      'job_id', job_id).set(\n      'rundate', rundate);\n\n    return this.http.get<IJobsRecords>(\n      this.jobrunByIdUrl,\n             { params: params }\n    );\n\n  }\n\n\n  getConnModels(conn_id: string, model_name: string) {\n    let params = new HttpParams().set(\n      'conn_id', conn_id).set(\n        'model_name', model_name\n      );\n\n    return this.http.get<IJobModelRecords>(\n      this.getConnModelsUrl,\n             { params: params }\n    );\n\n  }\n\n  fetchConnModels(conn_id: string, model_name: string) {\n    let params = new HttpParams().set(\n      'conn_id', conn_id).set(\n        'model_name', model_name\n      );\n\n    return this.http.get<IJobModelRecords>(\n      this.fetchConnModelsUrl,\n             { params: params }\n    );\n\n  }\n\n  /* Post method */\n  updateJob(data: any): Observable<any> {\n    const formData: FormData = new FormData();\n    var postData = JSON.stringify(data);\n    formData.append('data', postData);\n\n    return this.http.post<any>(\n        this.updateJobUrl,\n        formData\n    );\n  }\n\n  runJobbyFile(job_id: string, fileToUpload: File, delimiter: string, lineterminator: string): Observable<IJobsRecords> {\n    const formData: FormData = new FormData();\n    formData.append('job_id', job_id);\n    formData.append('document', fileToUpload, fileToUpload.name);\n    formData.append('delimiter', delimiter);\n    formData.append('lineterminator', lineterminator);\n\n    return this.http.post<IJobsRecords>(\n      this.jobrunByFileUrl,\n      formData\n    );\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { HOST_API } from '../app.config';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordService {\n  private chgPasswdUrl = HOST_API + 'updatepassword/';  // URL to web API\n\n  constructor(private http: HttpClient) { }\n\n  changePasswd(formData: any): Observable<any> {\n\n    return this.http.post<any>(\n      this.chgPasswdUrl,\n      formData.value\n    );\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { HOST_API } from '../app.config';\nimport { IJobsRecords, IJobModelRecords } from '../models/jobs';\nimport { ISFVerifyQueryRecords } from '../models/salesforce';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesforceService {\n  private validateSFQueryUrl = HOST_API + 'validatesfquery/';\n\n  constructor(private http: HttpClient) { }\n\n  /* Post method */\n  validateSFQuery(data: any): Observable<ISFVerifyQueryRecords> {\n    const formData: FormData = new FormData();\n    var postData = JSON.stringify(data);\n    formData.append('data', postData);\n\n    return this.http.post<ISFVerifyQueryRecords>(\n        this.validateSFQueryUrl,\n        formData\n    );\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { HOST_API } from '../app.config';\nimport { IScheduleRecords, IScheduleLogRecords, IScheduleRecordById } from '../models/schedule';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchedulesService {\n  private scheduleUrl = HOST_API + 'getschedules/';  // URL to web API\n  private runScheduleUrl = HOST_API + 'runschedule/';  // URL to web API\n  private getScheduleLogUrl = HOST_API + 'getschedulelogs/';  // URL to web API\n  private getScheduleByIdUrl = HOST_API + 'getschedulebyid/';  // URL to web API\n  private updateScheduleUrl = HOST_API + 'updateschedule/';  // URL to web API\n\n  constructor(private http: HttpClient) { }\n\n  getSchedules() {\n    //    let params = new HttpParams().set('query', queryString);\n\n    return this.http.get<IScheduleRecords>(\n      this.scheduleUrl,\n      //        { params: params }\n    );\n\n  }\n  runSchedule(schedule_id: string, rundate: string, markcomplete: string) {\n    let params = new HttpParams().set(\n      'schedule_id', schedule_id).set(\n      'rundate', rundate).set(\n      'markcomplete', markcomplete)\n\n    return this.http.get<IScheduleRecords>(\n      this.runScheduleUrl,\n             { params: params }\n    );\n\n  }\n\n  getScheduleLog(schedule_id: string, startDate: string, endDate: string) {\n    let params = new HttpParams().set(\n      'schedule_id', schedule_id).set(\n        'startdate', startDate).set('enddate', endDate);\n\n    return this.http.get<IScheduleLogRecords>(\n      this.getScheduleLogUrl,\n             { params: params }\n    );\n\n  }\n\n  getScheduleById(schedule_id: string) {\n    let params = new HttpParams().set(\n      'schedule_id', schedule_id);\n\n    return this.http.get<IScheduleRecordById>(\n      this.getScheduleByIdUrl,\n             { params: params }\n    );\n  }\n\n  /* Post method */\n  updateSchedule(data: any): Observable<any> {\n    const formData: FormData = new FormData();\n    var postData = JSON.stringify(data);\n    formData.append('data', postData);\n\n    return this.http.post<IScheduleRecordById>(\n        this.updateScheduleUrl,\n        formData\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { IUserProfile } from '../models/userprofile';\n\nimport { BehaviorSubject } from 'rxjs';\n\n/*******************************************************************************\n    this is the storage area for userprofile\n    if the value is changed then it is broadcasted to all subscriber\n*******************************************************************************/\n\n@Injectable()\nexport class UserProfileDataService {\n    tempProfile: IUserProfile = { first_name: '', last_name: '', email_id: '' , role: null, photo: '', isLoggedIn: false};\n\n    profileRecord: BehaviorSubject<IUserProfile> = new BehaviorSubject<IUserProfile>(this.tempProfile);\n    constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TdLoadingService } from '@covalent/core/loading';\nimport { SidSnackbarComponent } from 'src/app/general/sidsnackbar/sidsnackbar.component';\nimport { PasswordService } from '../services/password.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  passwdForm: FormGroup;\n  submitted = false;\n  pwdChangeSuccess = false;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _loadingService: TdLoadingService,\n    private sidSnackbarComponent: SidSnackbarComponent,\n    private passwordService: PasswordService\n  ) {\n    this.createForm();\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  createForm() {\n    this.passwdForm = this._formBuilder.group({\n      curr_passwd: ['', Validators.required],\n      new_passwd1: ['', [Validators.required, Validators.minLength(8)]],\n      new_passwd2: ['', [Validators.required]]\n    }, {\n      // validator: this.validatePasswd()\n    }\n    );\n\n  }\n\n  validatePasswd() {\n    if(this.passwdForm.controls['curr_passwd'].value.length < 6){\n      this.sidSnackbarComponent.showMessage(\n        'Invalid current password'\n      );\n      return false\n\n    }\n      if (this.passwdForm.controls['new_passwd1'].value !==\n        this.passwdForm.controls['new_passwd2'].value) {\n        this.sidSnackbarComponent.showMessage(\n          'Passwords do not match'\n        );\n        return false\n        // this.passwdForm.controls['new_passwd1'].setErrors({ mustMatch: true });\n\n      }\n      // else {\n      //   this.passwdForm.controls['new_passwd1'].setErrors(null);\n      // }\n      return true\n  }\n  onPasswordChange() {\n    if (this.passwdForm.invalid) {\n      return;\n  }\n\n    if(this.validatePasswd()){\n      this._loadingService.register('loadingsidjob');\n      this.passwordService.changePasswd(this.passwdForm).subscribe(\n        (result) => {\n          if(result.status == 'ok'){\n            this.sidSnackbarComponent.showMessage(\n              result.message, true\n            );\n          }else{\n            this.sidSnackbarComponent.showMessage(\n              result.message);\n\n          }\n          this._loadingService.resolve('loadingsidjob');\n\n        },\n        (err) => {\n          console.log(err);\n          this._loadingService.resolve('loadingsidjob');\n          this.sidSnackbarComponent.systemError();\n\n        }\n        );\n\n\n\n\n  }\n\n  }\n}\n","<div class=\"sidcontainer\">\r\n  <div *tdLoading=\"\r\n      'loadingsidjob';\r\n      mode: 'indeterminate';\r\n      type: 'linear';\r\n      strategy: 'overlay';\r\n      color: 'primary'\r\n    \">\r\n    <mat-card class=\"sid-card basic-container\">\r\n      <form [formGroup]=\"passwdForm\" (ngSubmit)=\"onPasswordChange()\">\r\n\r\n        <mat-card-title color=\"primary\" layout=\"row\" layout-align=\"start center\"><span class=\"md-title\">Change\r\n            Password</span>\r\n        </mat-card-title>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-content class=\"push-bottom-none\">\r\n\r\n          <div layout=\"row\" cellspacing=\"1\">\r\n            <mat-form-field flex>\r\n\r\n              <input matInput required type=\"password\" formControlName=\"curr_passwd\" placeholder=\"Current Password\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <ul>\r\n              <li>Your password must contain at least 8 characters.</li>\r\n              <li>Your password must contain a mixture of numbers and letters.</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div layout=\"row\">\r\n            <mat-form-field flex>\r\n\r\n              <input matInput required type=\"password\" formControlName=\"new_passwd1\" placeholder=\"New Password\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div layout=\"row\">\r\n            <mat-form-field flex>\r\n\r\n              <input matInput required type=\"password\" formControlName=\"new_passwd2\" placeholder=\"Confirm Password\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        </mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <div layout=\"row\" class=\"pad-sm\">\r\n            <button mat-raised-button flex color=\"primary\" class=\"text-upper\">Submit\r\n            </button>\r\n          </div>\r\n        </mat-card-actions>\r\n      </form>\r\n\r\n\r\n    </mat-card>\r\n\r\n\r\n  </div>\r\n</div>","import { NgModule, } from '@angular/core';\nimport { CommonModule, } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, } from '@angular/forms';\n\nimport { CovalentDataTableModule } from '@covalent/core/data-table';\nimport { CovalentMediaModule } from '@covalent/core/media';\nimport { CovalentLoadingModule } from '@covalent/core/loading';\nimport { CovalentNotificationsModule } from '@covalent/core/notifications';\nimport { CovalentLayoutModule } from '@covalent/core/layout';\nimport { CovalentMenuModule } from '@covalent/core/menu';\nimport { CovalentPagingModule } from '@covalent/core/paging';\nimport { CovalentSearchModule } from '@covalent/core/search';\nimport { CovalentStepsModule } from '@covalent/core/steps';\nimport { CovalentCommonModule } from '@covalent/core/common';\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\nimport { CovalentExpansionPanelModule } from '@covalent/core/expansion-panel';\nimport { CovalentMessageModule } from '@covalent/core/message';\nimport { CovalentVirtualScrollModule } from '@covalent/core/virtual-scroll';\nimport { CovalentFileModule } from '@covalent/core/file';\nimport { CovalentBreadcrumbsModule } from '@covalent/core/breadcrumbs';\nimport { CovalentChipsModule } from '@covalent/core/chips';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTreeModule } from '@angular/material/tree';\n\nconst ANGULAR_MODULES: any[] = [\n    FormsModule, ReactiveFormsModule,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule, MatCardModule, MatIconModule,\n    MatListModule, MatMenuModule, MatTooltipModule,\n    MatSlideToggleModule, MatInputModule, MatCheckboxModule,\n    MatToolbarModule, MatSnackBarModule, MatSidenavModule,\n    MatTabsModule, MatSelectModule, MatRadioModule, MatGridListModule,\n    MatTableModule, MatFormFieldModule, MatDatepickerModule,\n    MatNativeDateModule, MatSliderModule, MatStepperModule,\n    MatTreeModule\n];\n\nconst COVALENT_MODULES: any[] = [\n    CovalentDataTableModule, CovalentMediaModule, CovalentLoadingModule,\n    CovalentNotificationsModule, CovalentLayoutModule, CovalentMenuModule,\n    CovalentPagingModule, CovalentSearchModule, CovalentStepsModule,\n    CovalentCommonModule, CovalentDialogsModule, CovalentExpansionPanelModule,\n    CovalentMessageModule, CovalentVirtualScrollModule, CovalentFileModule,\n    CovalentBreadcrumbsModule, CovalentChipsModule\n];\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ANGULAR_MODULES,\n        MATERIAL_MODULES,\n        COVALENT_MODULES,\n    ],\n    declarations: [\n\n    ],\n    exports: [\n        ANGULAR_MODULES,\n        MATERIAL_MODULES,\n        COVALENT_MODULES,\n    ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\nprod\nuat\nlocal\n*/\nexport let hostType = 'local';\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}